<!DOCTYPE html>
<html lang="en">
<head>
    <title>Aplikasi Prediksi dan Rekomendasi Nilai Mahasiswa</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">

    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Lato">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    
    <script src="http://code.jquery.com/jquery-1.10.2.js"></script>
    <script src="http://code.jquery.com/ui/1.11.2/jquery-ui.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" egrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
</head>

<style>
    body,h1,h2,h3,h4,h5,h6 {font-family: "Lato", sans-serif}
    .w3-bar,h1,button {font-family: "Montserrat", sans-serif}
    .fa-anchor,.fa-coffee {font-size:200px}

    .chsbutton {
        width: 20%;
        background-color: #150754;
        border: none;
        border-radius: 10px;
        color: white;
        font-weight: bold;
        padding: 10px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        margin: 10px 0px;
        cursor: poer;
        -webkit-transition-duration: 0.4s; /* Safari */
        transition-duration: 0.4s;
    }
   
    .button2:hover {
        box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19)
    };
</style>

<body style="background-image: url(bg.png); background-size: cover;">

<!-- Header -->
<header class="w3-container w3-center" style="padding:30px 16px;">
      <img src="Logo.jpg"  width="300">
      <h1 class="w3-margin" style="color: black; font-weight: bolder;">Aplikasi Prediksi Nilai dan Rekomendasi Mata Kuliah Universitas Tarumanagara</h1>
</header>

<div class="choice-center">
    <center>
        <br><br>
        <div class="text-center">
            <button class="chsbutton button2"><a href="DNilaiMhs">Nilai Saya</a></button>
        </div>
        <br>
        <div class="text-center">
            <button class="chsbutton button2"><a href="DRek">Daftar MataKuliah</a></button>
        </div>
        <br>
        <div class="text-center">
            <button class="chsbutton button2"><a href="Rekomendasi">Cek Hasil Rekomendasi</a></button>
        </div>
        <br>
        <div class="text-center">
            <button class="chsbutton button2"><a href="Home">Keluar</a></button>
        </div>
    </center>
  </div>


<div class="C45"> 
    <% var total=20; %>
    <% var TotalRek=0; %>
    <% var TotalMK=0; %>
    <% for (var a=0;a < total; a++){ %>
        <%  if (datalist[a].Rek==true) { %>
            <%  TotalRek=TotalRek+1; %>
        <% } %>
        <%  if(datalist[a].Rek==false) { %>
            <%  TotalMK=TotalMK+1; %> 
        <% } %>
    <% } %>

    <% var EntropyTotal=((-TotalMK/total)*Math.log2(TotalMK/total))+((-TotalRek/total)*Math.log2(TotalRek/total)); %>
    <% var data = [{ 
        matkul : [{
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            }
        ]},{ 
        matkul : [{
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
        ]},{ 
        matkul : [{
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
        ]},{ 
        matkul : [{
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
        ]},{ 
        matkul : [{
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
        ]},{ 
        matkul : [{
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
        ]},{ 
        matkul : [{
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
        ]},{ 
        matkul : [{
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
        ]},{ 
        matkul : [{
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
            {
                total: 0,Rek:0,MK:0,entropy:0
            },
    ]}]; %>

    <% var matkulawal = ""; %>
    <% var c = 0; %>
    <% for (var j=0; j < 9; j++){ %>
        <% if (j==0){ %>
            <% matkulawal="Data Mining and Data Analytics"; %>
        <% } %>
        <% if (j==1){ %>
            <%  matkulawal="Machine Learning"; %>
        <% } %>
        <% if (j==2){ %>
            <%  matkulawal="Natural Language Processing"; %>
        <% } %>
        <% if (j==3){ %>
            <%  matkulawal="Business Process Re-Engineering"; %>
        <% } %>
        <% if (j==4){ %>
            <%  matkulawal="Artificial Neural Network"; %>
        <% } %>
        <% if (j==5){ %>
            <%  matkulawal="Computer Vision"; %>
        <% } %>
        <% if (j==6){ %>
            <%  matkulawal="Game Development"; %>
        <% } %>
        <% if (j==7){ %>
            <%  matkulawal="Game Design"; %>
        <% } %>
        <% if (j==8){ %>
            <%  matkulawal="Java Programming"; %>
        <% } %>
   
        <% for (var b=0; b < total; b++){ %>
            <% for (var e=0; e < datalist[b].Kelompok.length; e++){ %>
                <% for (var f=0; f < datalist[b].Kelompok[e].MK.length; f++){ %>
                    <% if (datalist[b].Kelompok[e].MK[f].nama_MK==matkulawal){ %>

                        <% if (datalist[b].Kelompok[e].MK[f].hasil=="E"){ %>
                            <%  c=0; %>
                        <% } %>
                        <% if (datalist[b].Kelompok[e].MK[f].hasil=="D"){ %>
                            <%  c=1; %>
                        <% } %>
                        <% if (datalist[b].Kelompok[e].MK[f].hasil=="C"){ %>
                            <%  c=2; %>
                        <% } %>
                        <% if (datalist[b].Kelompok[e].MK[f].hasil=="B"){ %>
                            <%  c=3; %>
                        <% } %>
                        <% if (datalist[b].Kelompok[e].MK[f].hasil=="A"){ %>
                            <%  c=4; %>
                        <% } %>

                        <% data[j].matkul[c].total=data[j].matkul[c].total+1; %>

                        <% if (datalist[b].Rek==true){ %>
                            <% data[j].matkul[c].Rek=data[j].matkul[c].Rek+1; %>
                        <% } %>
                        <% if (datalist[b].Rek==false){ %>
                            <% data[j].matkul[c].MK=data[j].matkul[c].MK+1; %>
                        <% } %>

                    <% } %>
                <% } %>
            <% } %>
        <% } %>

        <% for(var d=0; d < 5; d++){%>
            <% data[j].matkul[d].entropy=((-data[j].matkul[d].MK/data[j].matkul[d].total)*Math.log2(data[j].matkul[d].MK/data[j].matkul[d].total))+((-data[j].matkul[d].Rek/data[j].matkul[d].total)*Math.log2(data[j].matkul[d].Rek/data[j].matkul[d].total)); %>
            <% data[j].matkul[d].entropy = isNaN(data[j].matkul[d].entropy) ? 0 : data[j].matkul[d].entropy; %>
        <% } %>  
    <% } %>  

    <% var Gain = []; %>
    <% for (var g=0; g < 9; g++){ %>
        <% Gain[g]=(EntropyTotal-(((data[g].matkul[0].total/total)*data[g].matkul[0].entropy)+((data[g].matkul[1].total/total)*data[g].matkul[1].entropy)+((data[g].matkul[2].total/total)*data[g].matkul[2].entropy)+((data[g].matkul[3].total/total)*data[g].matkul[3].entropy)+((data[g].matkul[4].total/total)*data[g].matkul[4].entropy)));%>
    <% } %>

    <!-- <h1><%= Gain %></h1>    -->

    <% var matkul1=[]; %>
    <% var max=0; %>
    <% var MK=""; %>
    <% var mkhasil=""; %>
    <% for(var l=0; l < Gain.length; l++){%>
        <% if (l==0){ %>
            <% matkul1[l]="Data Mining and Data Analytics"; %>
        <% } %>
        <% if (l==1){ %>
            <%  matkul1[l]="Machine Learning"; %>
        <% } %>
        <% if (l==2){ %>
            <%  matkul1[l]="Natural Language Processing"; %>
        <% } %>
        <% if (l==3){ %>
            <%  matkul1[l]="Business Process Re-Engineering"; %>
        <% } %>
        <% if (l==4){ %>
            <%  matkul1[l]="Artificial Neural Network"; %>
        <% } %>
        <% if (l==5){ %>
            <%  matkul1[l]="Computer Vision"; %>
        <% } %>
        <% if (l==6){ %>
            <%  matkul1[l]="Game Development"; %>
        <% } %>
        <% if (l==7){ %>
            <%  matkul1[l]="Game Design"; %>
        <% } %>
        <% if (l==8){ %>
            <%  matkul1[l]="Java Programming"; %>
        <% } %>
    <% }%>

    <% var maxentropy=0; %>
    <% for(var o=0; o < data.length; o++){  %>
        <% for(var f=0; f < data[o].matkul.length; f++){  %>
            <% if (data[o].matkul[f].entropy >= maxentropy){ %>
                <% maxentropy=data[o].matkul[f].entropy; %>
                <% var v= f; %>
            <% } %>
        <% } %>
    <% } %>

    <% if (v==0){ %>
        <% mkhasil = "E"; %>
    <% } %>

    <% if (v==1){ %>
        <% mkhasil = "D"; %>
    <% } %>

    <% if (v==2){ %>
        <% mkhasil = "C"; %>
    <% } %>

    <% if (v==3){ %>
        <% mkhasil = "B"; %>
    <% } %>

    <% if (v==4){ %>
        <% mkhasil = "A"; %>
    <% } %>


    <% for(var e=0;e<Gain.length;e++){ %>
        <% if (Gain[e]>=max){ %>
            <% max=Gain[e]; %>
            <% MK = matkul1[e]%>
            <% var p = e %>
            <% mkhasil = "A"; %>
        <% } %>
    <% } %>

    <% matkul1.splice(p,1)%>
    <!-- <h1><%= matkul1 %></h1> -->
    <!-- end line -->

    <!-- <h1><%= EntropyTotal %></h1> -->

    <!-- 2 -->
    <% var kl=[]; %>
    <% var kn=[]; %>
    
    <% var total2=0; %>
    <% var TotalRek2=0; %>
    <% var TotalMK2=0; %>
    <% var EntropyTotal2=0; %>

    <% for (var j=0; j < total; j++){ %>
        <% for (var k=0; k < datalist[j].Kelompok.length; k++){ %>
            <% for (var l=0; l < datalist[j].Kelompok[k].MK.length; l++){ %>
                <% if (datalist[j].Kelompok[k].MK[l].nama_MK == MK){ %>
                    <% if (datalist[j].Kelompok[k].MK[l].hasil==mkhasil) { %>
                        <% total2=total2+1;%>

                        <% kl[j]=j; %>
                        <!-- <h1><%= kl[j]%></h1> -->
                        
                        <%  if (datalist[j].Rek==true){ %>
                            <%  TotalRek2=TotalRek2+1;%>
                        <% }%>
                        <%  if(datalist[j].Rek==false){ %>
                            <%  TotalMK2=TotalMK2+1; %> 
                        <% } %>

                        <% EntropyTotal2=((-TotalMK2/total2)*Math.log2(TotalMK2/total2))+((-TotalRek2/total2)*Math.log2(TotalRek2/total2)); %>
                    <% } %>
                <% } %>
            <% } %>
        <% } %>
    <% } %>

    <!-- <h1><%= EntropyTotal2 %></h1> -->
    <% var data2 =[{ 
        matkul : [{
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
        ]},{ 
        matkul : [{
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
        ]},{ 
        matkul : [{
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            }
        ]},{ 
        matkul : [{
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            }
        ]},{ 
        matkul : [{
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            }
        ]},{ 
        matkul : [{
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            }
        ]},{ 
        matkul : [{
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            }
        ]},{ 
        matkul : [{
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            }
    ]}]; %>

    <% var matkulawal2 = ""; %>
    <% var c2 =0 ; %>
    <% for (var j=0; j < 8; j++){ %>
        <% matkulawal2 = matkul1[j] ; %>
        <% for (var b=0; b < total; b++){ %>
            <% if (b == kl[b]) { %> 
                <% for (var r=0; r < datalist[b].Kelompok.length; r++){ %> 
                    <% for (var s=0; s < datalist[b].Kelompok[r].MK.length; s++){ %> 
                        <% if (datalist[b].Kelompok[r].MK[s].nama_MK==matkulawal2){ %>
                            <% if (datalist[b].Kelompok[r].MK[s].hasil=="E"){ %>
                                <%  c2=0; %>
                            <% } %>
                            <% if (datalist[b].Kelompok[r].MK[s].hasil=="D"){ %>
                                <%  c2=1; %>
                            <% } %>
                            <% if (datalist[b].Kelompok[r].MK[s].hasil=="C"){ %>
                                <%  c2=2; %>
                            <% } %>
                            <% if (datalist[b].Kelompok[r].MK[s].hasil=="B"){ %>
                                <%  c2=3; %>
                            <% } %>
                            <% if (datalist[b].Kelompok[r].MK[s].hasil=="A"){ %>
                                <%  c2=4; %>
                            <% } %>

                            
                            <% data2[j].matkul[c2].total=data2[j].matkul[c2].total+1; %>
                            
                            <% if (datalist[b].Rek==true){ %>
                                <% data2[j].matkul[c2].Rek=data2[j].matkul[c2].Rek+1; %>
                            <% } %>
                            <% if (datalist[b].Rek==false){ %>
                                <% data2[j].matkul[c2].MK=data2[j].matkul[c2].MK+1; %>
                            <% } %>
                        <% } %>
                    <% } %>
                <% } %>
            <% } %>
        <% } %>

        <% for(var n=0; n < 5; n++){%>
            <% data2[j].matkul[n].entropy=((-data2[j].matkul[n].MK/data2[j].matkul[n].total)*Math.log2(data2[j].matkul[n].MK/data2[j].matkul[n].total))+((-data2[j].matkul[n].Rek/data2[j].matkul[n].total)*Math.log2(data2[j].matkul[n].Rek/data2[j].matkul[n].total)); %>
            <% data2[j].matkul[n].entropy = isNaN(data2[j].matkul[n].entropy) ? 0 : data2[j].matkul[n].entropy; %>
            <!-- <h1><%= data2[j].matkul[n].entropy%></h1> -->
        <% } %>
    <% } %>

    <% var Gain2 = []; %>
    <% for (var t=0; t < 8; t++){ %>
        <% Gain2[t]=(EntropyTotal2-(((data2[t].matkul[0].total/total2)*data2[t].matkul[0].entropy)+((data2[t].matkul[1].total/total2)*data2[t].matkul[1].entropy)+((data2[t].matkul[2].total/total2)*data2[t].matkul[2].entropy)+((data2[t].matkul[3].total/total2)*data2[t].matkul[3].entropy)+((data2[t].matkul[4].total/total2)*data2[t].matkul[4].entropy)));%>
    <% } %> 
    <!-- <h1><%= JSON.stringify(data2)%></h1> -->
    <!-- <h1><%= Gain2 %></h1> -->

    <!-- <h1><%= MK %></h1> -->

    <% var max2=0; %>
    <% var MK2=""; %>
    <% var mkhasil2=""; %>
    <% var maxentropy2=0; %>

    <% for(var o = 0; o < data2.length; o++){  %>
        <% for(var f = 0; f < data2[o].matkul.length; f++){  %>
            <% if (data2[o].matkul[f].entropy>=maxentropy2){ %>
                <% maxentropy2=data2[o].matkul[f].entropy; %>
                <% var v= f; %>
            <% } %>
        <% } %>
    <% } %>

    <% if (v==0){ %>
        <% mkhasil2 = "E"; %>
    <% } %>

    <% if (v==1){ %>
        <% mkhasil2 = "D"; %>
    <% } %>

    <% if (v==2){ %>
        <% mkhasil2 = "C"; %>
    <% } %>

    <% if (v==3){ %>
        <% mkhasil2 = "B"; %>
    <% } %>

    <% if (v==4){ %>
        <% mkhasil2 = "A"; %>
    <% } %>

    <% for(var q=0;q<Gain2.length;q++){ %>
        <% if (Gain2[q]>max2){ %>
            <% max2=Gain2[q]; %>
            <% MK2 = matkul1[q] %>
            <% var p2 = q %>
            <% mkhasil2 = "B"; %>
        <% }%>
    <% }%>

    <% matkul1.splice(p2,1)%>
    <!-- <h1><%= matkul1 %></h1> -->

    <!-- <h1><%= mkhasil %></h1>
    <h1><%= mkhasil2 %></h1>
    <h1><%= EntropyTotal %></h1>
    <h1><%= EntropyTotal2 %></h1>
    <h1><%= TotalRek2 %></h1>
    <h1><%= TotalMK2 %></h1> -->

    <!-- end line  -->

    <!-- 3 -->
    <% var kl2=[]; %>
    <!-- <h1><%= matkul1.length %></h1> -->

    <% var total3=0; %>
    <%  var TotalRek3=0; %>
    <%  var TotalMK3=0; %>
    <%  var EntropyTotal3=0; %>

    <% for (var k=0; k < total; k++){ %>
        <% for (var l=0; l < datalist[k].Kelompok.length; l++){ %>
            <% for (var m=0; m < datalist[k].Kelompok[l].MK.length; m++){ %>
                <% if (k==kl[k]){ %>
                    <% if (datalist[k].Kelompok[l].MK[m].nama_MK==MK2){ %>
                        <% if (datalist[k].Kelompok[l].MK[m].hasil==mkhasil2) { %>

                            <% total3=total3+1;%>
                            <% kl2[k]=k; %>
                            <!-- <h1><%= kl2[k] %></h1> -->

                            <%  if (datalist[k].Rek==true){ %>
                                <%  TotalRek3=TotalRek3+1;%>
                            <% }%>
                            <%  if(datalist[k].Rek==false){ %>
                                <%  TotalMK3=TotalMK3+1; %> 
                            <% } %>
                            <% EntropyTotal3=((-TotalMK3/total3)*Math.log2(TotalMK3/total3))+((-TotalRek3/total3)*Math.log2(TotalRek3/total3)); %>
                        <% } %>
                    <% } %>
                <% } %>
            <% } %>
        <% } %>
    <% } %>

    <!-- <h1><%= EntropyTotal3 %></h1>
    <h1><%= total3 %></h1>
    <h1><%= TotalRek3 %></h1>
    <h1><%= TotalMK3 %></h1> -->

    <% var data3 =[{ 
        matkul : [{
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            }
        ]},{
        matkul : [{
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            }
        ]},{
        matkul : [{
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            }
        ]},{
        matkul : [{
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            }
        ]},{
        matkul : [{
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            }
        ]},{
        matkul : [{
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            }
        ]},{
        matkul : [{
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            },
            {
            total: 0,Rek:0,MK:0,entropy:0
            }
        ]}]; %>

        <% var matkulawal3 = ""; %>
        <% var c3 =0 ; %>
        <% for (var j = 0; j < 7; j++){ %>
            <% matkulawal3 = matkul1[j] ; %>
            <% for (var b=0; b < total; b++){ %>
                <% if (b == kl2[b]) { %> 
                    <% for (var r=0; r < datalist[b].Kelompok.length; r++){ %> 
                        <% for (var s=0; s < datalist[b].Kelompok[r].MK.length; s++){ %>
                            <% if (datalist[b].Kelompok[r].MK[s].nama_MK==matkulawal3){ %>
                                <% if (datalist[b].Kelompok[r].MK[s].hasil=="E"){ %>
                                    <%  c3=0; %>
                                <% } %>
                                <% if (datalist[b].Kelompok[r].MK[s].hasil=="D"){ %>
                                    <%  c3=1; %>
                                <% } %>
                                <% if (datalist[b].Kelompok[r].MK[s].hasil=="C"){ %>
                                    <%  c3=2; %>
                                <% } %>
                                <% if (datalist[b].Kelompok[r].MK[s].hasil=="B"){ %>
                                    <%  c3=3; %>
                                <% } %>
                                <% if (datalist[b].Kelompok[r].MK[s].hasil=="A"){ %>
                                    <%  c3=4; %>
                                <% } %>

                                <% data3[j].matkul[c3].total=data3[j].matkul[c3].total+1; %>

                                <% if (datalist[b].Rek==true){ %>
                                    <% data3[j].matkul[c3].Rek=data3[j].matkul[c3].Rek+1; %>
                                <% } %>
                                <% if (datalist[b].Rek==false){ %>
                                    <% data3[j].matkul[c3].MK=data3[j].matkul[c3].MK+1; %>
                                <% } %>
                                
                            <% } %>
                        <% } %>
                    <% } %>
                <% } %>
            <% } %>

            <% for(var n=0; n < 5; n++){%>
                <% data3[j].matkul[n].entropy=((-data3[j].matkul[n].MK/data3[j].matkul[n].total)*Math.log2(data3[j].matkul[n].MK/data3[j].matkul[n].total))+((-data3[j].matkul[n].Rek/data3[j].matkul[n].total)*Math.log2(data3[j].matkul[n].Rek/data3[j].matkul[n].total)); %>
                <% data3[j].matkul[n].entropy = isNaN(data3[j].matkul[n].entropy) ? 0 : data3[j].matkul[n].entropy; %>
            <!-- <h1><%= data3[j].matkul[n].entropy%></h1> -->
            <% } %>
        <% } %>

        <% var Gain3 = []; %>
        <% for (var t=0; t < 7; t++){ %>
            <% Gain3[t]=(EntropyTotal3-( ((data3[t].matkul[0].total/total3)*data3[t].matkul[0].entropy)+((data3[t].matkul[1].total/total3)*data3[t].matkul[1].entropy)+((data3[t].matkul[2].total/total3)*data3[t].matkul[2].entropy)+((data3[t].matkul[3].total/total3)*data3[t].matkul[3].entropy)+((data3[t].matkul[4].total/total3)*data3[t].matkul[4].entropy) ));%>
            <!-- <h1><%= Gain3[t]%></h1> -->
        <% } %>

        <!-- <h1><%= JSON.stringify(data3)%></h1>
        <h1><%= Gain3 %></h1> -->
        
        <% var max3=0; %>
        <% var MK3=""; %>
        <% var mkhasil3=""; %>
        <% var maxentropy3=0; %>

        <% for(var o = 0; o < data3.length; o++){  %>
            <% for(var f = 0; f < data3[o].matkul.length; f++){  %>
                <% if (data3[o].matkul[f].entropy>=maxentropy3){ %>
                    <% maxentropy3=data3[o].matkul[f].entropy; %>
                    <% var v= f; %>
                <% } %>
            <% } %>
        <% } %>

        <% if (v==0){ %>
            <% mkhasil3 = "E"; %>
        <% } %>
    
        <% if (v==1){ %>
            <% mkhasil3 = "D"; %>
        <% } %>
    
        <% if (v==2){ %>
            <% mkhasil3 = "C"; %>
        <% } %>
    
        <% if (v==3){ %>
            <% mkhasil3 = "B"; %>
        <% } %>
    
        <% if (v==4){ %>
            <% mkhasil3 = "A"; %>
        <% } %>

        <% for(var q=0; q < Gain3.length; q++){ %>
            <% if (Gain3[q]>max3){ %>
                <% max3=Gain3[q]; %>
                <% MK3 = matkul1[q]%>
                <% var p3 = q %>
                <% mkhasil3 = "C"; %>
            <% }%>
        <% }%>

        <% matkul1.splice(p3,1)%>
        <!-- <h1><%= matkul1 %></h1>
        <h1><%= EntropyTotal %></h1>
        <h1><%= EntropyTotal2 %></h1> -->

        <!-- end line -->

        <!-- 4 -->
        <% var kl3=[]; %>
        <!-- <h1><%= matkul1 %></h1> -->

        <% var total4=0; %>
        <%  var TotalRek4=0; %>
        <%  var TotalMK4=0; %>
        <%  var EntropyTotal4=0; %>

        <% for (var k=0; k < total; k++){ %>
            <% for (var l=0; l < datalist[k].Kelompok.length; l++){ %>
                <% for (var m=0; m < datalist[k].Kelompok[l].MK.length; m++){ %>
                    <% if (k==kl2[k]){ %>
                        <% if (datalist[k].Kelompok[l].MK[m].nama_MK==MK3){ %>
                            <% if (datalist[k].Kelompok[l].MK[m].hasil==mkhasil3) { %>

                                <% total4=total4+1;%>
                                <% kl3[k]=k; %>
                                <!-- <h1><%= kl2[k] %></h1> -->

                                <%  if (datalist[k].Rek==true){ %>
                                    <%  TotalRek4=TotalRek4+1;%>
                                <% }%>
                                <%  if(datalist[k].Rek==false){ %>
                                    <%  TotalMK4=TotalMK4+1; %> 
                                <% } %>
                                <% EntropyTotal4=((-TotalMK4/total4)*Math.log2(TotalMK4/total4))+((-TotalRek4/total4)*Math.log2(TotalRek4/total4)); %>
                            <% } %>
                        <% } %>
                    <% } %>
                <% } %>
            <% } %>
        <% } %>

        <!-- <h1><%= EntropyTotal4 %></h1> -->
        <!-- <h1><%= total3 %></h1>
        <h1><%= TotalRek3 %></h1>
        <h1><%= TotalMK3 %></h1> -->

        <% var data4 =[{ 
            matkul : [{
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                }
            ]},{
            matkul : [{
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                }
            ]},{
            matkul : [{
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                }
            ]},{
            matkul : [{
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                }
            ]},{
            matkul : [{
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                }
            ]},{
            matkul : [{
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                }
            ]}]; %>

            <% var matkulawal4 = ""; %>
            <% var c4 =0 ; %>
            <% for (var j = 0; j < 6; j++){ %>
                <% matkulawal4 = matkul1[j] ; %>
                <% for (var b=0; b < total; b++){ %>
                    <% if (b == kl3[b]) { %> 
                        <% for (var r=0; r < datalist[b].Kelompok.length; r++){ %> 
                            <% for (var s=0; s < datalist[b].Kelompok[r].MK.length; s++){ %>
                                <% if (datalist[b].Kelompok[r].MK[s].nama_MK==matkulawal4){ %>
                                    <% if (datalist[b].Kelompok[r].MK[s].hasil=="E"){ %>
                                        <%  c4=0; %>
                                    <% } %>
                                    <% if (datalist[b].Kelompok[r].MK[s].hasil=="D"){ %>
                                        <%  c4=1; %>
                                    <% } %>
                                    <% if (datalist[b].Kelompok[r].MK[s].hasil=="C"){ %>
                                        <%  c4=2; %>
                                    <% } %>
                                    <% if (datalist[b].Kelompok[r].MK[s].hasil=="B"){ %>
                                        <%  c4=3; %>
                                    <% } %>
                                    <% if (datalist[b].Kelompok[r].MK[s].hasil=="A"){ %>
                                        <%  c4=4; %>
                                    <% } %>

                                    <% data4[j].matkul[c4].total=data4[j].matkul[c4].total+1; %>
                                    
                                    <% if (datalist[b].Rek==true){ %>
                                        <% data4[j].matkul[c4].Rek=data4[j].matkul[c4].Rek+1; %>
                                    <% } %>
                                    <% if (datalist[b].Rek==false){ %>
                                        <% data4[j].matkul[c4].MK=data4[j].matkul[c4].MK+1; %>
                                    <% } %>
                                    
                                <% } %>
                            <% } %>
                        <% } %>
                    <% } %>
                <% } %>

                <% for(var n=0; n < 5; n++){%>
                    <% data4[j].matkul[n].entropy=((-data4[j].matkul[n].MK/data4[j].matkul[n].total)*Math.log2(data4[j].matkul[n].MK/data4[j].matkul[n].total))+((-data4[j].matkul[n].Rek/data4[j].matkul[n].total)*Math.log2(data4[j].matkul[n].Rek/data4[j].matkul[n].total)); %>
                    <% data4[j].matkul[n].entropy = isNaN(data4[j].matkul[n].entropy) ? 0 : data4[j].matkul[n].entropy; %>
                <!-- <h1><%= data4[j].matkul[n].entropy%></h1> -->
                <% } %>
            <% } %>

            <% var Gain4 = []; %>
            <% for (var t=0; t < 6; t++){ %>
                <% Gain4[t]=(EntropyTotal4-(((data4[t].matkul[0].total/total4)*data4[t].matkul[0].entropy)+((data4[t].matkul[1].total/total4)*data4[t].matkul[1].entropy)+((data4[t].matkul[2].total/total4)*data4[t].matkul[2].entropy)+((data4[t].matkul[3].total/total4)*data4[t].matkul[3].entropy)+((data4[t].matkul[4].total/total4)*data4[t].matkul[4].entropy)));%>
                <!-- <h1><%= Gain4[t]%></h1> -->
            <% } %>

            <% var max4=0; %>
            <% var MK4=""; %>
            <% var mkhasil4=""; %>
            <% var maxentropy4=0; %>

            <% for(var o = 0; o < data4.length; o++){  %>
                <% for(var f = 0; f < data4[o].matkul.length; f++){  %>
                    <% if (data4[o].matkul[f].entropy>=maxentropy4){ %>
                        <% maxentropy4=data4[o].matkul[f].entropy; %>
                        <% var v= f; %>
                    <% } %>
                <% } %>
            <% } %>

            <% if (v==0){ %>
                <% mkhasil4 = "E"; %>
            <% } %>
        
            <% if (v==1){ %>
                <% mkhasil4 = "D"; %>
            <% } %>
        
            <% if (v==2){ %>
                <% mkhasil4 = "C"; %>
            <% } %>
        
            <% if (v==3){ %>
                <% mkhasil4 = "B"; %>
            <% } %>
        
            <% if (v==4){ %>
                <% mkhasil4 = "A"; %>
            <% } %>

            <% for(var q=0; q < Gain4.length; q++){ %>
                <% if (Gain4[q]>max4){ %>
                    <% max4 = Gain4[q]; %>
                    <% MK4 = matkul1[q]%>
                    <% var p4 = q %>
                    <% mkhasil4 = "A"; %>
                <% }%>
            <% }%>

            <% matkul1.splice(p4,1)%>
            <!-- <h1><%= matkul1 %></h1> -->
        

        <!-- end line -->

        <!-- 5 -->
        <% var kl4=[]; %>
        <!-- <h1><%= matkul1 %></h1> -->

        <% var total5=0; %>
        <%  var TotalRek5=0; %>
        <%  var TotalMK5=0; %>
        <%  var EntropyTotal5=0; %>

        <% for (var k=0; k < total; k++){ %>
            <% for (var l=0; l < datalist[k].Kelompok.length; l++){ %>
                <% for (var m=0; m < datalist[k].Kelompok[l].MK.length; m++){ %>
                    <% if (k==kl3[k]){ %>
                        <% if (datalist[k].Kelompok[l].MK[m].nama_MK==MK4){ %>
                            <% if (datalist[k].Kelompok[l].MK[m].hasil==mkhasil4) { %>

                                <% total5=total5+1;%>
                                <% kl4[k]=k; %>
                                <!-- <h1><%= kl2[k] %></h1> -->

                                <%  if (datalist[k].Rek==true){ %>
                                    <%  TotalRek5=TotalRek5+1;%>
                                <% }%>
                                <%  if(datalist[k].Rek==false){ %>
                                    <%  TotalMK5=TotalMK5+1; %> 
                                <% } %>
                                <% EntropyTotal5=((-TotalMK5/total5)*Math.log2(TotalMK5/total5))+((-TotalRek5/total5)*Math.log2(TotalRek5/total5)); %>
                            <% } %>
                        <% } %>
                    <% } %>
                <% } %>
            <% } %>
        <% } %>

        <!-- <h1><%= EntropyTotal5 %></h1>
        <h1><%= total5 %></h1>
        <h1><%= TotalRek5 %></h1>
        <h1><%= TotalMK5 %></h1> -->

        <% var data5 =[{ 
            matkul : [{
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                }
            ]},{
            matkul : [{
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                }
            ]},{
            matkul : [{
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                }
            ]},{
            matkul : [{
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                }
            ]},{
            matkul : [{
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                },
                {
                total: 0,Rek:0,MK:0,entropy:0
                }
            ]}]; %>

            <% var matkulawal5 = ""; %>
            <% var c5 =0 ; %>
            <% for (var j = 0; j < 5; j++){ %>
                <% matkulawal5 = matkul1[j] ; %>
                <% for (var b=0; b < total; b++){ %>
                    <% if (b == kl4[b]) { %> 
                        <% for (var r=0; r < datalist[b].Kelompok.length; r++){ %> 
                            <% for (var s=0; s < datalist[b].Kelompok[r].MK.length; s++){ %>
                                <% if (datalist[b].Kelompok[r].MK[s].nama_MK==matkulawal5){ %>
                                    <% if (datalist[b].Kelompok[r].MK[s].hasil=="E"){ %>
                                        <%  c5=0; %>
                                    <% } %>
                                    <% if (datalist[b].Kelompok[r].MK[s].hasil=="D"){ %>
                                        <%  c5=1; %>
                                    <% } %>
                                    <% if (datalist[b].Kelompok[r].MK[s].hasil=="C"){ %>
                                        <%  c5=2; %>
                                    <% } %>
                                    <% if (datalist[b].Kelompok[r].MK[s].hasil=="B"){ %>
                                        <%  c5=3; %>
                                    <% } %>
                                    <% if (datalist[b].Kelompok[r].MK[s].hasil=="A"){ %>
                                        <%  c5=4; %>
                                    <% } %>

                                    <% data5[j].matkul[c5].total=data5[j].matkul[c5].total+1; %>
                                    
                                    <% if (datalist[b].Rek==true){ %>
                                        <% data5[j].matkul[c5].Rek=data5[j].matkul[c5].Rek+1; %>
                                    <% } %>
                                    <% if (datalist[b].Rek==false){ %>
                                        <% data5[j].matkul[c5].MK=data5[j].matkul[c5].MK+1; %>
                                    <% } %>
                                    
                                <% } %>
                            <% } %>
                        <% } %>
                    <% } %>
                <% } %>

                <% for(var n=0; n < 5; n++){%>
                    <% data5[j].matkul[n].entropy=((-data5[j].matkul[n].MK/data5[j].matkul[n].total)*Math.log2(data5[j].matkul[n].MK/data5[j].matkul[n].total))+((-data5[j].matkul[n].Rek/data5[j].matkul[n].total)*Math.log2(data5[j].matkul[n].Rek/data5[j].matkul[n].total)); %>
                    <% data5[j].matkul[n].entropy = isNaN(data5[j].matkul[n].entropy) ? 0 : data5[j].matkul[n].entropy; %>
                <!-- <h1><%= data5[j].matkul[n].entropy%></h1> -->
                <% } %>
            <% } %>

            <% var Gain5 = []; %>
            <% for (var t=0; t < 5; t++){ %>
                <% Gain5[t]=(EntropyTotal5-(((data5[t].matkul[0].total/total5)*data5[t].matkul[0].entropy)+((data5[t].matkul[1].total/total5)*data5[t].matkul[1].entropy)+((data5[t].matkul[2].total/total5)*data5[t].matkul[2].entropy)+((data5[t].matkul[3].total/total5)*data5[t].matkul[3].entropy)+((data5[t].matkul[4].total/total5)*data5[t].matkul[4].entropy)));%>
                <!-- <h1><%= Gain5[t]%></h1> -->
            <% } %>

            <% var max5=0; %>
            <% var MK5=""; %>
            <% var mkhasil5=""; %>
            <% var maxentropy5=0; %>

            <% for(var o = 0; o < data5.length; o++){  %>
                <% for(var f = 0; f < data5[o].matkul.length; f++){  %>
                    <% if (data5[o].matkul[f].entropy>=maxentropy5){ %>
                        <% maxentropy5=data5[o].matkul[f].entropy; %>
                        <% var v= f; %>
                    <% } %>
                <% } %>
            <% } %>

            <% if (v==0){ %>
                <% mkhasil5 = "E"; %>
            <% } %>
        
            <% if (v==1){ %>
                <% mkhasil5 = "D"; %>
            <% } %>
        
            <% if (v==2){ %>
                <% mkhasil5 = "C"; %>
            <% } %>
        
            <% if (v==3){ %>
                <% mkhasil5 = "B"; %>
            <% } %>
        
            <% if (v==4){ %>
                <% mkhasil5 = "A"; %>
            <% } %>

            <% for(var q=0; q < Gain5.length; q++){ %>
                <% if (Gain5[q]>max5){ %>
                    <% max5 = Gain5[q]; %>
                    <% MK5 = matkul1[q]%>
                    <% var p5 = q %>
                    <% mkhasil5 = "A"; %>
                <% }%>
            <% }%>

            <% matkul1.splice(p5,1)%>
            <!-- <h1><%= matkul1 %></h1> -->
        

        <!-- end line -->

        <!-- ConsoleLog. (1) -->
        <!-- <h1><%= JSON.stringify(data) %></h1>
        <h1><%= total %></h1>
        <h1><%= EntropyTotal %></h1>
        <h1><%= TotalRek %></h1>
        <h1><%= TotalMK %></h1>
        <h1><%= Gain %></h1>
        <h1><%= mkhasil %></h1> -->
        <!-- <%= matkul1.splice(p,1)%> -->

        
        <br>

        <!-- <h1><%= max %></h1>   
        <h1><%= maxentropy %></h1> -->

        <br>
        <!-- ConsoleLog. (2) -->
        <!-- <h1><%= JSON.stringify(data2) %></h1>
        <h1><%= total2 %></h1>
        <h1><%= EntropyTotal2 %></h1>
        <h1><%= TotalRek2 %></h1>
        <h1><%= TotalMK2 %></h1>
        <h1><%= Gain2 %></h1>
        <h1><%= mkhasil2 %></h1> -->
        <!-- <%= matkul1.splice(p2,1)%> -->

        <br>

        <!-- <h1><%= max2 %></h1>   
        <h1><%= maxentropy2 %></h1>  -->

        <br>
        <!-- ConsoleLog. (3) -->
        <!-- <h1><%= JSON.stringify(data3) %></h1>
        <h1><%= total3 %></h1>
        <h1><%= EntropyTotal3 %></h1>
        <h1><%= TotalRek3 %></h1>
        <h1><%= TotalMK3 %></h1>
        <h1><%= Gain3 %></h1>
        <h1><%= mkhasil3 %></h1> -->
        <!-- <%= matkul1.splice(p3,1)%> -->

        <br>

        <!-- <h1><%= max3 %></h1>   
        <h1><%= maxentropy3 %></h1>  -->

        <br>
        <!-- ConsoleLog. (4) -->
        <!-- <h1><%= JSON.stringify(data4) %></h1> -->
        <!-- <h1><%= total4 %></h1>
        <h1><%= EntropyTotal4 %></h1>
        <h1><%= TotalRek4 %></h1>
        <h1><%= TotalMK4 %></h1>
        <h1><%= Gain4 %></h1>
        <h1><%= mkhasil4 %></h1> -->
        <!-- <%= matkul1.splice(p4,1)%> -->

        <br>

        <!-- <h1><%= max4 %></h1>   
        <h1><%= maxentropy4 %></h1>  -->

        <br>
        <!-- ConsoleLog. (5) -->
        <!-- <h1><%= JSON.stringify(data5) %></h1>
        <h1><%= total5 %></h1>
        <h1><%= EntropyTotal5 %></h1>
        <h1><%= TotalRek5 %></h1>
        <h1><%= TotalMK5 %></h1>
        <h1><%= Gain5 %></h1>
        <h1><%= mkhasil5 %></h1> -->
        <!-- <%= matkul1.splice(p4,1)%>

        <br>

        <!-- <h1><%= max4 %></h1>   
        <h1><%= maxentropy4 %></h1>  -->
</div>

<!-- Span Hasil C45 -->
<span id="ANN" hidden ><%= JSON.stringify(MK) %></span>
<span id="HMk1" hidden ><%= JSON.stringify(mkhasil) %></span>

<span id="ML" hidden ><%= JSON.stringify(MK2) %></span>
<span id="HMk2" hidden ><%= JSON.stringify(mkhasil2) %></span>

<span id="COMVIS" hidden ><%= JSON.stringify(MK3) %></span>
<span id="HMk3" hidden ><%= JSON.stringify(mkhasil3) %></span>

<span id="DM" hidden ><%= JSON.stringify(MK4) %></span>
<span id="HMk4" hidden ><%= JSON.stringify(mkhasil4) %></span>

<span id="NLP" hidden ><%= JSON.stringify(MK5) %></span>
<span id="HMk5" hidden ><%= JSON.stringify(mkhasil5) %></span>

<span id="usernilai"><%= JSON.stringify(currentUser.username) %></span>
<span id="histori" hidden><%= JSON.stringify(datalist) %></span>
<!-- End Span Hasil C45 -->

<script class="CF">
    var usernilai = JSON.parse($('#usernilai').text());
    $('#usernilai').remove();
    console.log(usernilai);

    histori = JSON.parse($('#histori').text());
    $('#histori').remove();
    // console.log(histori);

    // CF script
    var totalMhs = [
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ]; 

    var rataMhs = [
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ];

    var totalMK = [0, 0, 0, 0, 0, 0, 0, 0, 0]; 
    var rataMK = [0, 0, 0, 0, 0, 0, 0, 0, 0];


    var nilaibaru = {
        M1: [0, 0, 0, 0, 0, 0, 0, 0, 0], M2: [0, 0, 0, 0, 0, 0, 0, 0, 0], M3: [0, 0, 0, 0, 0, 0, 0, 0, 0], M4: [0, 0, 0, 0, 0, 0, 0, 0, 0], M5: [0, 0, 0, 0, 0, 0, 0, 0, 0], M6: [0, 0, 0, 0, 0, 0, 0, 0, 0], M7: [0, 0, 0, 0, 0, 0, 0, 0, 0], M8: [0, 0, 0, 0, 0, 0, 0, 0, 0], M9: [0, 0, 0, 0, 0, 0, 0, 0, 0], M10: [0, 0, 0, 0, 0, 0, 0, 0, 0],
        M11: [0, 0, 0, 0, 0, 0, 0, 0, 0], M12: [0, 0, 0, 0, 0, 0, 0, 0, 0], M13: [0, 0, 0, 0, 0, 0, 0, 0, 0], M14: [0, 0, 0, 0, 0, 0, 0, 0, 0], M15: [0, 0, 0, 0, 0, 0, 0, 0, 0], M16: [0, 0, 0, 0, 0, 0, 0, 0, 0], M17: [0, 0, 0, 0, 0, 0, 0, 0, 0], M18: [0, 0, 0, 0, 0, 0, 0, 0, 0], M19: [0, 0, 0, 0, 0, 0, 0, 0, 0], M20: [0, 0, 0, 0, 0, 0, 0, 0, 0],
        M21: [0, 0, 0, 0, 0, 0, 0, 0, 0], M22: [0, 0, 0, 0, 0, 0, 0, 0, 0], M23: [0, 0, 0, 0, 0, 0, 0, 0, 0], M24: [0, 0, 0, 0, 0, 0, 0, 0, 0], M25: [0, 0, 0, 0, 0, 0, 0, 0, 0], M26: [0, 0, 0, 0, 0, 0, 0, 0, 0], M27: [0, 0, 0, 0, 0, 0, 0, 0, 0], M28: [0, 0, 0, 0, 0, 0, 0, 0, 0], M29: [0, 0, 0, 0, 0, 0, 0, 0, 0], M30: [0, 0, 0, 0, 0, 0, 0, 0, 0],
        M31: [0, 0, 0, 0, 0, 0, 0, 0, 0], M32: [0, 0, 0, 0, 0, 0, 0, 0, 0], M33: [0, 0, 0, 0, 0, 0, 0, 0, 0], M34: [0, 0, 0, 0, 0, 0, 0, 0, 0], M35: [0, 0, 0, 0, 0, 0, 0, 0, 0], M36: [0, 0, 0, 0, 0, 0, 0, 0, 0], M37: [0, 0, 0, 0, 0, 0, 0, 0, 0], M38: [0, 0, 0, 0, 0, 0, 0, 0, 0], M39: [0, 0, 0, 0, 0, 0, 0, 0, 0], M40: [0, 0, 0, 0, 0, 0, 0, 0, 0],
        M41: [0, 0, 0, 0, 0, 0, 0, 0, 0], M42: [0, 0, 0, 0, 0, 0, 0, 0, 0], M43: [0, 0, 0, 0, 0, 0, 0, 0, 0], M44: [0, 0, 0, 0, 0, 0, 0, 0, 0], M45: [0, 0, 0, 0, 0, 0, 0, 0, 0], M46: [0, 0, 0, 0, 0, 0, 0, 0, 0], M47: [0, 0, 0, 0, 0, 0, 0, 0, 0], M48: [0, 0, 0, 0, 0, 0, 0, 0, 0], M49: [0, 0, 0, 0, 0, 0, 0, 0, 0], M50: [0, 0, 0, 0, 0, 0, 0, 0, 0],
    };

    var Mhs1 = {
        MK11: [], MK12: [], MK13: [], MK14: [], MK15: [], MK16: [], MK17: [], MK18: [], MK19: [], MK110: [], MK111: [], MK112: [], MK113: [], MK114: [], MK115: [], MK116: [], MK117: [], MK118: [], MK119: [], MK120: [],
        MK121: [], MK122: [], MK123: [], MK124: [], MK125: [], MK126: [], MK127: [], MK128: [], MK129: [], MK130: [], MK131: [], MK132: [], MK133: [], MK134: [], MK135: [], MK136: [], MK137: [], MK138: [], MK139: [], MK140: [],
        MK141: [], MK142: [], MK143: [], MK144: [], MK145: [], MK146: [], MK147: [], MK148: [], MK149: [], MK150: []
    };
    
    var Mhs2 = {
        MK21: [], MK22: [], MK23: [], MK24: [], MK25: [], MK26: [], MK27: [], MK28: [], MK29: [], MK210: [], MK211: [], MK212: [], MK213: [], MK214: [], MK215: [], MK216: [], MK217: [], MK218: [], MK219: [], MK220: [],
        MK221: [], MK222: [], MK223: [], MK224: [], MK225: [], MK226: [], MK227: [], MK228: [], MK229: [], MK230: [], MK231: [], MK232: [], MK233: [], MK234: [], MK235: [], MK236: [], MK237: [], MK238: [], MK239: [], MK240: [],
        MK241: [], MK242: [], MK243: [], MK244: [], MK245: [], MK246: [], MK247: [], MK248: [], MK249: [], MK250: [] 
    };

    var Mhs3 = {
        MK31: [], MK32: [], MK33: [], MK34: [], MK35: [], MK36: [], MK37: [], MK38: [], MK39: [], MK310: [], MK311: [], MK312: [], MK313: [], MK314: [], MK315: [], MK316: [], MK317: [], MK318: [], MK319: [], MK320: [],
        MK321: [], MK322: [], MK323: [], MK324: [], MK325: [], MK326: [], MK327: [], MK328: [], MK329: [], MK330: [], MK331: [], MK332: [], MK333: [], MK334: [], MK335: [], MK336: [], MK337: [], MK338: [], MK339: [], MK340: [],
        MK341: [], MK342: [], MK343: [], MK344: [], MK345: [], MK346: [], MK347: [], MK348: [], MK349: [], MK350: []
    };

    var Mhs4 = {
        MK41: [], MK42: [], MK43: [], MK44: [], MK45: [], MK46: [], MK47: [], MK48: [], MK49: [], MK410: [], MK411: [], MK412: [], MK413: [], MK414: [], MK415: [], MK416: [], MK417: [], MK418: [], MK419: [], MK420: [],
        MK421: [], MK422: [], MK423: [], MK424: [], MK425: [], MK426: [], MK427: [], MK428: [], MK429: [], MK430: [], MK431: [], MK432: [], MK433: [], MK434: [], MK435: [], MK436: [], MK437: [], MK438: [], MK439: [], MK440: [],
        MK441: [], MK442: [], MK443: [], MK444: [], MK445: [], MK446: [], MK447: [], MK448: [], MK449: [], MK450: []
    };

    var Mhs5 = {
        MK51: [], MK52: [], MK53: [], MK54: [], MK55: [], MK56: [], MK57: [], MK58: [], MK59: [], MK510: [], MK511: [], MK512: [], MK513: [], MK514: [], MK515: [], MK516: [], MK517: [], MK518: [], MK519: [], MK520: [],
        MK521: [], MK522: [], MK523: [], MK524: [], MK525: [], MK526: [], MK527: [], MK528: [], MK529: [], MK530: [], MK531: [], MK532: [], MK533: [], MK534: [], MK535: [], MK536: [], MK537: [], MK538: [], MK539: [], MK540: [],
        MK541: [], MK542: [], MK543: [], MK544: [], MK545: [], MK546: [], MK547: [], MK548: [], MK549: [], MK550: []
    };

    var Mhs6 = {
        MK61: [], MK62: [], MK63: [], MK64: [], MK65: [], MK66: [], MK67: [], MK68: [], MK69: [], MK610: [], MK611: [], MK612: [], MK613: [], MK614: [], MK615: [], MK616: [], MK617: [], MK618: [], MK619: [], MK620: [],
        MK621: [], MK622: [], MK623: [], MK624: [], MK625: [], MK626: [], MK627: [], MK628: [], MK629: [], MK630: [], MK631: [], MK632: [], MK633: [], MK634: [], MK635: [], MK636: [], MK637: [], MK638: [], MK639: [], MK640: [],
        MK641: [], MK642: [], MK643: [], MK644: [], MK645: [], MK646: [], MK647: [], MK648: [], MK649: [], MK650: []
    };

    var Mhs7 = {
        MK71: [], MK72: [], MK73: [], MK74: [], MK75: [], MK76: [], MK77: [], MK78: [], MK79: [], MK710: [], MK711: [], MK712: [], MK713: [], MK714: [], MK715: [], MK716: [], MK717: [], MK718: [], MK719: [], MK720: [],
        MK721: [], MK722: [], MK723: [], MK724: [], MK725: [], MK726: [], MK727: [], MK728: [], MK729: [], MK730: [], MK731: [], MK732: [], MK733: [], MK734: [], MK735: [], MK736: [], MK737: [], MK738: [], MK739: [], MK740: [],
        MK741: [], MK742: [], MK743: [], MK744: [], MK745: [], MK746: [], MK747: [], MK748: [], MK749: [], MK750: []
    };

    var Mhs8 = {
        MK81: [], MK82: [], MK83: [], MK84: [], MK85: [], MK86: [], MK87: [], MK88: [], MK89: [], MK810: [], MK811: [], MK812: [], MK813: [], MK814: [], MK815: [], MK816: [], MK817: [], MK818: [], MK819: [], MK820: [],
        MK821: [], MK822: [], MK823: [], MK824: [], MK825: [], MK826: [], MK827: [], MK828: [], MK829: [], MK830: [], MK831: [], MK832: [], MK833: [], MK834: [], MK835: [], MK836: [], MK837: [], MK838: [], MK839: [], MK840: [],
        MK841: [], MK842: [], MK843: [], MK844: [], MK845: [], MK846: [], MK847: [], MK848: [], MK849: [], MK850: []
    };

    var Mhs9 = {
        MK91: [], MK92: [], MK93: [], MK94: [], MK95: [], MK96: [], MK97: [], MK98: [], MK99: [], MK910: [], MK911: [], MK912: [], MK913: [], MK914: [], MK915: [], MK916: [], MK917: [], MK918: [], MK919: [], MK920: [],
        MK921: [], MK922: [], MK923: [], MK924: [], MK925: [], MK926: [], MK927: [], MK928: [], MK929: [], MK930: [], MK931: [], MK932: [], MK933: [], MK934: [], MK935: [], MK936: [], MK937: [], MK938: [], MK939: [], MK940: [],
        MK941: [], MK942: [], MK943: [], MK944: [], MK945: [], MK946: [], MK947: [], MK948: [], MK949: [], MK950: []
    };

    var Mhs10 = {
        MK101: [], MK102: [], MK103: [], MK104: [], MK105: [], MK106: [], MK107: [], MK108: [], MK109: [], MK1010: [], MK1011: [], MK1012: [], MK1013: [], MK1014: [], MK1015: [], MK1016: [], MK1017: [], MK1018: [], MK1019: [], MK1020: [],
        MK1021: [], MK1022: [], MK1023: [], MK1024: [], MK1025: [], MK1026: [], MK1027: [], MK1028: [], MK1029: [], MK1030: [], MK1031: [], MK1032: [], MK1033: [], MK1034: [], MK1035: [], MK1036: [], MK1037: [], MK1038: [], MK1039: [], MK1040: [],
        MK1041: [], MK1042: [], MK1043: [], MK1044: [], MK1045: [], MK1046: [], MK1047: [], MK1048: [], MK1049: [], MK1050: []
    };

    var Mhs11 = {
        MK111: [], MK112: [], MK113: [], MK114: [], MK115: [], MK116: [], MK117: [], MK118: [], MK119: [], MK1110: [], 
        MK1111: [], MK1112: [], MK1113: [], MK1114: [], MK1115: [], MK1116: [], MK1117: [], MK1118: [], MK1119: [], MK1120: [],
        MK1121: [], MK1122: [], MK1123: [], MK1124: [], MK1125: [], MK1126: [], MK1127: [], MK1128: [], MK1129: [], MK1130: [], 
        MK1131: [], MK1132: [], MK1133: [], MK1134: [], MK1135: [], MK1136: [], MK1137: [], MK1138: [], MK1139: [], MK1140: [],
        MK1141: [], MK1142: [], MK1143: [], MK1144: [], MK1145: [], MK1146: [], MK1147: [], MK1148: [], MK1149: [], MK1150: []
    };

    var Mhs12 = {
        MK121: [], MK122: [], MK123: [], MK124: [], MK125: [], MK126: [], MK127: [], MK128: [], MK129: [], MK1210: [], 
        MK1211: [], MK1212: [], MK1213: [], MK1214: [], MK1215: [], MK1216: [], MK1217: [], MK1218: [], MK1219: [], MK1220: [],
        MK1221: [], MK1222: [], MK1223: [], MK1224: [], MK1225: [], MK1226: [], MK1227: [], MK1228: [], MK1229: [], MK1230: [], 
        MK1231: [], MK1232: [], MK1233: [], MK1234: [], MK1235: [], MK1236: [], MK1237: [], MK1238: [], MK1239: [], MK1240: [],
        MK1241: [], MK1242: [], MK1243: [], MK1244: [], MK1245: [], MK1246: [], MK1247: [], MK1248: [], MK1249: [], MK1250: []
    };

    var Mhs13 = {
        MK131: [], MK132: [], MK133: [], MK134: [], MK135: [], MK136: [], MK137: [], MK138: [], MK139: [], MK1310: [], 
        MK1311: [], MK1312: [], MK1313: [], MK1314: [], MK1315: [], MK1316: [], MK1317: [], MK1318: [], MK1319: [], MK1320: [],
        MK1321: [], MK1322: [], MK1323: [], MK1324: [], MK1325: [], MK1326: [], MK1327: [], MK1328: [], MK1329: [], MK1330: [], 
        MK1331: [], MK1332: [], MK1333: [], MK1334: [], MK1335: [], MK1336: [], MK1337: [], MK1338: [], MK1339: [], MK1340: [],
        MK1341: [], MK1342: [], MK1343: [], MK1344: [], MK1345: [], MK1346: [], MK1347: [], MK1348: [], MK1349: [], MK1350: []
    };

    var Mhs14 = {
        MK141: [], MK142: [], MK143: [], MK144: [], MK145: [], MK146: [], MK147: [], MK148: [], MK149: [], MK1410: [], 
        MK1411: [], MK1412: [], MK1413: [], MK1414: [], MK1415: [], MK1416: [], MK1417: [], MK1418: [], MK1419: [], MK1420: [],
        MK1421: [], MK1422: [], MK1423: [], MK1424: [], MK1425: [], MK1426: [], MK1427: [], MK1428: [], MK1429: [], MK1430: [], 
        MK1431: [], MK1432: [], MK1433: [], MK1434: [], MK1435: [], MK1436: [], MK1437: [], MK1438: [], MK1439: [], MK1440: [],
        MK1441: [], MK1442: [], MK1443: [], MK1444: [], MK1445: [], MK1446: [], MK1447: [], MK1448: [], MK1449: [], MK1450: []
    };

    var Mhs15 = {
        MK151: [], MK152: [], MK153: [], MK154: [], MK155: [], MK156: [], MK157: [], MK158: [], MK159: [], MK1510: [], 
        MK1511: [], MK1512: [], MK1513: [], MK1514: [], MK1515: [], MK1516: [], MK1517: [], MK1518: [], MK1519: [], MK1520: [],
        MK1521: [], MK1522: [], MK1523: [], MK1524: [], MK1525: [], MK1526: [], MK1527: [], MK1528: [], MK1529: [], MK1530: [], 
        MK1531: [], MK1532: [], MK1533: [], MK1534: [], MK1535: [], MK1536: [], MK1537: [], MK1538: [], MK1539: [], MK1540: [],
        MK1541: [], MK1542: [], MK1543: [], MK1544: [], MK1545: [], MK1546: [], MK1547: [], MK1548: [], MK1549: [], MK1550: []
    };

    var Mhs16 = {
        MK161: [], MK162: [], MK163: [], MK164: [], MK165: [], MK166: [], MK167: [], MK168: [], MK169: [], MK1610: [], 
        MK1611: [], MK1612: [], MK1613: [], MK1614: [], MK1615: [], MK1616: [], MK1617: [], MK1618: [], MK1619: [], MK1620: [],
        MK1621: [], MK1622: [], MK1623: [], MK1624: [], MK1625: [], MK1626: [], MK1627: [], MK1628: [], MK1629: [], MK1630: [], 
        MK1631: [], MK1632: [], MK1633: [], MK1634: [], MK1635: [], MK1636: [], MK1637: [], MK1638: [], MK1639: [], MK1640: [],
        MK1641: [], MK1642: [], MK1643: [], MK1644: [], MK1645: [], MK1646: [], MK1647: [], MK1648: [], MK1649: [], MK1650: []
    };

    var Mhs17 = {
        MK171: [], MK172: [], MK173: [], MK174: [], MK175: [], MK176: [], MK177: [], MK178: [], MK179: [], MK1710: [], 
        MK1711: [], MK1712: [], MK1713: [], MK1714: [], MK1715: [], MK1716: [], MK1717: [], MK1718: [], MK1719: [], MK1720: [],
        MK1721: [], MK1722: [], MK1723: [], MK1724: [], MK1725: [], MK1726: [], MK1727: [], MK1728: [], MK1729: [], MK1730: [], 
        MK1731: [], MK1732: [], MK1733: [], MK1734: [], MK1735: [], MK1736: [], MK1737: [], MK1738: [], MK1739: [], MK1740: [],
        MK1741: [], MK1742: [], MK1743: [], MK1744: [], MK1745: [], MK1746: [], MK1747: [], MK1748: [], MK1749: [], MK1750: []
    };

    var Mhs18 = {
        MK181: [], MK182: [], MK183: [], MK184: [], MK185: [], MK186: [], MK187: [], MK188: [], MK189: [], MK1810: [], 
        MK1811: [], MK1812: [], MK1813: [], MK1814: [], MK1815: [], MK1816: [], MK1817: [], MK1818: [], MK1819: [], MK1820: [],
        MK1821: [], MK1822: [], MK1823: [], MK1824: [], MK1825: [], MK1826: [], MK1827: [], MK1828: [], MK1829: [], MK1830: [], 
        MK1831: [], MK1832: [], MK1833: [], MK1834: [], MK1835: [], MK1836: [], MK1837: [], MK1838: [], MK1839: [], MK1840: [],
        MK1841: [], MK1842: [], MK1843: [], MK1844: [], MK1845: [], MK1846: [], MK1847: [], MK1848: [], MK1849: [], MK1850: []
    };

    var Mhs19 = {
        MK191: [], MK192: [], MK193: [], MK194: [], MK195: [], MK196: [], MK197: [], MK198: [], MK199: [], MK1910: [], 
        MK1911: [], MK1912: [], MK1913: [], MK1914: [], MK1915: [], MK1916: [], MK1917: [], MK1918: [], MK1919: [], MK1920: [],
        MK1921: [], MK1922: [], MK1923: [], MK1924: [], MK1925: [], MK1926: [], MK1927: [], MK1928: [], MK1929: [], MK1930: [], 
        MK1931: [], MK1932: [], MK1933: [], MK1934: [], MK1935: [], MK1936: [], MK1937: [], MK1938: [], MK1939: [], MK1940: [],
        MK1941: [], MK1942: [], MK1943: [], MK1944: [], MK1945: [], MK1946: [], MK1947: [], MK1948: [], MK1949: [], MK1950: []
    };

    var Mhs20 = {
        MK201: [], MK202: [], MK203: [], MK204: [], MK205: [], MK206: [], MK207: [], MK208: [], MK209: [], MK2010: [], 
        MK2011: [], MK2012: [], MK2013: [], MK2014: [], MK2015: [], MK2016: [], MK2017: [], MK2018: [], MK2019: [], MK2020: [],
        MK2021: [], MK2022: [], MK2023: [], MK2024: [], MK2025: [], MK2026: [], MK2027: [], MK2028: [], MK2029: [], MK2030: [], 
        MK2031: [], MK2032: [], MK2033: [], MK2034: [], MK2035: [], MK2036: [], MK2037: [], MK2038: [], MK2039: [], MK2040: [],
        MK2041: [], MK2042: [], MK2043: [], MK2044: [], MK2045: [], MK2046: [], MK2047: [], MK2048: [], MK2049: [], MK2050: []
    };

    var Mhs21 = {
        MK211: [], MK212: [], MK213: [], MK214: [], MK215: [], MK216: [], MK217: [], MK218: [], MK219: [], MK2110: [], 
        MK2111: [], MK2112: [], MK2113: [], MK2114: [], MK2115: [], MK2116: [], MK2117: [], MK2118: [], MK2119: [], MK2120: [],
        MK2121: [], MK2122: [], MK2123: [], MK2124: [], MK2125: [], MK2126: [], MK2127: [], MK2128: [], MK2129: [], MK2130: [], 
        MK2131: [], MK2132: [], MK2133: [], MK2134: [], MK2135: [], MK2136: [], MK2137: [], MK2138: [], MK2139: [], MK2140: [],
        MK2141: [], MK2142: [], MK2143: [], MK2144: [], MK2145: [], MK2146: [], MK2147: [], MK2148: [], MK2149: [], MK2150: []
    };

    var Mhs22 = {
        MK221: [], MK222: [], MK223: [], MK224: [], MK225: [], MK226: [], MK227: [], MK228: [], MK229: [], MK2210: [], 
        MK2211: [], MK2212: [], MK2213: [], MK2214: [], MK2215: [], MK2216: [], MK2217: [], MK2218: [], MK2219: [], MK2220: [],
        MK2221: [], MK2222: [], MK2223: [], MK2224: [], MK2225: [], MK2226: [], MK2227: [], MK2228: [], MK2229: [], MK2230: [], 
        MK2231: [], MK2232: [], MK2233: [], MK2234: [], MK2235: [], MK2236: [], MK2237: [], MK2238: [], MK2239: [], MK2240: [],
        MK2241: [], MK2242: [], MK2243: [], MK2244: [], MK2245: [], MK2246: [], MK2247: [], MK2248: [], MK2249: [], MK2250: []
    };

    var Mhs23 = {
        MK231: [], MK232: [], MK233: [], MK234: [], MK235: [], MK236: [], MK237: [], MK238: [], MK239: [], MK2310: [], 
        MK2311: [], MK2312: [], MK2313: [], MK2314: [], MK2315: [], MK2316: [], MK2317: [], MK2318: [], MK2319: [], MK2320: [],
        MK2321: [], MK2322: [], MK2323: [], MK2324: [], MK2325: [], MK2326: [], MK2327: [], MK2328: [], MK2329: [], MK2330: [], 
        MK2331: [], MK2332: [], MK2333: [], MK2334: [], MK2335: [], MK2336: [], MK2337: [], MK2338: [], MK2339: [], MK2340: [],
        MK2341: [], MK2342: [], MK2343: [], MK2344: [], MK2345: [], MK2346: [], MK2347: [], MK2348: [], MK2349: [], MK2350: []
    };

    var Mhs24 = {
        MK241: [], MK242: [], MK243: [], MK244: [], MK245: [], MK246: [], MK247: [], MK248: [], MK249: [], MK2410: [], 
        MK2411: [], MK2412: [], MK2413: [], MK2414: [], MK2415: [], MK2416: [], MK2417: [], MK2418: [], MK2419: [], MK2420: [],
        MK2421: [], MK2422: [], MK2423: [], MK2424: [], MK2425: [], MK2426: [], MK2427: [], MK2428: [], MK2429: [], MK2430: [], 
        MK2431: [], MK2432: [], MK2433: [], MK2434: [], MK2435: [], MK2436: [], MK2437: [], MK2438: [], MK2439: [], MK2440: [],
        MK2441: [], MK2442: [], MK2443: [], MK2444: [], MK2445: [], MK2446: [], MK2447: [], MK2448: [], MK2449: [], MK2450: []
    };

    var Mhs25 = {
        MK251: [], MK252: [], MK253: [], MK254: [], MK255: [], MK256: [], MK257: [], MK258: [], MK259: [], MK2510: [], 
        MK2511: [], MK2512: [], MK2513: [], MK2514: [], MK2515: [], MK2516: [], MK2517: [], MK2518: [], MK2519: [], MK2520: [],
        MK2521: [], MK2522: [], MK2523: [], MK2524: [], MK2525: [], MK2526: [], MK2527: [], MK2528: [], MK2529: [], MK2530: [], 
        MK2531: [], MK2532: [], MK2533: [], MK2534: [], MK2535: [], MK2536: [], MK2537: [], MK2538: [], MK2539: [], MK2540: [],
        MK2541: [], MK2542: [], MK2543: [], MK2544: [], MK2545: [], MK2546: [], MK2547: [], MK2548: [], MK2549: [], MK2550: []
    };

    var Mhs26 = {
        MK261: [], MK262: [], MK263: [], MK264: [], MK265: [], MK266: [], MK267: [], MK268: [], MK269: [], MK2610: [], 
        MK2611: [], MK2612: [], MK2613: [], MK2614: [], MK2615: [], MK2616: [], MK2617: [], MK2618: [], MK2619: [], MK2620: [],
        MK2621: [], MK2622: [], MK2623: [], MK2624: [], MK2625: [], MK2626: [], MK2627: [], MK2628: [], MK2629: [], MK2630: [], 
        MK2631: [], MK2632: [], MK2633: [], MK2634: [], MK2635: [], MK2636: [], MK2637: [], MK2638: [], MK2639: [], MK2640: [],
        MK2641: [], MK2642: [], MK2643: [], MK2644: [], MK2645: [], MK2646: [], MK2647: [], MK2648: [], MK2649: [], MK2650: []
    };

    var Mhs27 = {
        MK271: [], MK272: [], MK273: [], MK274: [], MK275: [], MK276: [], MK277: [], MK278: [], MK279: [], MK2710: [], 
        MK2711: [], MK2712: [], MK2713: [], MK2714: [], MK2715: [], MK2716: [], MK2717: [], MK2718: [], MK2719: [], MK2720: [],
        MK2721: [], MK2722: [], MK2723: [], MK2724: [], MK2725: [], MK2726: [], MK2727: [], MK2728: [], MK2729: [], MK2730: [], 
        MK2731: [], MK2732: [], MK2733: [], MK2734: [], MK2735: [], MK2736: [], MK2737: [], MK2738: [], MK2739: [], MK2740: [],
        MK2741: [], MK2742: [], MK2743: [], MK2744: [], MK2745: [], MK2746: [], MK2747: [], MK2748: [], MK2749: [], MK2750: []
    };

    var Mhs28 = {
        MK281: [], MK282: [], MK283: [], MK284: [], MK285: [], MK286: [], MK287: [], MK288: [], MK289: [], MK2810: [], 
        MK2811: [], MK2812: [], MK2813: [], MK2814: [], MK2815: [], MK2816: [], MK2817: [], MK2818: [], MK2819: [], MK2820: [],
        MK2821: [], MK2822: [], MK2823: [], MK2824: [], MK2825: [], MK2826: [], MK2827: [], MK2828: [], MK2829: [], MK2830: [], 
        MK2831: [], MK2832: [], MK2833: [], MK2834: [], MK2835: [], MK2836: [], MK2837: [], MK2838: [], MK2839: [], MK2840: [],
        MK2841: [], MK2842: [], MK2843: [], MK2844: [], MK2845: [], MK2846: [], MK2847: [], MK2848: [], MK2849: [], MK2850: []
    };

    var Mhs29 = {
        MK291: [], MK292: [], MK293: [], MK294: [], MK295: [], MK296: [], MK297: [], MK298: [], MK299: [], MK2910: [], 
        MK2911: [], MK2912: [], MK2913: [], MK2914: [], MK2915: [], MK2916: [], MK2917: [], MK2918: [], MK2919: [], MK2920: [],
        MK2921: [], MK2922: [], MK2923: [], MK2924: [], MK2925: [], MK2926: [], MK2927: [], MK2928: [], MK2929: [], MK2930: [], 
        MK2931: [], MK2932: [], MK2933: [], MK2934: [], MK2935: [], MK2936: [], MK2937: [], MK2938: [], MK2939: [], MK2940: [],
        MK2941: [], MK2942: [], MK2943: [], MK2944: [], MK2945: [], MK2946: [], MK2947: [], MK2948: [], MK2949: [], MK2950: []
    };

    var Mhs30 = {
        MK301: [], MK302: [], MK303: [], MK304: [], MK305: [], MK306: [], MK307: [], MK308: [], MK309: [], MK3010: [], 
        MK3011: [], MK3012: [], MK3013: [], MK3014: [], MK3015: [], MK3016: [], MK3017: [], MK3018: [], MK3019: [], MK3020: [],
        MK3021: [], MK3022: [], MK3023: [], MK3024: [], MK3025: [], MK3026: [], MK3027: [], MK3028: [], MK3029: [], MK3030: [], 
        MK3031: [], MK3032: [], MK3033: [], MK3034: [], MK3035: [], MK3036: [], MK3037: [], MK3038: [], MK3039: [], MK3040: [],
        MK3041: [], MK3042: [], MK3043: [], MK3044: [], MK3045: [], MK3046: [], MK3047: [], MK3048: [], MK3049: [], MK3050: []
    };

    var Mhs31 = {
        MK311: [], MK312: [], MK313: [], MK314: [], MK315: [], MK316: [], MK317: [], MK318: [], MK319: [], MK3110: [], 
        MK3111: [], MK3112: [], MK3113: [], MK3114: [], MK3115: [], MK3116: [], MK3117: [], MK3118: [], MK3119: [], MK3120: [],
        MK3121: [], MK3122: [], MK3123: [], MK3124: [], MK3125: [], MK3126: [], MK3127: [], MK3128: [], MK3129: [], MK3130: [], 
        MK3131: [], MK3132: [], MK3133: [], MK3134: [], MK3135: [], MK3136: [], MK3137: [], MK3138: [], MK3139: [], MK3140: [],
        MK3141: [], MK3142: [], MK3143: [], MK3144: [], MK3145: [], MK3146: [], MK3147: [], MK3148: [], MK3149: [], MK3150: []
    };

    var Mhs32 = {
        MK321: [], MK322: [], MK323: [], MK324: [], MK325: [], MK326: [], MK327: [], MK328: [], MK329: [], MK3210: [], 
        MK3211: [], MK3212: [], MK3213: [], MK3214: [], MK3215: [], MK3216: [], MK3217: [], MK3218: [], MK3219: [], MK3220: [],
        MK3221: [], MK3222: [], MK3223: [], MK3224: [], MK3225: [], MK3226: [], MK3227: [], MK3228: [], MK3229: [], MK3230: [], 
        MK3231: [], MK3232: [], MK3233: [], MK3234: [], MK3235: [], MK3236: [], MK3237: [], MK3238: [], MK3239: [], MK3240: [],
        MK3241: [], MK3242: [], MK3243: [], MK3244: [], MK3245: [], MK3246: [], MK3247: [], MK3248: [], MK3249: [], MK3250: []
    };

    var Mhs33 = {
        MK331: [], MK332: [], MK333: [], MK334: [], MK335: [], MK336: [], MK337: [], MK338: [], MK339: [], MK3310: [], 
        MK3311: [], MK3312: [], MK3313: [], MK3314: [], MK3315: [], MK3316: [], MK3317: [], MK3318: [], MK3319: [], MK3320: [],
        MK3321: [], MK3322: [], MK3323: [], MK3324: [], MK3325: [], MK3326: [], MK3327: [], MK3328: [], MK3329: [], MK3330: [], 
        MK3331: [], MK3332: [], MK3333: [], MK3334: [], MK3335: [], MK3336: [], MK3337: [], MK3338: [], MK3339: [], MK3340: [],
        MK3341: [], MK3342: [], MK3343: [], MK3344: [], MK3345: [], MK3346: [], MK3347: [], MK3348: [], MK3349: [], MK3350: []
    };

    var Mhs34 = {
        MK341: [], MK342: [], MK343: [], MK344: [], MK345: [], MK346: [], MK347: [], MK348: [], MK349: [], MK3410: [], 
        MK3411: [], MK3412: [], MK3413: [], MK3414: [], MK3415: [], MK3416: [], MK3417: [], MK3418: [], MK3419: [], MK3420: [],
        MK3421: [], MK3422: [], MK3423: [], MK3424: [], MK3425: [], MK3426: [], MK3427: [], MK3428: [], MK3429: [], MK3430: [], 
        MK3431: [], MK3432: [], MK3433: [], MK3434: [], MK3435: [], MK3436: [], MK3437: [], MK3438: [], MK3439: [], MK3440: [],
        MK3441: [], MK3442: [], MK3443: [], MK3444: [], MK3445: [], MK3446: [], MK3447: [], MK3448: [], MK3449: [], MK3450: []
    };

    var Mhs35 = {
        MK351: [], MK352: [], MK353: [], MK354: [], MK355: [], MK356: [], MK357: [], MK358: [], MK359: [], MK3510: [], 
        MK3511: [], MK3512: [], MK3513: [], MK3514: [], MK3515: [], MK3516: [], MK3517: [], MK3518: [], MK3519: [], MK3520: [],
        MK3521: [], MK3522: [], MK3523: [], MK3524: [], MK3525: [], MK3526: [], MK3527: [], MK3528: [], MK3529: [], MK3530: [], 
        MK3531: [], MK3532: [], MK3533: [], MK3534: [], MK3535: [], MK3536: [], MK3537: [], MK3538: [], MK3539: [], MK3540: [],
        MK3541: [], MK3542: [], MK3543: [], MK3544: [], MK3545: [], MK3546: [], MK3547: [], MK3548: [], MK3549: [], MK3550: []
    };

    var Mhs36 = {
        MK361: [], MK362: [], MK363: [], MK364: [], MK365: [], MK366: [], MK367: [], MK368: [], MK369: [], MK3610: [], 
        MK3611: [], MK3612: [], MK3613: [], MK3614: [], MK3615: [], MK3616: [], MK3617: [], MK3618: [], MK3619: [], MK3620: [],
        MK3621: [], MK3622: [], MK3623: [], MK3624: [], MK3625: [], MK3626: [], MK3627: [], MK3628: [], MK3629: [], MK3630: [], 
        MK3631: [], MK3632: [], MK3633: [], MK3634: [], MK3635: [], MK3636: [], MK3637: [], MK3638: [], MK3639: [], MK3640: [],
        MK3641: [], MK3642: [], MK3643: [], MK3644: [], MK3645: [], MK3646: [], MK3647: [], MK3648: [], MK3649: [], MK3650: []
    };

    var Mhs37 = {
        MK371: [], MK372: [], MK373: [], MK374: [], MK375: [], MK376: [], MK377: [], MK378: [], MK379: [], MK3710: [], 
        MK3711: [], MK3712: [], MK3713: [], MK3714: [], MK3715: [], MK3716: [], MK3717: [], MK3718: [], MK3719: [], MK3720: [],
        MK3721: [], MK3722: [], MK3723: [], MK3724: [], MK3725: [], MK3726: [], MK3727: [], MK3728: [], MK3729: [], MK3730: [], 
        MK3731: [], MK3732: [], MK3733: [], MK3734: [], MK3735: [], MK3736: [], MK3737: [], MK3738: [], MK3739: [], MK3740: [],
        MK3741: [], MK3742: [], MK3743: [], MK3744: [], MK3745: [], MK3746: [], MK3747: [], MK3748: [], MK3749: [], MK3750: []
    };

    var Mhs38 = {
        MK381: [], MK382: [], MK383: [], MK384: [], MK385: [], MK386: [], MK387: [], MK388: [], MK389: [], MK3810: [], 
        MK3811: [], MK3812: [], MK3813: [], MK3814: [], MK3815: [], MK3816: [], MK3817: [], MK3818: [], MK3819: [], MK3820: [],
        MK3821: [], MK3822: [], MK3823: [], MK3824: [], MK3825: [], MK3826: [], MK3827: [], MK3828: [], MK3829: [], MK3830: [], 
        MK3831: [], MK3832: [], MK3833: [], MK3834: [], MK3835: [], MK3836: [], MK3837: [], MK3838: [], MK3839: [], MK3840: [],
        MK3841: [], MK3842: [], MK3843: [], MK3844: [], MK3845: [], MK3846: [], MK3847: [], MK3848: [], MK3849: [], MK3850: []
    };

    var Mhs39 = {
        MK391: [], MK392: [], MK393: [], MK394: [], MK395: [], MK396: [], MK397: [], MK398: [], MK399: [], MK3910: [], 
        MK3911: [], MK3912: [], MK3913: [], MK3914: [], MK3915: [], MK3916: [], MK3917: [], MK3918: [], MK3919: [], MK3920: [],
        MK3921: [], MK3922: [], MK3923: [], MK3924: [], MK3925: [], MK3926: [], MK3927: [], MK3928: [], MK3929: [], MK3930: [], 
        MK3931: [], MK3932: [], MK3933: [], MK3934: [], MK3935: [], MK3936: [], MK3937: [], MK3938: [], MK3939: [], MK3940: [],
        MK3941: [], MK3942: [], MK3943: [], MK3944: [], MK3945: [], MK3946: [], MK3947: [], MK3948: [], MK3949: [], MK3950: []
    };

    var Mhs40 = {
        MK401: [], MK402: [], MK403: [], MK404: [], MK405: [], MK406: [], MK407: [], MK408: [], MK409: [], MK4010: [], 
        MK4011: [], MK4012: [], MK4013: [], MK4014: [], MK4015: [], MK4016: [], MK4017: [], MK4018: [], MK4019: [], MK4020: [],
        MK4021: [], MK4022: [], MK4023: [], MK4024: [], MK4025: [], MK4026: [], MK4027: [], MK4028: [], MK4029: [], MK4030: [], 
        MK4031: [], MK4032: [], MK4033: [], MK4034: [], MK4035: [], MK4036: [], MK4037: [], MK4038: [], MK4039: [], MK4040: [],
        MK4041: [], MK4042: [], MK4043: [], MK4044: [], MK4045: [], MK4046: [], MK4047: [], MK4048: [], MK4049: [], MK4050: []
    };

    var Mhs41 = {
        MK411: [], MK412: [], MK413: [], MK414: [], MK415: [], MK416: [], MK417: [], MK418: [], MK419: [], MK4110: [], 
        MK4111: [], MK4112: [], MK4113: [], MK4114: [], MK4115: [], MK4116: [], MK4117: [], MK4118: [], MK4119: [], MK4120: [],
        MK4121: [], MK4122: [], MK4123: [], MK4124: [], MK4125: [], MK4126: [], MK4127: [], MK4128: [], MK4129: [], MK4130: [], 
        MK4131: [], MK4132: [], MK4133: [], MK4134: [], MK4135: [], MK4136: [], MK4137: [], MK4138: [], MK4139: [], MK4140: [],
        MK4141: [], MK4142: [], MK4143: [], MK4144: [], MK4145: [], MK4146: [], MK4147: [], MK4148: [], MK4149: [], MK4150: []
    };

    var Mhs42 = {
        MK421: [], MK422: [], MK423: [], MK424: [], MK425: [], MK426: [], MK427: [], MK428: [], MK429: [], MK4210: [], 
        MK4211: [], MK4212: [], MK4213: [], MK4214: [], MK4215: [], MK4216: [], MK4217: [], MK4218: [], MK4219: [], MK4220: [],
        MK4221: [], MK4222: [], MK4223: [], MK4224: [], MK4225: [], MK4226: [], MK4227: [], MK4228: [], MK4229: [], MK4230: [], 
        MK4231: [], MK4232: [], MK4233: [], MK4234: [], MK4235: [], MK4236: [], MK4237: [], MK4238: [], MK4239: [], MK4240: [],
        MK4241: [], MK4242: [], MK4243: [], MK4244: [], MK4245: [], MK4246: [], MK4247: [], MK4248: [], MK4249: [], MK4250: []
    };

    var Mhs43 = {
        MK431: [], MK432: [], MK433: [], MK434: [], MK435: [], MK436: [], MK437: [], MK438: [], MK439: [], MK4310: [], 
        MK4311: [], MK4312: [], MK4313: [], MK4314: [], MK4315: [], MK4316: [], MK4317: [], MK4318: [], MK4319: [], MK4320: [],
        MK4321: [], MK4322: [], MK4323: [], MK4324: [], MK4325: [], MK4326: [], MK4327: [], MK4328: [], MK4329: [], MK4330: [], 
        MK4331: [], MK4332: [], MK4333: [], MK4334: [], MK4335: [], MK4336: [], MK4337: [], MK4338: [], MK4339: [], MK4340: [],
        MK4341: [], MK4342: [], MK4343: [], MK4344: [], MK4345: [], MK4346: [], MK4347: [], MK4348: [], MK4349: [], MK4350: []
    };

    var Mhs44 = {
        MK441: [], MK442: [], MK443: [], MK444: [], MK445: [], MK446: [], MK447: [], MK448: [], MK449: [], MK4410: [], 
        MK4411: [], MK4412: [], MK4413: [], MK4414: [], MK4415: [], MK4416: [], MK4417: [], MK4418: [], MK4419: [], MK4420: [],
        MK4421: [], MK4422: [], MK4423: [], MK4424: [], MK4425: [], MK4426: [], MK4427: [], MK4428: [], MK4429: [], MK4430: [], 
        MK4431: [], MK4432: [], MK4433: [], MK4434: [], MK4435: [], MK4436: [], MK4437: [], MK4438: [], MK4439: [], MK4440: [],
        MK4441: [], MK4442: [], MK4443: [], MK4444: [], MK4445: [], MK4446: [], MK4447: [], MK4448: [], MK4449: [], MK4450: []
    };

    var Mhs45 = {
        MK451: [], MK452: [], MK453: [], MK454: [], MK455: [], MK456: [], MK457: [], MK458: [], MK459: [], MK4510: [], 
        MK4511: [], MK4512: [], MK4513: [], MK4514: [], MK4515: [], MK4516: [], MK4517: [], MK4518: [], MK4519: [], MK4520: [],
        MK4521: [], MK4522: [], MK4523: [], MK4524: [], MK4525: [], MK4526: [], MK4527: [], MK4528: [], MK4529: [], MK4530: [], 
        MK4531: [], MK4532: [], MK4533: [], MK4534: [], MK4535: [], MK4536: [], MK4537: [], MK4538: [], MK4539: [], MK4540: [],
        MK4541: [], MK4542: [], MK4543: [], MK4544: [], MK4545: [], MK4546: [], MK4547: [], MK4548: [], MK4549: [], MK4550: []
    };

    var Mhs46 = {
        MK461: [], MK462: [], MK463: [], MK464: [], MK465: [], MK466: [], MK467: [], MK468: [], MK469: [], MK4610: [], 
        MK4611: [], MK4612: [], MK4613: [], MK4614: [], MK4615: [], MK4616: [], MK4617: [], MK4618: [], MK4619: [], MK4620: [],
        MK4621: [], MK4622: [], MK4623: [], MK4624: [], MK4625: [], MK4626: [], MK4627: [], MK4628: [], MK4629: [], MK4630: [], 
        MK4631: [], MK4632: [], MK4633: [], MK4634: [], MK4635: [], MK4636: [], MK4637: [], MK4638: [], MK4639: [], MK4640: [],
        MK4641: [], MK4642: [], MK4643: [], MK4644: [], MK4645: [], MK4646: [], MK4647: [], MK4648: [], MK4649: [], MK4650: []
    };

    var Mhs47 = {
        MK471: [], MK472: [], MK473: [], MK474: [], MK475: [], MK476: [], MK477: [], MK478: [], MK479: [], MK4710: [], 
        MK4711: [], MK4712: [], MK4713: [], MK4714: [], MK4715: [], MK4716: [], MK4717: [], MK4718: [], MK4719: [], MK4720: [],
        MK4721: [], MK4722: [], MK4723: [], MK4724: [], MK4725: [], MK4726: [], MK4727: [], MK4728: [], MK4729: [], MK4730: [], 
        MK4731: [], MK4732: [], MK4733: [], MK4734: [], MK4735: [], MK4736: [], MK4737: [], MK4738: [], MK4739: [], MK4740: [],
        MK4741: [], MK4742: [], MK4743: [], MK4744: [], MK4745: [], MK4746: [], MK4747: [], MK4748: [], MK4749: [], MK4750: []
    };

    var Mhs48 = {
        MK481: [], MK482: [], MK483: [], MK484: [], MK485: [], MK486: [], MK487: [], MK488: [], MK489: [], MK4810: [], 
        MK4811: [], MK4812: [], MK4813: [], MK4814: [], MK4815: [], MK4816: [], MK4817: [], MK4818: [], MK4819: [], MK4820: [],
        MK4821: [], MK4822: [], MK4823: [], MK4824: [], MK4825: [], MK4826: [], MK4827: [], MK4828: [], MK4829: [], MK4830: [], 
        MK4831: [], MK4832: [], MK4833: [], MK4834: [], MK4835: [], MK4836: [], MK4837: [], MK4838: [], MK4839: [], MK4840: [],
        MK4841: [], MK4842: [], MK4843: [], MK4844: [], MK4845: [], MK4846: [], MK4847: [], MK4848: [], MK4849: [], MK4850: []
    };

    var Mhs49 = {
        MK491: [], MK492: [], MK493: [], MK494: [], MK495: [], MK496: [], MK497: [], MK498: [], MK499: [], MK4910: [], 
        MK4911: [], MK4912: [], MK4913: [], MK4914: [], MK4915: [], MK4916: [], MK4917: [], MK4918: [], MK4919: [], MK4920: [],
        MK4921: [], MK4922: [], MK4923: [], MK4924: [], MK4925: [], MK4926: [], MK4927: [], MK4928: [], MK4929: [], MK4930: [], 
        MK4931: [], MK4932: [], MK4933: [], MK4934: [], MK4935: [], MK4936: [], MK4937: [], MK4938: [], MK4939: [], MK4940: [],
        MK4941: [], MK4942: [], MK4943: [], MK4944: [], MK4945: [], MK4946: [], MK4947: [], MK4948: [], MK4949: [], MK4950: []
    };

    var Mhs50 = {
        MK501: [], MK502: [], MK503: [], MK504: [], MK505: [], MK506: [], MK507: [], MK508: [], MK509: [], MK5010: [], 
        MK5011: [], MK5012: [], MK5013: [], MK5014: [], MK5015: [], MK5016: [], MK5017: [], MK5018: [], MK5019: [], MK5020: [],
        MK5021: [], MK5022: [], MK5023: [], MK5024: [], MK5025: [], MK5026: [], MK5027: [], MK5028: [], MK5029: [], MK5030: [], 
        MK5031: [], MK5032: [], MK5033: [], MK5034: [], MK5035: [], MK5036: [], MK5037: [], MK5038: [], MK5039: [], MK5040: [],
        MK5041: [], MK5042: [], MK5043: [], MK5044: [], MK5045: [], MK5046: [], MK5047: [], MK5048: [], MK5049: [], MK5050: []
    };

    var totalM11 = 0; totalM12 = 0; totalM13 = 0; totalM14 = 0; totalM15 = 0; totalM16 = 0; totalM17 = 0; totalM18 = 0; totalM19 = 0; totalM110 = 0;
    var totalM111 = 0; totalM112 = 0; totalM113 = 0; totalM114 = 0; totalM115 = 0; totalM116 = 0; totalM117 = 0; totalM118 = 0; totalM119 = 0; totalM120 = 0;
    var totalM121 = 0; totalM122 = 0; totalM123 = 0; totalM124 = 0; totalM125 = 0; totalM126 = 0; totalM127 = 0; totalM128 = 0; totalM129 = 0; totalM130 = 0;
    var totalM131 = 0; totalM132 = 0; totalM133 = 0; totalM134 = 0; totalM135 = 0; totalM136 = 0; totalM137 = 0; totalM138 = 0; totalM139 = 0; totalM140 = 0;
    var totalM141 = 0; totalM142 = 0; totalM143 = 0; totalM144 = 0; totalM145 = 0; totalM146 = 0; totalM147 = 0; totalM148 = 0; totalM149 = 0; totalM150 = 0;

    // total nilai MK
    for (var c = 0; c < histori.length; c++) {
        for (var b = 0; b < histori[c].Kelompok.length; b++) {
            for (var d = 0; d < histori[c].Kelompok[b].MK.length; d++) {
                if (histori[c].Kelompok[b].MK[d].nama_MK == "Data Mining and Data Analytics") {
                    totalMK[0] = totalMK[0] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                } else if (histori[c].Kelompok[b].MK[d].nama_MK == "Machine Learning") {
                    totalMK[1] = totalMK[1] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                } else if (histori[c].Kelompok[b].MK[d].nama_MK == "Natural Language Processing") {
                    totalMK[2] = totalMK[2] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                } else if (histori[c].Kelompok[b].MK[d].nama_MK == "Business Process Re-Engineering") {
                    totalMK[3] = totalMK[3] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                } else if (histori[c].Kelompok[b].MK[d].nama_MK == "Artificial Neural Network") {
                    totalMK[4] = totalMK[4] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                } else if (histori[c].Kelompok[b].MK[d].nama_MK == "Computer Vision") {
                    totalMK[5] = totalMK[5] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                } else if (histori[c].Kelompok[b].MK[d].nama_MK == "Game Development") {
                    totalMK[6] = totalMK[6] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                } else if (histori[c].Kelompok[b].MK[d].nama_MK == "Game Design") {
                    totalMK[7] = totalMK[7] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                } else if (histori[c].Kelompok[b].MK[d].nama_MK == "Java Programming") {
                    totalMK[8] = totalMK[8] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
            }
        }
    }

    // rata-Nilai MK
    for (var c = 0; c < 9; c++) {
        rataMK[c] = Math.ceil(totalMK[c] / histori.length);
    }

    // total nilai Mhs
    for (var c = 0; c < histori.length; c++) {
        for (var b = 0; b < histori[c].Kelompok.length; b++) {
            for (var d = 0; d < histori[c].Kelompok[b].MK.length; d++) {
                if (histori[c].Nama == "Mhs 1") {
                    totalMhs[0] = totalMhs[0] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                } 
                else if (histori[c].Nama == "Mhs 2") {
                    totalMhs[1] = totalMhs[1] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                } 
                else if (histori[c].Nama == "Mhs 3") {
                    totalMhs[2] = totalMhs[2] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                } 
                else if (histori[c].Nama == "Mhs 4") {
                    totalMhs[3] = totalMhs[3] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                } 
                else if (histori[c].Nama == "Mhs 5") {
                    totalMhs[4] = totalMhs[4] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                } 
                else if (histori[c].Nama == "Mhs 6") {
                    totalMhs[5] = totalMhs[5] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                } 
                else if (histori[c].Nama == "Mhs 7") {
                    totalMhs[6] = totalMhs[6] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                } 
                else if (histori[c].Nama == "Mhs 8") {
                    totalMhs[7] = totalMhs[7] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                } 
                else if (histori[c].Nama == "Mhs 9") {
                    totalMhs[8] = totalMhs[8] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                } 
                else if (histori[c].Nama == "Mhs 10") {
                    totalMhs[9] = totalMhs[9] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                } 
                else if (histori[c].Nama == "Mhs 11") {
                    totalMhs[10] = totalMhs[10] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 12") {
                    totalMhs[11] = totalMhs[11] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 13") {
                    totalMhs[12] = totalMhs[12] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 14") {
                    totalMhs[13] = totalMhs[13] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs15") {
                    totalMhs[14] = totalMhs[14] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 16") {
                    totalMhs[15] = totalMhs[15] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 17") {
                    totalMhs[16] = totalMhs[16] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 18") {
                    totalMhs[17] = totalMhs[17] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 19") {
                    totalMhs[18] = totalMhs[18] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 20") {
                    totalMhs[19] = totalMhs[19] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 21") {
                    totalMhs[20] = totalMhs[20] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 22") {
                    totalMhs[21] = totalMhs[21] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 23") {
                    totalMhs[22] = totalMhs[22] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 24") {
                    totalMhs[23] = totalMhs[23] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 25") {
                    totalMhs[24] = totalMhs[24] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 26") {
                    totalMhs[25] = totalMhs[25] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 27") {
                    totalMhs[26] = totalMhs[26] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 28") {
                    totalMhs[27] = totalMhs[27] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 29") {
                    totalMhs[28] = totalMhs[28] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 30") {
                    totalMhs[29] = totalMhs[29] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 31") {
                    totalMhs[30] = totalMhs[30] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 32") {
                    totalMhs[31] = totalMhs[31] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 33") {
                    totalMhs[32] = totalMhs[32] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 34") {
                    totalMhs[33] = totalMhs[33] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 35") {
                    totalMhs[34] = totalMhs[34] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 36") {
                    totalMhs[35] = totalMhs[35] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 37") {
                    totalMhs[36] = totalMhs[36] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 38") {
                    totalMhs[37] = totalMhs[37] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 39") {
                    totalMhs[38] = totalMhs[38] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 40") {
                    totalMhs[39] = totalMhs[39] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 41") {
                    totalMhs[40] = totalMhs[40] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 42") {
                    totalMhs[41] = totalMhs[41] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 43") {
                    totalMhs[42] = totalMhs[42] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 44") {
                    totalMhs[43] = totalMhs[43] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 45") {
                    totalMhs[44] = totalMhs[44] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 46") {
                    totalMhs[45] = totalMhs[45] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 47") {
                    totalMhs[46] = totalMhs[46] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 48") {
                    totalMhs[47] = totalMhs[47] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 49") {
                    totalMhs[48] = totalMhs[48] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
                else if (histori[c].Nama == "Mhs 50") {
                    totalMhs[49] = totalMhs[49] + parseInt(histori[c].Kelompok[b].MK[d].Nilai);
                }
            }
        }
    }
    
    // rata-Nilai Mhs
    for (var c = 0; c < histori.length; c++) {
        rataMhs[c] = Math.ceil(totalMhs[c] / (histori[c].Kelompok[0].MK.length + histori[c].Kelompok[1].MK.length + histori[c].Kelompok[2].MK.length + histori[c].Kelompok[3].MK.length));
    }

    // nilai baru Mhs
    for (var c = 0; c < histori.length; c++) {
        for (var b = 0; b < histori[c].Kelompok.length; b++) {
            for (var d = 0; d < histori[c].Kelompok[b].MK.length; d++) {

                if (c == 0) {
                    if (b == 0) {
                        nilaibaru.M1[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M1[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M1[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M1[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                } 
                else if (c == 1) {
                    if (b == 0) {
                        nilaibaru.M2[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M2[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M2[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M2[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                } 
                else if (c == 2) {
                    if (b == 0) {
                        nilaibaru.M3[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M3[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M3[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M3[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 3) {
                    if (b == 0) {
                        nilaibaru.M4[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M4[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M4[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M4[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 4) {
                    if (b == 0) {
                        nilaibaru.M5[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M5[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M5[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M5[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 5) {
                    if (b == 0) {
                        nilaibaru.M6[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M6[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M6[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M6[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 6) {
                    if (b == 0) {
                        nilaibaru.M7[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M7[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M7[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M7[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 7) {
                    if (b == 0) {
                        nilaibaru.M8[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M8[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M8[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M8[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 8) {
                    if (b == 0) {
                        nilaibaru.M9[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M9[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M9[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M9[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 9) {
                    if (b == 0) {
                        nilaibaru.M10[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M10[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M10[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M10[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 10) {
                    if (b == 0) {
                        nilaibaru.M11[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M11[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M11[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M11[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 11) {
                    if (b == 0) {
                        nilaibaru.M12[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M12[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M12[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M12[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 12) {
                    if (b == 0) {
                        nilaibaru.M13[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M13[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M13[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M13[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 13) {
                    if (b == 0) {
                        nilaibaru.M14[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M14[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M14[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M14[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 14) {
                    if (b == 0) {
                        nilaibaru.M15[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M15[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M15[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M15[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 15) {
                    if (b == 0) {
                        nilaibaru.M16[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M16[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M16[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M16[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 16) {
                    if (b == 0) {
                        nilaibaru.M17[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M17[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M17[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M17[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 17) {
                    if (b == 0) {
                        nilaibaru.M18[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M18[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M18[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M18[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 18) {
                    if (b == 0) {
                        nilaibaru.M19[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M19[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M19[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M19[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 19) {
                    if (b == 0) {
                        nilaibaru.M20[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M20[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M20[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M20[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 20) {
                    if (b == 0) {
                        nilaibaru.M21[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M21[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M21[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M21[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 21) {
                    if (b == 0) {
                        nilaibaru.M22[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M22[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M22[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M22[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 22) {
                    if (b == 0) {
                        nilaibaru.M23[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M23[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M23[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M23[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 23) {
                    if (b == 0) {
                        nilaibaru.M24[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M24[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M24[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M24[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 24) {
                    if (b == 0) {
                        nilaibaru.M25[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M25[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M25[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M25[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 25) {
                    if (b == 0) {
                        nilaibaru.M26[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M26[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M26[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M26[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 26) {
                    if (b == 0) {
                        nilaibaru.M27[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M27[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M27[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M27[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 27) {
                    if (b == 0) {
                        nilaibaru.M28[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M28[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M28[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M28[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 28) {
                    if (b == 0) {
                        nilaibaru.M29[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M29[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M29[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M29[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 29) {
                    if (b == 0) {
                        nilaibaru.M30[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M30[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M30[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M30[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 30) {
                    if (b == 0) {
                        nilaibaru.M31[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M31[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M31[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M31[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 31) {
                    if (b == 0) {
                        nilaibaru.M32[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M32[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M32[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M32[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 32) {
                    if (b == 0) {
                        nilaibaru.M33[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M33[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M33[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M33[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 33) {
                    if (b == 0) {
                        nilaibaru.M34[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M34[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M34[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M34[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 34) {
                    if (b == 0) {
                        nilaibaru.M35[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M35[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M35[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M35[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }

                else if (c == 35) {
                    if (b == 0) {
                        nilaibaru.M36[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M36[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M36[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M36[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 36) {
                    if (b == 0) {
                        nilaibaru.M37[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M37[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M37[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M37[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 37) {
                    if (b == 0) {
                        nilaibaru.M38[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M38[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M38[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M38[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 38) {
                    if (b == 0) {
                        nilaibaru.M39[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M39[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M39[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M39[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 39) {
                    if (b == 0) {
                        nilaibaru.M40[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M40[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M40[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M40[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 40) {
                    if (b == 0) {
                        nilaibaru.M41[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M41[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M41[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M41[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 41) {
                    if (b == 0) {
                        nilaibaru.M42[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M42[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M42[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M42[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 42) {
                    if (b == 0) {
                        nilaibaru.M43[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M43[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M43[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M43[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 43) {
                    if (b == 0) {
                        nilaibaru.M44[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M44[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M44[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M44[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 44) {
                    if (b == 0) {
                        nilaibaru.M45[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M45[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M45[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M45[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 45) {
                    if (b == 0) {
                        nilaibaru.M46[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M46[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M46[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M46[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 46) {
                    if (b == 0) {
                        nilaibaru.M47[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M47[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M47[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M47[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 47) {
                    if (b == 0) {
                        nilaibaru.M48[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M48[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M48[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M48[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 48) {
                    if (b == 0) {
                        nilaibaru.M49[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M49[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M49[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M49[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
                else if (c == 49) {
                    if (b == 0) {
                        nilaibaru.M50[d] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 1) {
                        nilaibaru.M50[d + 4] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 2) {
                        nilaibaru.M50[d + 6] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    } else if (b == 3) {
                        nilaibaru.M50[d + 8] = histori[c].Kelompok[b].MK[d].Nilai - rataMhs[c];
                    }
                }
            }
        }
    }

    // // perkallian antar nilai (a*a, a*b, dst)
    for (var d = 0; d < nilaibaru.M1.length; d++) { 
        // KN = Kuadrat Nilai Mahasiswa
        Mhs1.MK11[d] = (nilaibaru.M1[d] * nilaibaru.M1[d]);
        Mhs1.MK12[d] = (nilaibaru.M1[d] * nilaibaru.M2[d]);
        Mhs1.MK13[d] = (nilaibaru.M1[d] * nilaibaru.M3[d]);
        Mhs1.MK14[d] = (nilaibaru.M1[d] * nilaibaru.M4[d]);
        Mhs1.MK15[d] = (nilaibaru.M1[d] * nilaibaru.M5[d]);
        Mhs1.MK16[d] = (nilaibaru.M1[d] * nilaibaru.M6[d]);
        Mhs1.MK17[d] = (nilaibaru.M1[d] * nilaibaru.M7[d]);
        Mhs1.MK18[d] = (nilaibaru.M1[d] * nilaibaru.M8[d]);
        Mhs1.MK19[d] = (nilaibaru.M1[d] * nilaibaru.M9[d]);
        Mhs1.MK110[d] = (nilaibaru.M1[d] * nilaibaru.M10[d]);
        Mhs1.MK111[d] = (nilaibaru.M1[d] * nilaibaru.M11[d]);
        Mhs1.MK112[d] = (nilaibaru.M1[d] * nilaibaru.M12[d]);
        Mhs1.MK113[d] = (nilaibaru.M1[d] * nilaibaru.M13[d]);
        Mhs1.MK114[d] = (nilaibaru.M1[d] * nilaibaru.M14[d]);
        Mhs1.MK115[d] = (nilaibaru.M1[d] * nilaibaru.M15[d]);
        Mhs1.MK116[d] = (nilaibaru.M1[d] * nilaibaru.M16[d]);
        Mhs1.MK117[d] = (nilaibaru.M1[d] * nilaibaru.M17[d]);
        Mhs1.MK118[d] = (nilaibaru.M1[d] * nilaibaru.M18[d]);
        Mhs1.MK119[d] = (nilaibaru.M1[d] * nilaibaru.M19[d]);
        Mhs1.MK120[d] = (nilaibaru.M1[d] * nilaibaru.M20[d]);
        // Mhs1.MK121[d] = (nilaibaru.M1[d] * nilaibaru.M21[d]);
        // Mhs1.MK122[d] = (nilaibaru.M1[d] * nilaibaru.M22[d]);
        // Mhs1.MK123[d] = (nilaibaru.M1[d] * nilaibaru.M23[d]);
        // Mhs1.MK124[d] = (nilaibaru.M1[d] * nilaibaru.M24[d]);
        // Mhs1.MK125[d] = (nilaibaru.M1[d] * nilaibaru.M25[d]);
        // Mhs1.MK126[d] = (nilaibaru.M1[d] * nilaibaru.M26[d]);
        // Mhs1.MK127[d] = (nilaibaru.M1[d] * nilaibaru.M27[d]);
        // Mhs1.MK128[d] = (nilaibaru.M1[d] * nilaibaru.M28[d]);
        // Mhs1.MK129[d] = (nilaibaru.M1[d] * nilaibaru.M29[d]);
        // Mhs1.MK130[d] = (nilaibaru.M1[d] * nilaibaru.M30[d]);
        // Mhs1.MK131[d] = (nilaibaru.M1[d] * nilaibaru.M31[d]);
        // Mhs1.MK132[d] = (nilaibaru.M1[d] * nilaibaru.M32[d]);
        // Mhs1.MK133[d] = (nilaibaru.M1[d] * nilaibaru.M33[d]);
        // Mhs1.MK134[d] = (nilaibaru.M1[d] * nilaibaru.M34[d]);
        // Mhs1.MK135[d] = (nilaibaru.M1[d] * nilaibaru.M35[d]);
        // Mhs1.MK136[d] = (nilaibaru.M1[d] * nilaibaru.M36[d]);
        // Mhs1.MK137[d] = (nilaibaru.M1[d] * nilaibaru.M37[d]);
        // Mhs1.MK138[d] = (nilaibaru.M1[d] * nilaibaru.M38[d]);
        // Mhs1.MK139[d] = (nilaibaru.M1[d] * nilaibaru.M39[d]);
        // Mhs1.MK140[d] = (nilaibaru.M1[d] * nilaibaru.M40[d]);
        // Mhs1.MK141[d] = (nilaibaru.M1[d] * nilaibaru.M41[d]);
        // Mhs1.MK142[d] = (nilaibaru.M1[d] * nilaibaru.M42[d]);
        // Mhs1.MK143[d] = (nilaibaru.M1[d] * nilaibaru.M43[d]);
        // Mhs1.MK144[d] = (nilaibaru.M1[d] * nilaibaru.M44[d]);
        // Mhs1.MK145[d] = (nilaibaru.M1[d] * nilaibaru.M45[d]);
        // Mhs1.MK146[d] = (nilaibaru.M1[d] * nilaibaru.M46[d]);
        // Mhs1.MK147[d] = (nilaibaru.M1[d] * nilaibaru.M47[d]);
        // Mhs1.MK148[d] = (nilaibaru.M1[d] * nilaibaru.M48[d]);
        // Mhs1.MK149[d] = (nilaibaru.M1[d] * nilaibaru.M49[d]);
        // Mhs1.MK150[d] = (nilaibaru.M1[d] * nilaibaru.M50[d]);
    }

    for (var d = 0; d < nilaibaru.M2.length; d++) {
        Mhs2.MK21[d] = (nilaibaru.M2[d] * nilaibaru.M1[d]);
        Mhs2.MK22[d] = (nilaibaru.M2[d] * nilaibaru.M2[d]);
        Mhs2.MK23[d] = (nilaibaru.M2[d] * nilaibaru.M3[d]);
        Mhs2.MK24[d] = (nilaibaru.M2[d] * nilaibaru.M4[d]);
        Mhs2.MK25[d] = (nilaibaru.M2[d] * nilaibaru.M5[d]);
        Mhs2.MK26[d] = (nilaibaru.M2[d] * nilaibaru.M6[d]);
        Mhs2.MK27[d] = (nilaibaru.M2[d] * nilaibaru.M7[d]);
        Mhs2.MK28[d] = (nilaibaru.M2[d] * nilaibaru.M8[d]);
        Mhs2.MK29[d] = (nilaibaru.M2[d] * nilaibaru.M9[d]);
        Mhs2.MK210[d] = (nilaibaru.M2[d] * nilaibaru.M10[d]);
        Mhs2.MK211[d] = (nilaibaru.M2[d] * nilaibaru.M11[d]);
        Mhs2.MK212[d] = (nilaibaru.M2[d] * nilaibaru.M12[d]);
        Mhs2.MK213[d] = (nilaibaru.M2[d] * nilaibaru.M13[d]);
        Mhs2.MK214[d] = (nilaibaru.M2[d] * nilaibaru.M14[d]);
        Mhs2.MK215[d] = (nilaibaru.M2[d] * nilaibaru.M15[d]);
        Mhs2.MK216[d] = (nilaibaru.M2[d] * nilaibaru.M16[d]);
        Mhs2.MK217[d] = (nilaibaru.M2[d] * nilaibaru.M17[d]);
        Mhs2.MK218[d] = (nilaibaru.M2[d] * nilaibaru.M18[d]);
        Mhs2.MK219[d] = (nilaibaru.M2[d] * nilaibaru.M19[d]);
        Mhs2.MK220[d] = (nilaibaru.M2[d] * nilaibaru.M20[d]);
        // Mhs2.MK221[d] = (nilaibaru.M2[d] * nilaibaru.M21[d]);
        // Mhs2.MK222[d] = (nilaibaru.M2[d] * nilaibaru.M22[d]);
        // Mhs2.MK223[d] = (nilaibaru.M2[d] * nilaibaru.M23[d]);
        // Mhs2.MK224[d] = (nilaibaru.M2[d] * nilaibaru.M24[d]);
        // Mhs2.MK225[d] = (nilaibaru.M2[d] * nilaibaru.M25[d]);
        // Mhs2.MK226[d] = (nilaibaru.M2[d] * nilaibaru.M26[d]);
        // Mhs2.MK227[d] = (nilaibaru.M2[d] * nilaibaru.M27[d]);
        // Mhs2.MK228[d] = (nilaibaru.M2[d] * nilaibaru.M28[d]);
        // Mhs2.MK229[d] = (nilaibaru.M2[d] * nilaibaru.M29[d]);
        // Mhs2.MK230[d] = (nilaibaru.M2[d] * nilaibaru.M30[d]);
        // Mhs2.MK231[d] = (nilaibaru.M2[d] * nilaibaru.M31[d]);
        // Mhs2.MK232[d] = (nilaibaru.M2[d] * nilaibaru.M32[d]);
        // Mhs2.MK233[d] = (nilaibaru.M2[d] * nilaibaru.M33[d]);
        // Mhs2.MK234[d] = (nilaibaru.M2[d] * nilaibaru.M34[d]);
        // Mhs2.MK235[d] = (nilaibaru.M2[d] * nilaibaru.M35[d]);
        // Mhs2.MK236[d] = (nilaibaru.M2[d] * nilaibaru.M36[d]);
        // Mhs2.MK237[d] = (nilaibaru.M2[d] * nilaibaru.M37[d]);
        // Mhs2.MK238[d] = (nilaibaru.M2[d] * nilaibaru.M38[d]);
        // Mhs2.MK239[d] = (nilaibaru.M2[d] * nilaibaru.M39[d]);
        // Mhs2.MK240[d] = (nilaibaru.M2[d] * nilaibaru.M40[d]);
        // Mhs2.MK241[d] = (nilaibaru.M2[d] * nilaibaru.M41[d]);
        // Mhs2.MK242[d] = (nilaibaru.M2[d] * nilaibaru.M42[d]);
        // Mhs2.MK243[d] = (nilaibaru.M2[d] * nilaibaru.M43[d]);
        // Mhs2.MK244[d] = (nilaibaru.M2[d] * nilaibaru.M44[d]);
        // Mhs2.MK245[d] = (nilaibaru.M2[d] * nilaibaru.M45[d]);
        // Mhs2.MK246[d] = (nilaibaru.M2[d] * nilaibaru.M46[d]);
        // Mhs2.MK247[d] = (nilaibaru.M2[d] * nilaibaru.M47[d]);
        // Mhs2.MK248[d] = (nilaibaru.M2[d] * nilaibaru.M48[d]);
        // Mhs2.MK249[d] = (nilaibaru.M2[d] * nilaibaru.M49[d]);
        // Mhs2.MK250[d] = (nilaibaru.M2[d] * nilaibaru.M50[d]);
    }

    for (d = 0; d < nilaibaru.M3.length; d++) {
        Mhs3.MK31[d] = (nilaibaru.M3[d] * nilaibaru.M1[d]);
        Mhs3.MK32[d] = (nilaibaru.M3[d] * nilaibaru.M2[d]);
        Mhs3.MK33[d] = (nilaibaru.M3[d] * nilaibaru.M3[d]);
        Mhs3.MK34[d] = (nilaibaru.M3[d] * nilaibaru.M4[d]);
        Mhs3.MK35[d] = (nilaibaru.M3[d] * nilaibaru.M5[d]);
        Mhs3.MK36[d] = (nilaibaru.M3[d] * nilaibaru.M6[d]);
        Mhs3.MK37[d] = (nilaibaru.M3[d] * nilaibaru.M7[d]);
        Mhs3.MK38[d] = (nilaibaru.M3[d] * nilaibaru.M8[d]);
        Mhs3.MK39[d] = (nilaibaru.M3[d] * nilaibaru.M9[d]);
        Mhs3.MK310[d] = (nilaibaru.M3[d] * nilaibaru.M10[d]);
        Mhs3.MK311[d] = (nilaibaru.M3[d] * nilaibaru.M11[d]);
        Mhs3.MK312[d] = (nilaibaru.M3[d] * nilaibaru.M12[d]);
        Mhs3.MK313[d] = (nilaibaru.M3[d] * nilaibaru.M13[d]);
        Mhs3.MK314[d] = (nilaibaru.M3[d] * nilaibaru.M14[d]);
        Mhs3.MK315[d] = (nilaibaru.M3[d] * nilaibaru.M15[d]);
        Mhs3.MK316[d] = (nilaibaru.M3[d] * nilaibaru.M16[d]);
        Mhs3.MK317[d] = (nilaibaru.M3[d] * nilaibaru.M17[d]);
        Mhs3.MK318[d] = (nilaibaru.M3[d] * nilaibaru.M18[d]);
        Mhs3.MK319[d] = (nilaibaru.M3[d] * nilaibaru.M19[d]);
        Mhs3.MK320[d] = (nilaibaru.M3[d] * nilaibaru.M20[d]);
        // Mhs3.MK321[d] = (nilaibaru.M3[d] * nilaibaru.M21[d]);
        // Mhs3.MK322[d] = (nilaibaru.M3[d] * nilaibaru.M22[d]);
        // Mhs3.MK323[d] = (nilaibaru.M3[d] * nilaibaru.M23[d]);
        // Mhs3.MK324[d] = (nilaibaru.M3[d] * nilaibaru.M24[d]);
        // Mhs3.MK325[d] = (nilaibaru.M3[d] * nilaibaru.M25[d]);
        // Mhs3.MK326[d] = (nilaibaru.M3[d] * nilaibaru.M26[d]);
        // Mhs3.MK327[d] = (nilaibaru.M3[d] * nilaibaru.M27[d]);
        // Mhs3.MK328[d] = (nilaibaru.M3[d] * nilaibaru.M28[d]);
        // Mhs3.MK329[d] = (nilaibaru.M3[d] * nilaibaru.M29[d]);
        // Mhs3.MK330[d] = (nilaibaru.M3[d] * nilaibaru.M30[d]);
        // Mhs3.MK331[d] = (nilaibaru.M3[d] * nilaibaru.M31[d]);
        // Mhs3.MK332[d] = (nilaibaru.M3[d] * nilaibaru.M32[d]);
        // Mhs3.MK333[d] = (nilaibaru.M3[d] * nilaibaru.M33[d]);
        // Mhs3.MK334[d] = (nilaibaru.M3[d] * nilaibaru.M34[d]);
        // Mhs3.MK335[d] = (nilaibaru.M3[d] * nilaibaru.M35[d]);
        // Mhs3.MK336[d] = (nilaibaru.M3[d] * nilaibaru.M36[d]);
        // Mhs3.MK337[d] = (nilaibaru.M3[d] * nilaibaru.M37[d]);
        // Mhs3.MK338[d] = (nilaibaru.M3[d] * nilaibaru.M38[d]);
        // Mhs3.MK339[d] = (nilaibaru.M3[d] * nilaibaru.M39[d]);
        // Mhs3.MK340[d] = (nilaibaru.M3[d] * nilaibaru.M40[d]);
        // Mhs3.MK341[d] = (nilaibaru.M3[d] * nilaibaru.M41[d]);
        // Mhs3.MK342[d] = (nilaibaru.M3[d] * nilaibaru.M42[d]);
        // Mhs3.MK343[d] = (nilaibaru.M3[d] * nilaibaru.M43[d]);
        // Mhs3.MK344[d] = (nilaibaru.M3[d] * nilaibaru.M44[d]);
        // Mhs3.MK345[d] = (nilaibaru.M3[d] * nilaibaru.M45[d]);
        // Mhs3.MK346[d] = (nilaibaru.M3[d] * nilaibaru.M46[d]);
        // Mhs3.MK347[d] = (nilaibaru.M3[d] * nilaibaru.M47[d]);
        // Mhs3.MK348[d] = (nilaibaru.M3[d] * nilaibaru.M48[d]);
        // Mhs3.MK349[d] = (nilaibaru.M3[d] * nilaibaru.M49[d]);
        // Mhs3.MK350[d] = (nilaibaru.M3[d] * nilaibaru.M50[d]);
    }

    for (d = 0; d < nilaibaru.M4.length; d++) {
        Mhs4.MK41[d] = (nilaibaru.M4[d] * nilaibaru.M1[d]);
        Mhs4.MK42[d] = (nilaibaru.M4[d] * nilaibaru.M2[d]);
        Mhs4.MK43[d] = (nilaibaru.M4[d] * nilaibaru.M3[d]);
        Mhs4.MK44[d] = (nilaibaru.M4[d] * nilaibaru.M4[d]);
        Mhs4.MK45[d] = (nilaibaru.M4[d] * nilaibaru.M5[d]);
        Mhs4.MK46[d] = (nilaibaru.M4[d] * nilaibaru.M6[d]);
        Mhs4.MK47[d] = (nilaibaru.M4[d] * nilaibaru.M7[d]);
        Mhs4.MK48[d] = (nilaibaru.M4[d] * nilaibaru.M8[d]);
        Mhs4.MK49[d] = (nilaibaru.M4[d] * nilaibaru.M9[d]);
        Mhs4.MK410[d] = (nilaibaru.M4[d] * nilaibaru.M10[d]);
        Mhs4.MK411[d] = (nilaibaru.M4[d] * nilaibaru.M11[d]);
        Mhs4.MK412[d] = (nilaibaru.M4[d] * nilaibaru.M12[d]);
        Mhs4.MK413[d] = (nilaibaru.M4[d] * nilaibaru.M13[d]);
        Mhs4.MK414[d] = (nilaibaru.M4[d] * nilaibaru.M14[d]);
        Mhs4.MK415[d] = (nilaibaru.M4[d] * nilaibaru.M15[d]);
        Mhs4.MK416[d] = (nilaibaru.M4[d] * nilaibaru.M16[d]);
        Mhs4.MK417[d] = (nilaibaru.M4[d] * nilaibaru.M17[d]);
        Mhs4.MK418[d] = (nilaibaru.M4[d] * nilaibaru.M18[d]);
        Mhs4.MK419[d] = (nilaibaru.M4[d] * nilaibaru.M19[d]);
        Mhs4.MK420[d] = (nilaibaru.M4[d] * nilaibaru.M20[d]);
        // Mhs4.MK421[d] = (nilaibaru.M4[d] * nilaibaru.M21[d]);
        // Mhs4.MK422[d] = (nilaibaru.M4[d] * nilaibaru.M22[d]);
        // Mhs4.MK423[d] = (nilaibaru.M4[d] * nilaibaru.M23[d]);
        // Mhs4.MK424[d] = (nilaibaru.M4[d] * nilaibaru.M24[d]);
        // Mhs4.MK425[d] = (nilaibaru.M4[d] * nilaibaru.M25[d]);
        // Mhs4.MK426[d] = (nilaibaru.M4[d] * nilaibaru.M26[d]);
        // Mhs4.MK427[d] = (nilaibaru.M4[d] * nilaibaru.M27[d]);
        // Mhs4.MK428[d] = (nilaibaru.M4[d] * nilaibaru.M28[d]);
        // Mhs4.MK429[d] = (nilaibaru.M4[d] * nilaibaru.M29[d]);
        // Mhs4.MK430[d] = (nilaibaru.M4[d] * nilaibaru.M30[d]);
        // Mhs4.MK431[d] = (nilaibaru.M4[d] * nilaibaru.M31[d]);
        // Mhs4.MK432[d] = (nilaibaru.M4[d] * nilaibaru.M32[d]);
        // Mhs4.MK433[d] = (nilaibaru.M4[d] * nilaibaru.M33[d]);
        // Mhs4.MK434[d] = (nilaibaru.M4[d] * nilaibaru.M34[d]);
        // Mhs4.MK435[d] = (nilaibaru.M4[d] * nilaibaru.M35[d]);
        // Mhs4.MK436[d] = (nilaibaru.M4[d] * nilaibaru.M36[d]);
        // Mhs4.MK437[d] = (nilaibaru.M4[d] * nilaibaru.M37[d]);
        // Mhs4.MK438[d] = (nilaibaru.M4[d] * nilaibaru.M38[d]);
        // Mhs4.MK439[d] = (nilaibaru.M4[d] * nilaibaru.M39[d]);
        // Mhs4.MK440[d] = (nilaibaru.M4[d] * nilaibaru.M40[d]);
        // Mhs4.MK441[d] = (nilaibaru.M4[d] * nilaibaru.M41[d]);
        // Mhs4.MK442[d] = (nilaibaru.M4[d] * nilaibaru.M42[d]);
        // Mhs4.MK443[d] = (nilaibaru.M4[d] * nilaibaru.M43[d]);
        // Mhs4.MK444[d] = (nilaibaru.M4[d] * nilaibaru.M44[d]);
        // Mhs4.MK445[d] = (nilaibaru.M4[d] * nilaibaru.M45[d]);
        // Mhs4.MK446[d] = (nilaibaru.M4[d] * nilaibaru.M46[d]);
        // Mhs4.MK447[d] = (nilaibaru.M4[d] * nilaibaru.M47[d]);
        // Mhs4.MK448[d] = (nilaibaru.M4[d] * nilaibaru.M48[d]);
        // Mhs4.MK449[d] = (nilaibaru.M4[d] * nilaibaru.M49[d]);
        // Mhs4.MK450[d] = (nilaibaru.M4[d] * nilaibaru.M50[d]);
    }

    for (d = 0; d < nilaibaru.M5.length; d++) {
        Mhs5.MK51[d] = (nilaibaru.M5[d] * nilaibaru.M1[d]);
        Mhs5.MK52[d] = (nilaibaru.M5[d] * nilaibaru.M2[d]);
        Mhs5.MK53[d] = (nilaibaru.M5[d] * nilaibaru.M3[d]);
        Mhs5.MK54[d] = (nilaibaru.M5[d] * nilaibaru.M4[d]);
        Mhs5.MK55[d] = (nilaibaru.M5[d] * nilaibaru.M5[d]);
        Mhs5.MK56[d] = (nilaibaru.M5[d] * nilaibaru.M6[d]);
        Mhs5.MK57[d] = (nilaibaru.M5[d] * nilaibaru.M7[d]);
        Mhs5.MK58[d] = (nilaibaru.M5[d] * nilaibaru.M8[d]);
        Mhs5.MK59[d] = (nilaibaru.M5[d] * nilaibaru.M9[d]);
        Mhs5.MK510[d] = (nilaibaru.M5[d] * nilaibaru.M10[d]);
        Mhs5.MK511[d] = (nilaibaru.M5[d] * nilaibaru.M11[d]);
        Mhs5.MK512[d] = (nilaibaru.M5[d] * nilaibaru.M12[d]);
        Mhs5.MK513[d] = (nilaibaru.M5[d] * nilaibaru.M13[d]);
        Mhs5.MK514[d] = (nilaibaru.M5[d] * nilaibaru.M14[d]);
        Mhs5.MK515[d] = (nilaibaru.M5[d] * nilaibaru.M15[d]);
        Mhs5.MK516[d] = (nilaibaru.M5[d] * nilaibaru.M16[d]);
        Mhs5.MK517[d] = (nilaibaru.M5[d] * nilaibaru.M17[d]);
        Mhs5.MK518[d] = (nilaibaru.M5[d] * nilaibaru.M18[d]);
        Mhs5.MK519[d] = (nilaibaru.M5[d] * nilaibaru.M19[d]);
        Mhs5.MK520[d] = (nilaibaru.M5[d] * nilaibaru.M20[d]);
        // Mhs5.MK521[d] = (nilaibaru.M5[d] * nilaibaru.M21[d]);
        // Mhs5.MK522[d] = (nilaibaru.M5[d] * nilaibaru.M22[d]);
        // Mhs5.MK523[d] = (nilaibaru.M5[d] * nilaibaru.M23[d]);
        // Mhs5.MK524[d] = (nilaibaru.M5[d] * nilaibaru.M24[d]);
        // Mhs5.MK525[d] = (nilaibaru.M5[d] * nilaibaru.M25[d]);
        // Mhs5.MK526[d] = (nilaibaru.M5[d] * nilaibaru.M26[d]);
        // Mhs5.MK527[d] = (nilaibaru.M5[d] * nilaibaru.M27[d]);
        // Mhs5.MK528[d] = (nilaibaru.M5[d] * nilaibaru.M28[d]);
        // Mhs5.MK529[d] = (nilaibaru.M5[d] * nilaibaru.M29[d]);
        // Mhs5.MK530[d] = (nilaibaru.M5[d] * nilaibaru.M30[d]);
        // Mhs5.MK531[d] = (nilaibaru.M5[d] * nilaibaru.M31[d]);
        // Mhs5.MK532[d] = (nilaibaru.M5[d] * nilaibaru.M32[d]);
        // Mhs5.MK533[d] = (nilaibaru.M5[d] * nilaibaru.M33[d]);
        // Mhs5.MK534[d] = (nilaibaru.M5[d] * nilaibaru.M34[d]);
        // Mhs5.MK535[d] = (nilaibaru.M5[d] * nilaibaru.M35[d]);
        // Mhs5.MK536[d] = (nilaibaru.M5[d] * nilaibaru.M36[d]);
        // Mhs5.MK537[d] = (nilaibaru.M5[d] * nilaibaru.M37[d]);
        // Mhs5.MK538[d] = (nilaibaru.M5[d] * nilaibaru.M38[d]);
        // Mhs5.MK539[d] = (nilaibaru.M5[d] * nilaibaru.M39[d]);
        // Mhs5.MK540[d] = (nilaibaru.M5[d] * nilaibaru.M40[d]);
        // Mhs5.MK541[d] = (nilaibaru.M5[d] * nilaibaru.M41[d]);
        // Mhs5.MK542[d] = (nilaibaru.M5[d] * nilaibaru.M42[d]);
        // Mhs5.MK543[d] = (nilaibaru.M5[d] * nilaibaru.M43[d]);
        // Mhs5.MK544[d] = (nilaibaru.M5[d] * nilaibaru.M44[d]);
        // Mhs5.MK545[d] = (nilaibaru.M5[d] * nilaibaru.M45[d]);
        // Mhs5.MK546[d] = (nilaibaru.M5[d] * nilaibaru.M46[d]);
        // Mhs5.MK547[d] = (nilaibaru.M5[d] * nilaibaru.M47[d]);
        // Mhs5.MK548[d] = (nilaibaru.M5[d] * nilaibaru.M48[d]);
        // Mhs5.MK549[d] = (nilaibaru.M5[d] * nilaibaru.M49[d]);
        // Mhs5.MK550[d] = (nilaibaru.M5[d] * nilaibaru.M50[d]);
    }

    for (d = 0; d < nilaibaru.M6.length; d++) {
        Mhs6.MK61[d] = (nilaibaru.M6[d] * nilaibaru.M1[d]);
        Mhs6.MK62[d] = (nilaibaru.M6[d] * nilaibaru.M2[d]);
        Mhs6.MK63[d] = (nilaibaru.M6[d] * nilaibaru.M3[d]);
        Mhs6.MK64[d] = (nilaibaru.M6[d] * nilaibaru.M4[d]);
        Mhs6.MK65[d] = (nilaibaru.M6[d] * nilaibaru.M5[d]);
        Mhs6.MK66[d] = (nilaibaru.M6[d] * nilaibaru.M6[d]);
        Mhs6.MK67[d] = (nilaibaru.M6[d] * nilaibaru.M7[d]);
        Mhs6.MK68[d] = (nilaibaru.M6[d] * nilaibaru.M8[d]);
        Mhs6.MK69[d] = (nilaibaru.M6[d] * nilaibaru.M9[d]);
        Mhs6.MK610[d] = (nilaibaru.M6[d] * nilaibaru.M10[d]);
        Mhs6.MK611[d] = (nilaibaru.M6[d] * nilaibaru.M11[d]);
        Mhs6.MK612[d] = (nilaibaru.M6[d] * nilaibaru.M12[d]);
        Mhs6.MK613[d] = (nilaibaru.M6[d] * nilaibaru.M13[d]);
        Mhs6.MK614[d] = (nilaibaru.M6[d] * nilaibaru.M14[d]);
        Mhs6.MK615[d] = (nilaibaru.M6[d] * nilaibaru.M15[d]);
        Mhs6.MK616[d] = (nilaibaru.M6[d] * nilaibaru.M16[d]);
        Mhs6.MK617[d] = (nilaibaru.M6[d] * nilaibaru.M17[d]);
        Mhs6.MK618[d] = (nilaibaru.M6[d] * nilaibaru.M18[d]);
        Mhs6.MK619[d] = (nilaibaru.M6[d] * nilaibaru.M19[d]);
        Mhs6.MK620[d] = (nilaibaru.M6[d] * nilaibaru.M20[d]);
        // Mhs6.MK621[d] = (nilaibaru.M6[d] * nilaibaru.M21[d]);
        // Mhs6.MK622[d] = (nilaibaru.M6[d] * nilaibaru.M22[d]);
        // Mhs6.MK623[d] = (nilaibaru.M6[d] * nilaibaru.M23[d]);
        // Mhs6.MK624[d] = (nilaibaru.M6[d] * nilaibaru.M24[d]);
        // Mhs6.MK625[d] = (nilaibaru.M6[d] * nilaibaru.M25[d]);
        // Mhs6.MK626[d] = (nilaibaru.M6[d] * nilaibaru.M26[d]);
        // Mhs6.MK627[d] = (nilaibaru.M6[d] * nilaibaru.M27[d]);
        // Mhs6.MK628[d] = (nilaibaru.M6[d] * nilaibaru.M28[d]);
        // Mhs6.MK629[d] = (nilaibaru.M6[d] * nilaibaru.M29[d]);
        // Mhs6.MK630[d] = (nilaibaru.M6[d] * nilaibaru.M30[d]);
        // Mhs6.MK631[d] = (nilaibaru.M6[d] * nilaibaru.M31[d]);
        // Mhs6.MK632[d] = (nilaibaru.M6[d] * nilaibaru.M32[d]);
        // Mhs6.MK633[d] = (nilaibaru.M6[d] * nilaibaru.M33[d]);
        // Mhs6.MK634[d] = (nilaibaru.M6[d] * nilaibaru.M34[d]);
        // Mhs6.MK635[d] = (nilaibaru.M6[d] * nilaibaru.M35[d]);
        // Mhs6.MK636[d] = (nilaibaru.M6[d] * nilaibaru.M36[d]);
        // Mhs6.MK637[d] = (nilaibaru.M6[d] * nilaibaru.M37[d]);
        // Mhs6.MK638[d] = (nilaibaru.M6[d] * nilaibaru.M38[d]);
        // Mhs6.MK639[d] = (nilaibaru.M6[d] * nilaibaru.M39[d]);
        // Mhs6.MK640[d] = (nilaibaru.M6[d] * nilaibaru.M40[d]);
        // Mhs6.MK641[d] = (nilaibaru.M6[d] * nilaibaru.M41[d]);
        // Mhs6.MK642[d] = (nilaibaru.M6[d] * nilaibaru.M42[d]);
        // Mhs6.MK643[d] = (nilaibaru.M6[d] * nilaibaru.M43[d]);
        // Mhs6.MK644[d] = (nilaibaru.M6[d] * nilaibaru.M44[d]);  
        // Mhs6.MK645[d] = (nilaibaru.M6[d] * nilaibaru.M45[d]);
        // Mhs6.MK646[d] = (nilaibaru.M6[d] * nilaibaru.M46[d]);
        // Mhs6.MK647[d] = (nilaibaru.M6[d] * nilaibaru.M47[d]);
        // Mhs6.MK648[d] = (nilaibaru.M6[d] * nilaibaru.M48[d]);
        // Mhs6.MK649[d] = (nilaibaru.M6[d] * nilaibaru.M49[d]);
        // Mhs6.MK650[d] = (nilaibaru.M6[d] * nilaibaru.M50[d]);
    }

    for (d = 0; d < nilaibaru.M7.length; d++) {
        Mhs7.MK71[d] = (nilaibaru.M7[d] * nilaibaru.M1[d]);
        Mhs7.MK72[d] = (nilaibaru.M7[d] * nilaibaru.M2[d]);
        Mhs7.MK73[d] = (nilaibaru.M7[d] * nilaibaru.M3[d]);
        Mhs7.MK74[d] = (nilaibaru.M7[d] * nilaibaru.M4[d]);
        Mhs7.MK75[d] = (nilaibaru.M7[d] * nilaibaru.M5[d]);
        Mhs7.MK76[d] = (nilaibaru.M7[d] * nilaibaru.M6[d]);
        Mhs7.MK77[d] = (nilaibaru.M7[d] * nilaibaru.M7[d]);
        Mhs7.MK78[d] = (nilaibaru.M7[d] * nilaibaru.M8[d]);
        Mhs7.MK79[d] = (nilaibaru.M7[d] * nilaibaru.M9[d]);
        Mhs7.MK710[d] = (nilaibaru.M7[d] * nilaibaru.M10[d]);
        Mhs7.MK711[d] = (nilaibaru.M7[d] * nilaibaru.M11[d]);
        Mhs7.MK712[d] = (nilaibaru.M7[d] * nilaibaru.M12[d]);
        Mhs7.MK713[d] = (nilaibaru.M7[d] * nilaibaru.M13[d]);
        Mhs7.MK714[d] = (nilaibaru.M7[d] * nilaibaru.M14[d]);
        Mhs7.MK715[d] = (nilaibaru.M7[d] * nilaibaru.M15[d]);
        Mhs7.MK716[d] = (nilaibaru.M7[d] * nilaibaru.M16[d]);
        Mhs7.MK717[d] = (nilaibaru.M7[d] * nilaibaru.M17[d]);
        Mhs7.MK718[d] = (nilaibaru.M7[d] * nilaibaru.M18[d]);
        Mhs7.MK719[d] = (nilaibaru.M7[d] * nilaibaru.M19[d]);
        Mhs7.MK720[d] = (nilaibaru.M7[d] * nilaibaru.M20[d]);
        // Mhs7.MK721[d] = (nilaibaru.M7[d] * nilaibaru.M21[d]);
        // Mhs7.MK722[d] = (nilaibaru.M7[d] * nilaibaru.M22[d]);
        // Mhs7.MK723[d] = (nilaibaru.M7[d] * nilaibaru.M23[d]);
        // Mhs7.MK724[d] = (nilaibaru.M7[d] * nilaibaru.M24[d]);
        // Mhs7.MK725[d] = (nilaibaru.M7[d] * nilaibaru.M25[d]);
        // Mhs7.MK726[d] = (nilaibaru.M7[d] * nilaibaru.M26[d]);
        // Mhs7.MK727[d] = (nilaibaru.M7[d] * nilaibaru.M27[d]);
        // Mhs7.MK728[d] = (nilaibaru.M7[d] * nilaibaru.M28[d]);
        // Mhs7.MK729[d] = (nilaibaru.M7[d] * nilaibaru.M29[d]);
        // Mhs7.MK730[d] = (nilaibaru.M7[d] * nilaibaru.M30[d]);
        // Mhs7.MK731[d] = (nilaibaru.M7[d] * nilaibaru.M31[d]);
        // Mhs7.MK732[d] = (nilaibaru.M7[d] * nilaibaru.M32[d]);
        // Mhs7.MK733[d] = (nilaibaru.M7[d] * nilaibaru.M33[d]);
        // Mhs7.MK734[d] = (nilaibaru.M7[d] * nilaibaru.M34[d]);
        // Mhs7.MK735[d] = (nilaibaru.M7[d] * nilaibaru.M35[d]);
        // Mhs7.MK736[d] = (nilaibaru.M7[d] * nilaibaru.M36[d]);
        // Mhs7.MK737[d] = (nilaibaru.M7[d] * nilaibaru.M37[d]);
        // Mhs7.MK738[d] = (nilaibaru.M7[d] * nilaibaru.M38[d]);
        // Mhs7.MK739[d] = (nilaibaru.M7[d] * nilaibaru.M39[d]);
        // Mhs7.MK740[d] = (nilaibaru.M7[d] * nilaibaru.M40[d]);
        // Mhs7.MK741[d] = (nilaibaru.M7[d] * nilaibaru.M41[d]);
        // Mhs7.MK742[d] = (nilaibaru.M7[d] * nilaibaru.M42[d]);
        // Mhs7.MK743[d] = (nilaibaru.M7[d] * nilaibaru.M43[d]);
        // Mhs7.MK744[d] = (nilaibaru.M7[d] * nilaibaru.M44[d]);
        // Mhs7.MK745[d] = (nilaibaru.M7[d] * nilaibaru.M45[d]);
        // Mhs7.MK746[d] = (nilaibaru.M7[d] * nilaibaru.M46[d]);
        // Mhs7.MK747[d] = (nilaibaru.M7[d] * nilaibaru.M47[d]);
        // Mhs7.MK748[d] = (nilaibaru.M7[d] * nilaibaru.M48[d]);
        // Mhs7.MK749[d] = (nilaibaru.M7[d] * nilaibaru.M49[d]);
        // Mhs7.MK750[d] = (nilaibaru.M7[d] * nilaibaru.M50[d]);
    }

    for (d = 0; d < nilaibaru.M8.length; d++) {
        Mhs8.MK81[d] = (nilaibaru.M8[d] * nilaibaru.M1[d]);
        Mhs8.MK82[d] = (nilaibaru.M8[d] * nilaibaru.M2[d]);
        Mhs8.MK83[d] = (nilaibaru.M8[d] * nilaibaru.M3[d]);
        Mhs8.MK84[d] = (nilaibaru.M8[d] * nilaibaru.M4[d]);
        Mhs8.MK85[d] = (nilaibaru.M8[d] * nilaibaru.M5[d]);
        Mhs8.MK86[d] = (nilaibaru.M8[d] * nilaibaru.M6[d]);
        Mhs8.MK87[d] = (nilaibaru.M8[d] * nilaibaru.M7[d]);
        Mhs8.MK88[d] = (nilaibaru.M8[d] * nilaibaru.M8[d]);
        Mhs8.MK89[d] = (nilaibaru.M8[d] * nilaibaru.M9[d]);
        Mhs8.MK810[d] = (nilaibaru.M8[d] * nilaibaru.M10[d]);
        Mhs8.MK811[d] = (nilaibaru.M8[d] * nilaibaru.M11[d]);
        Mhs8.MK812[d] = (nilaibaru.M8[d] * nilaibaru.M12[d]);
        Mhs8.MK813[d] = (nilaibaru.M8[d] * nilaibaru.M13[d]);
        Mhs8.MK814[d] = (nilaibaru.M8[d] * nilaibaru.M14[d]);
        Mhs8.MK815[d] = (nilaibaru.M8[d] * nilaibaru.M15[d]);
        Mhs8.MK816[d] = (nilaibaru.M8[d] * nilaibaru.M16[d]);
        Mhs8.MK817[d] = (nilaibaru.M8[d] * nilaibaru.M17[d]);
        Mhs8.MK818[d] = (nilaibaru.M8[d] * nilaibaru.M18[d]);
        Mhs8.MK819[d] = (nilaibaru.M8[d] * nilaibaru.M19[d]);
        Mhs8.MK820[d] = (nilaibaru.M8[d] * nilaibaru.M20[d]);
        // Mhs8.MK821[d] = (nilaibaru.M8[d] * nilaibaru.M21[d]);
        // Mhs8.MK822[d] = (nilaibaru.M8[d] * nilaibaru.M22[d]);
        // Mhs8.MK823[d] = (nilaibaru.M8[d] * nilaibaru.M23[d]);
        // Mhs8.MK824[d] = (nilaibaru.M8[d] * nilaibaru.M24[d]);
        // Mhs8.MK825[d] = (nilaibaru.M8[d] * nilaibaru.M25[d]);
        // Mhs8.MK826[d] = (nilaibaru.M8[d] * nilaibaru.M26[d]);
        // Mhs8.MK827[d] = (nilaibaru.M8[d] * nilaibaru.M27[d]);
        // Mhs8.MK828[d] = (nilaibaru.M8[d] * nilaibaru.M28[d]);
        // Mhs8.MK829[d] = (nilaibaru.M8[d] * nilaibaru.M29[d]);
        // Mhs8.MK830[d] = (nilaibaru.M8[d] * nilaibaru.M30[d]);
        // Mhs8.MK831[d] = (nilaibaru.M8[d] * nilaibaru.M31[d]);
        // Mhs8.MK832[d] = (nilaibaru.M8[d] * nilaibaru.M32[d]);
        // Mhs8.MK833[d] = (nilaibaru.M8[d] * nilaibaru.M33[d]);
        // Mhs8.MK834[d] = (nilaibaru.M8[d] * nilaibaru.M34[d]);
        // Mhs8.MK835[d] = (nilaibaru.M8[d] * nilaibaru.M35[d]);
        // Mhs8.MK836[d] = (nilaibaru.M8[d] * nilaibaru.M36[d]);
        // Mhs8.MK837[d] = (nilaibaru.M8[d] * nilaibaru.M37[d]);
        // Mhs8.MK838[d] = (nilaibaru.M8[d] * nilaibaru.M38[d]);
        // Mhs8.MK839[d] = (nilaibaru.M8[d] * nilaibaru.M39[d]);
        // Mhs8.MK840[d] = (nilaibaru.M8[d] * nilaibaru.M40[d]);
        // Mhs8.MK841[d] = (nilaibaru.M8[d] * nilaibaru.M41[d]);
        // Mhs8.MK842[d] = (nilaibaru.M8[d] * nilaibaru.M42[d]);
        // Mhs8.MK843[d] = (nilaibaru.M8[d] * nilaibaru.M43[d]);
        // Mhs8.MK844[d] = (nilaibaru.M8[d] * nilaibaru.M44[d]);
        // Mhs8.MK845[d] = (nilaibaru.M8[d] * nilaibaru.M45[d]);
        // Mhs8.MK846[d] = (nilaibaru.M8[d] * nilaibaru.M46[d]);
        // Mhs8.MK847[d] = (nilaibaru.M8[d] * nilaibaru.M47[d]);
        // Mhs8.MK848[d] = (nilaibaru.M8[d] * nilaibaru.M48[d]);
        // Mhs8.MK849[d] = (nilaibaru.M8[d] * nilaibaru.M49[d]);
        // Mhs8.MK850[d] = (nilaibaru.M8[d] * nilaibaru.M50[d]);
    }

    for (d = 0; d < nilaibaru.M9.length; d++) {
        Mhs9.MK91[d] = (nilaibaru.M9[d] * nilaibaru.M1[d]);
        Mhs9.MK92[d] = (nilaibaru.M9[d] * nilaibaru.M2[d]);
        Mhs9.MK93[d] = (nilaibaru.M9[d] * nilaibaru.M3[d]);
        Mhs9.MK94[d] = (nilaibaru.M9[d] * nilaibaru.M4[d]);
        Mhs9.MK95[d] = (nilaibaru.M9[d] * nilaibaru.M5[d]);
        Mhs9.MK96[d] = (nilaibaru.M9[d] * nilaibaru.M6[d]);
        Mhs9.MK97[d] = (nilaibaru.M9[d] * nilaibaru.M7[d]);
        Mhs9.MK98[d] = (nilaibaru.M9[d] * nilaibaru.M8[d]);
        Mhs9.MK99[d] = (nilaibaru.M9[d] * nilaibaru.M9[d]);
        Mhs9.MK910[d] = (nilaibaru.M9[d] * nilaibaru.M10[d]);
        Mhs9.MK911[d] = (nilaibaru.M9[d] * nilaibaru.M11[d]);
        Mhs9.MK912[d] = (nilaibaru.M9[d] * nilaibaru.M12[d]);
        Mhs9.MK913[d] = (nilaibaru.M9[d] * nilaibaru.M13[d]);
        Mhs9.MK914[d] = (nilaibaru.M9[d] * nilaibaru.M14[d]);
        Mhs9.MK915[d] = (nilaibaru.M9[d] * nilaibaru.M15[d]);
        Mhs9.MK916[d] = (nilaibaru.M9[d] * nilaibaru.M16[d]);
        Mhs9.MK917[d] = (nilaibaru.M9[d] * nilaibaru.M17[d]);
        Mhs9.MK918[d] = (nilaibaru.M9[d] * nilaibaru.M18[d]);
        Mhs9.MK919[d] = (nilaibaru.M9[d] * nilaibaru.M19[d]);
        Mhs9.MK920[d] = (nilaibaru.M9[d] * nilaibaru.M20[d]);
        // Mhs9.MK921[d] = (nilaibaru.M9[d] * nilaibaru.M21[d]);
        // Mhs9.MK922[d] = (nilaibaru.M9[d] * nilaibaru.M22[d]);
        // Mhs9.MK923[d] = (nilaibaru.M9[d] * nilaibaru.M23[d]);
        // Mhs9.MK924[d] = (nilaibaru.M9[d] * nilaibaru.M24[d]);
        // Mhs9.MK925[d] = (nilaibaru.M9[d] * nilaibaru.M25[d]);
        // Mhs9.MK926[d] = (nilaibaru.M9[d] * nilaibaru.M26[d]);
        // Mhs9.MK927[d] = (nilaibaru.M9[d] * nilaibaru.M27[d]);
        // Mhs9.MK928[d] = (nilaibaru.M9[d] * nilaibaru.M28[d]);
        // Mhs9.MK929[d] = (nilaibaru.M9[d] * nilaibaru.M29[d]);
        // Mhs9.MK930[d] = (nilaibaru.M9[d] * nilaibaru.M30[d]);
        // Mhs9.MK931[d] = (nilaibaru.M9[d] * nilaibaru.M31[d]);
        // Mhs9.MK932[d] = (nilaibaru.M9[d] * nilaibaru.M32[d]);
        // Mhs9.MK933[d] = (nilaibaru.M9[d] * nilaibaru.M33[d]);
        // Mhs9.MK934[d] = (nilaibaru.M9[d] * nilaibaru.M34[d]);
        // Mhs9.MK935[d] = (nilaibaru.M9[d] * nilaibaru.M35[d]);
        // Mhs9.MK936[d] = (nilaibaru.M9[d] * nilaibaru.M36[d]);
        // Mhs9.MK937[d] = (nilaibaru.M9[d] * nilaibaru.M37[d]);
        // Mhs9.MK938[d] = (nilaibaru.M9[d] * nilaibaru.M38[d]);
        // Mhs9.MK939[d] = (nilaibaru.M9[d] * nilaibaru.M39[d]);
        // Mhs9.MK940[d] = (nilaibaru.M9[d] * nilaibaru.M40[d]);
        // Mhs9.MK941[d] = (nilaibaru.M9[d] * nilaibaru.M41[d]);
        // Mhs9.MK942[d] = (nilaibaru.M9[d] * nilaibaru.M42[d]);
        // Mhs9.MK943[d] = (nilaibaru.M9[d] * nilaibaru.M43[d]);
        // Mhs9.MK944[d] = (nilaibaru.M9[d] * nilaibaru.M44[d]);
        // Mhs9.MK945[d] = (nilaibaru.M9[d] * nilaibaru.M45[d]);
        // Mhs9.MK946[d] = (nilaibaru.M9[d] * nilaibaru.M46[d]);
        // Mhs9.MK947[d] = (nilaibaru.M9[d] * nilaibaru.M47[d]);
        // Mhs9.MK948[d] = (nilaibaru.M9[d] * nilaibaru.M48[d]);
        // Mhs9.MK949[d] = (nilaibaru.M9[d] * nilaibaru.M49[d]);
        // Mhs9.MK950[d] = (nilaibaru.M9[d] * nilaibaru.M50[d]);
    }

    for ( d = 0; d < nilaibaru.M10.length; d++) {
        Mhs10.MK101[d] = (nilaibaru.M10[d] * nilaibaru.M1[d]);
        Mhs10.MK102[d] = (nilaibaru.M10[d] * nilaibaru.M2[d]);
        Mhs10.MK103[d] = (nilaibaru.M10[d] * nilaibaru.M3[d]);
        Mhs10.MK104[d] = (nilaibaru.M10[d] * nilaibaru.M4[d]);
        Mhs10.MK105[d] = (nilaibaru.M10[d] * nilaibaru.M5[d]);
        Mhs10.MK106[d] = (nilaibaru.M10[d] * nilaibaru.M6[d]);
        Mhs10.MK107[d] = (nilaibaru.M10[d] * nilaibaru.M7[d]);
        Mhs10.MK108[d] = (nilaibaru.M10[d] * nilaibaru.M8[d]);
        Mhs10.MK109[d] = (nilaibaru.M10[d] * nilaibaru.M9[d]);
        Mhs10.MK1010[d] = (nilaibaru.M10[d] * nilaibaru.M10[d]);
        Mhs10.MK1011[d] = (nilaibaru.M10[d] * nilaibaru.M11[d]);
        Mhs10.MK1012[d] = (nilaibaru.M10[d] * nilaibaru.M12[d]);
        Mhs10.MK1013[d] = (nilaibaru.M10[d] * nilaibaru.M13[d]);
        Mhs10.MK1014[d] = (nilaibaru.M10[d] * nilaibaru.M14[d]);
        Mhs10.MK1015[d] = (nilaibaru.M10[d] * nilaibaru.M15[d]);
        Mhs10.MK1016[d] = (nilaibaru.M10[d] * nilaibaru.M16[d]);
        Mhs10.MK1017[d] = (nilaibaru.M10[d] * nilaibaru.M17[d]);
        Mhs10.MK1018[d] = (nilaibaru.M10[d] * nilaibaru.M18[d]);
        Mhs10.MK1019[d] = (nilaibaru.M10[d] * nilaibaru.M19[d]);
        Mhs10.MK1020[d] = (nilaibaru.M10[d] * nilaibaru.M20[d]);
    }

    for ( d = 0; d < nilaibaru.M11.length; d++) {
        Mhs11.MK111[d] = (nilaibaru.M11[d] * nilaibaru.M1[d]);
        Mhs11.MK112[d] = (nilaibaru.M11[d] * nilaibaru.M2[d]);
        Mhs11.MK113[d] = (nilaibaru.M11[d] * nilaibaru.M3[d]);
        Mhs11.MK114[d] = (nilaibaru.M11[d] * nilaibaru.M4[d]);
        Mhs11.MK115[d] = (nilaibaru.M11[d] * nilaibaru.M5[d]);
        Mhs11.MK116[d] = (nilaibaru.M11[d] * nilaibaru.M6[d]);
        Mhs11.MK117[d] = (nilaibaru.M11[d] * nilaibaru.M7[d]);
        Mhs11.MK118[d] = (nilaibaru.M11[d] * nilaibaru.M8[d]);
        Mhs11.MK119[d] = (nilaibaru.M11[d] * nilaibaru.M9[d]);
        Mhs11.MK1110[d] = (nilaibaru.M11[d] * nilaibaru.M10[d]);
        Mhs11.MK1111[d] = (nilaibaru.M11[d] * nilaibaru.M11[d]);
        Mhs11.MK1112[d] = (nilaibaru.M11[d] * nilaibaru.M12[d]);
        Mhs11.MK1113[d] = (nilaibaru.M11[d] * nilaibaru.M13[d]);
        Mhs11.MK1114[d] = (nilaibaru.M11[d] * nilaibaru.M14[d]);
        Mhs11.MK1115[d] = (nilaibaru.M11[d] * nilaibaru.M15[d]);
        Mhs11.MK1116[d] = (nilaibaru.M11[d] * nilaibaru.M16[d]);
        Mhs11.MK1117[d] = (nilaibaru.M11[d] * nilaibaru.M17[d]);
        Mhs11.MK1118[d] = (nilaibaru.M11[d] * nilaibaru.M18[d]);
        Mhs11.MK1119[d] = (nilaibaru.M11[d] * nilaibaru.M19[d]);
        Mhs11.MK1120[d] = (nilaibaru.M11[d] * nilaibaru.M20[d]);
    }

    for (d = 0; d < nilaibaru.M12.length; d++) {
        Mhs12.MK121[d] = (nilaibaru.M12[d] * nilaibaru.M1[d]);
        Mhs12.MK122[d] = (nilaibaru.M12[d] * nilaibaru.M2[d]);
        Mhs12.MK123[d] = (nilaibaru.M12[d] * nilaibaru.M3[d]);
        Mhs12.MK124[d] = (nilaibaru.M12[d] * nilaibaru.M4[d]);
        Mhs12.MK125[d] = (nilaibaru.M12[d] * nilaibaru.M5[d]);
        Mhs12.MK126[d] = (nilaibaru.M12[d] * nilaibaru.M6[d]);
        Mhs12.MK127[d] = (nilaibaru.M12[d] * nilaibaru.M7[d]);
        Mhs12.MK128[d] = (nilaibaru.M12[d] * nilaibaru.M8[d]);
        Mhs12.MK129[d] = (nilaibaru.M12[d] * nilaibaru.M9[d]);
        Mhs12.MK1210[d] = (nilaibaru.M12[d] * nilaibaru.M10[d]);
        Mhs12.MK1211[d] = (nilaibaru.M12[d] * nilaibaru.M11[d]);
        Mhs12.MK1212[d] = (nilaibaru.M12[d] * nilaibaru.M12[d]);
        Mhs12.MK1213[d] = (nilaibaru.M12[d] * nilaibaru.M13[d]);
        Mhs12.MK1214[d] = (nilaibaru.M12[d] * nilaibaru.M14[d]);
        Mhs12.MK1215[d] = (nilaibaru.M12[d] * nilaibaru.M15[d]);
        Mhs12.MK1216[d] = (nilaibaru.M12[d] * nilaibaru.M16[d]);
        Mhs12.MK1217[d] = (nilaibaru.M12[d] * nilaibaru.M17[d]);
        Mhs12.MK1218[d] = (nilaibaru.M12[d] * nilaibaru.M18[d]);
        Mhs12.MK1219[d] = (nilaibaru.M12[d] * nilaibaru.M19[d]);
        Mhs12.MK1220[d] = (nilaibaru.M12[d] * nilaibaru.M20[d]);
    }

    for ( d = 0; d < nilaibaru.M13.length; d++) {
        Mhs13.MK131[d] = (nilaibaru.M13[d] * nilaibaru.M1[d]);
        Mhs13.MK132[d] = (nilaibaru.M13[d] * nilaibaru.M2[d]);
        Mhs13.MK133[d] = (nilaibaru.M13[d] * nilaibaru.M3[d]);
        Mhs13.MK134[d] = (nilaibaru.M13[d] * nilaibaru.M4[d]);
        Mhs13.MK135[d] = (nilaibaru.M13[d] * nilaibaru.M5[d]);
        Mhs13.MK136[d] = (nilaibaru.M13[d] * nilaibaru.M6[d]);
        Mhs13.MK137[d] = (nilaibaru.M13[d] * nilaibaru.M7[d]);
        Mhs13.MK138[d] = (nilaibaru.M13[d] * nilaibaru.M8[d]);
        Mhs13.MK139[d] = (nilaibaru.M13[d] * nilaibaru.M9[d]);
        Mhs13.MK1310[d] = (nilaibaru.M13[d] * nilaibaru.M10[d]);
        Mhs13.MK1311[d] = (nilaibaru.M13[d] * nilaibaru.M11[d]);
        Mhs13.MK1312[d] = (nilaibaru.M13[d] * nilaibaru.M12[d]);
        Mhs13.MK1313[d] = (nilaibaru.M13[d] * nilaibaru.M13[d]);
        Mhs13.MK1314[d] = (nilaibaru.M13[d] * nilaibaru.M14[d]);
        Mhs13.MK1315[d] = (nilaibaru.M13[d] * nilaibaru.M15[d]);
        Mhs13.MK1316[d] = (nilaibaru.M13[d] * nilaibaru.M16[d]);
        Mhs13.MK1317[d] = (nilaibaru.M13[d] * nilaibaru.M17[d]);
        Mhs13.MK1318[d] = (nilaibaru.M13[d] * nilaibaru.M18[d]);
        Mhs13.MK1319[d] = (nilaibaru.M13[d] * nilaibaru.M19[d]);
        Mhs13.MK1320[d] = (nilaibaru.M13[d] * nilaibaru.M20[d]);
    }

    for ( d = 0; d < nilaibaru.M14.length; d++) {
        Mhs14.MK141[d] = (nilaibaru.M14[d] * nilaibaru.M1[d]);
        Mhs14.MK142[d] = (nilaibaru.M14[d] * nilaibaru.M2[d]);
        Mhs14.MK143[d] = (nilaibaru.M14[d] * nilaibaru.M3[d]);
        Mhs14.MK144[d] = (nilaibaru.M14[d] * nilaibaru.M4[d]);
        Mhs14.MK145[d] = (nilaibaru.M14[d] * nilaibaru.M5[d]);
        Mhs14.MK146[d] = (nilaibaru.M14[d] * nilaibaru.M6[d]);
        Mhs14.MK147[d] = (nilaibaru.M14[d] * nilaibaru.M7[d]);
        Mhs14.MK148[d] = (nilaibaru.M14[d] * nilaibaru.M8[d]);
        Mhs14.MK149[d] = (nilaibaru.M14[d] * nilaibaru.M9[d]);
        Mhs14.MK1410[d] = (nilaibaru.M14[d] * nilaibaru.M10[d]);
        Mhs14.MK1411[d] = (nilaibaru.M14[d] * nilaibaru.M11[d]);
        Mhs14.MK1412[d] = (nilaibaru.M14[d] * nilaibaru.M12[d]);
        Mhs14.MK1413[d] = (nilaibaru.M14[d] * nilaibaru.M13[d]);
        Mhs14.MK1414[d] = (nilaibaru.M14[d] * nilaibaru.M14[d]);
        Mhs14.MK1415[d] = (nilaibaru.M14[d] * nilaibaru.M15[d]);
        Mhs14.MK1416[d] = (nilaibaru.M14[d] * nilaibaru.M16[d]);
        Mhs14.MK1417[d] = (nilaibaru.M14[d] * nilaibaru.M17[d]);
        Mhs14.MK1418[d] = (nilaibaru.M14[d] * nilaibaru.M18[d]);
        Mhs14.MK1419[d] = (nilaibaru.M14[d] * nilaibaru.M19[d]);
        Mhs14.MK1420[d] = (nilaibaru.M14[d] * nilaibaru.M20[d]);
    }

    for ( d = 0; d < nilaibaru.M15.length; d++) {
        Mhs15.MK151[d] = (nilaibaru.M15[d] * nilaibaru.M1[d]);
        Mhs15.MK152[d] = (nilaibaru.M15[d] * nilaibaru.M2[d]);
        Mhs15.MK153[d] = (nilaibaru.M15[d] * nilaibaru.M3[d]);
        Mhs15.MK154[d] = (nilaibaru.M15[d] * nilaibaru.M4[d]);
        Mhs15.MK155[d] = (nilaibaru.M15[d] * nilaibaru.M5[d]);
        Mhs15.MK156[d] = (nilaibaru.M15[d] * nilaibaru.M6[d]);
        Mhs15.MK157[d] = (nilaibaru.M15[d] * nilaibaru.M7[d]);
        Mhs15.MK158[d] = (nilaibaru.M15[d] * nilaibaru.M8[d]);
        Mhs15.MK159[d] = (nilaibaru.M15[d] * nilaibaru.M9[d]);
        Mhs15.MK1510[d] = (nilaibaru.M15[d] * nilaibaru.M10[d]);
        Mhs15.MK1511[d] = (nilaibaru.M15[d] * nilaibaru.M11[d]);
        Mhs15.MK1512[d] = (nilaibaru.M15[d] * nilaibaru.M12[d]);
        Mhs15.MK1513[d] = (nilaibaru.M15[d] * nilaibaru.M13[d]);
        Mhs15.MK1514[d] = (nilaibaru.M15[d] * nilaibaru.M14[d]);
        Mhs15.MK1515[d] = (nilaibaru.M15[d] * nilaibaru.M15[d]);
        Mhs15.MK1516[d] = (nilaibaru.M15[d] * nilaibaru.M16[d]);
        Mhs15.MK1517[d] = (nilaibaru.M15[d] * nilaibaru.M17[d]);
        Mhs15.MK1518[d] = (nilaibaru.M15[d] * nilaibaru.M18[d]);
        Mhs15.MK1519[d] = (nilaibaru.M15[d] * nilaibaru.M19[d]);
        Mhs15.MK1520[d] = (nilaibaru.M15[d] * nilaibaru.M20[d]);
    }

    for ( d = 0; d < nilaibaru.M16.length; d++) {
        Mhs16.MK161[d] = (nilaibaru.M16[d] * nilaibaru.M1[d]);
        Mhs16.MK162[d] = (nilaibaru.M16[d] * nilaibaru.M2[d]);
        Mhs16.MK163[d] = (nilaibaru.M16[d] * nilaibaru.M3[d]);
        Mhs16.MK164[d] = (nilaibaru.M16[d] * nilaibaru.M4[d]);
        Mhs16.MK165[d] = (nilaibaru.M16[d] * nilaibaru.M5[d]);
        Mhs16.MK166[d] = (nilaibaru.M16[d] * nilaibaru.M6[d]);
        Mhs16.MK167[d] = (nilaibaru.M16[d] * nilaibaru.M7[d]);
        Mhs16.MK168[d] = (nilaibaru.M16[d] * nilaibaru.M8[d]);
        Mhs16.MK169[d] = (nilaibaru.M16[d] * nilaibaru.M9[d]);
        Mhs16.MK1610[d] = (nilaibaru.M16[d] * nilaibaru.M10[d]);
        Mhs16.MK1611[d] = (nilaibaru.M16[d] * nilaibaru.M11[d]);
        Mhs16.MK1612[d] = (nilaibaru.M16[d] * nilaibaru.M12[d]);
        Mhs16.MK1613[d] = (nilaibaru.M16[d] * nilaibaru.M13[d]);
        Mhs16.MK1614[d] = (nilaibaru.M16[d] * nilaibaru.M14[d]);
        Mhs16.MK1615[d] = (nilaibaru.M16[d] * nilaibaru.M15[d]);
        Mhs16.MK1616[d] = (nilaibaru.M16[d] * nilaibaru.M16[d]);
        Mhs16.MK1617[d] = (nilaibaru.M16[d] * nilaibaru.M17[d]);
        Mhs16.MK1618[d] = (nilaibaru.M16[d] * nilaibaru.M18[d]);
        Mhs16.MK1619[d] = (nilaibaru.M16[d] * nilaibaru.M19[d]);
        Mhs16.MK1620[d] = (nilaibaru.M16[d] * nilaibaru.M20[d]);
    }

    for ( d = 0; d < nilaibaru.M17.length; d++) {
        Mhs17.MK171[d] = (nilaibaru.M17[d] * nilaibaru.M1[d]);
        Mhs17.MK172[d] = (nilaibaru.M17[d] * nilaibaru.M2[d]);
        Mhs17.MK173[d] = (nilaibaru.M17[d] * nilaibaru.M3[d]);
        Mhs17.MK174[d] = (nilaibaru.M17[d] * nilaibaru.M4[d]);
        Mhs17.MK175[d] = (nilaibaru.M17[d] * nilaibaru.M5[d]);
        Mhs17.MK176[d] = (nilaibaru.M17[d] * nilaibaru.M6[d]);
        Mhs17.MK177[d] = (nilaibaru.M17[d] * nilaibaru.M7[d]);
        Mhs17.MK178[d] = (nilaibaru.M17[d] * nilaibaru.M8[d]);
        Mhs17.MK179[d] = (nilaibaru.M17[d] * nilaibaru.M9[d]);
        Mhs17.MK1710[d] = (nilaibaru.M17[d] * nilaibaru.M10[d]);
        Mhs17.MK1711[d] = (nilaibaru.M17[d] * nilaibaru.M11[d]);
        Mhs17.MK1712[d] = (nilaibaru.M17[d] * nilaibaru.M12[d]);
        Mhs17.MK1713[d] = (nilaibaru.M17[d] * nilaibaru.M13[d]);
        Mhs17.MK1714[d] = (nilaibaru.M17[d] * nilaibaru.M14[d]);
        Mhs17.MK1715[d] = (nilaibaru.M17[d] * nilaibaru.M15[d]);
        Mhs17.MK1716[d] = (nilaibaru.M17[d] * nilaibaru.M16[d]);
        Mhs17.MK1717[d] = (nilaibaru.M17[d] * nilaibaru.M17[d]);
        Mhs17.MK1718[d] = (nilaibaru.M17[d] * nilaibaru.M18[d]);
        Mhs17.MK1719[d] = (nilaibaru.M17[d] * nilaibaru.M19[d]);
        Mhs17.MK1720[d] = (nilaibaru.M17[d] * nilaibaru.M20[d]);
    }

    for ( d = 0; d < nilaibaru.M18.length; d++) {
        Mhs18.MK181[d] = (nilaibaru.M18[d] * nilaibaru.M1[d]);
        Mhs18.MK182[d] = (nilaibaru.M18[d] * nilaibaru.M2[d]);
        Mhs18.MK183[d] = (nilaibaru.M18[d] * nilaibaru.M3[d]);
        Mhs18.MK184[d] = (nilaibaru.M18[d] * nilaibaru.M4[d]);
        Mhs18.MK185[d] = (nilaibaru.M18[d] * nilaibaru.M5[d]);
        Mhs18.MK186[d] = (nilaibaru.M18[d] * nilaibaru.M6[d]);
        Mhs18.MK187[d] = (nilaibaru.M18[d] * nilaibaru.M7[d]);
        Mhs18.MK188[d] = (nilaibaru.M18[d] * nilaibaru.M8[d]);
        Mhs18.MK189[d] = (nilaibaru.M18[d] * nilaibaru.M9[d]);
        Mhs18.MK1810[d] = (nilaibaru.M18[d] * nilaibaru.M10[d]);
        Mhs18.MK1811[d] = (nilaibaru.M18[d] * nilaibaru.M11[d]);
        Mhs18.MK1812[d] = (nilaibaru.M18[d] * nilaibaru.M12[d]);
        Mhs18.MK1813[d] = (nilaibaru.M18[d] * nilaibaru.M13[d]);
        Mhs18.MK1814[d] = (nilaibaru.M18[d] * nilaibaru.M14[d]);
        Mhs18.MK1815[d] = (nilaibaru.M18[d] * nilaibaru.M15[d]);
        Mhs18.MK1816[d] = (nilaibaru.M18[d] * nilaibaru.M16[d]);
        Mhs18.MK1817[d] = (nilaibaru.M18[d] * nilaibaru.M17[d]);
        Mhs18.MK1818[d] = (nilaibaru.M18[d] * nilaibaru.M18[d]);
        Mhs18.MK1819[d] = (nilaibaru.M18[d] * nilaibaru.M19[d]);
        Mhs18.MK1820[d] = (nilaibaru.M18[d] * nilaibaru.M20[d]);
    }

    for ( d = 0; d < nilaibaru.M19.length; d++) {
        Mhs19.MK191[d] = (nilaibaru.M19[d] * nilaibaru.M1[d]);
        Mhs19.MK192[d] = (nilaibaru.M19[d] * nilaibaru.M2[d]);
        Mhs19.MK193[d] = (nilaibaru.M19[d] * nilaibaru.M3[d]);
        Mhs19.MK194[d] = (nilaibaru.M19[d] * nilaibaru.M4[d]);
        Mhs19.MK195[d] = (nilaibaru.M19[d] * nilaibaru.M5[d]);
        Mhs19.MK196[d] = (nilaibaru.M19[d] * nilaibaru.M6[d]);
        Mhs19.MK197[d] = (nilaibaru.M19[d] * nilaibaru.M7[d]);
        Mhs19.MK198[d] = (nilaibaru.M19[d] * nilaibaru.M8[d]);
        Mhs19.MK199[d] = (nilaibaru.M19[d] * nilaibaru.M9[d]);
        Mhs19.MK1910[d] = (nilaibaru.M19[d] * nilaibaru.M10[d]);
        Mhs19.MK1911[d] = (nilaibaru.M19[d] * nilaibaru.M11[d]);
        Mhs19.MK1912[d] = (nilaibaru.M19[d] * nilaibaru.M12[d]);
        Mhs19.MK1913[d] = (nilaibaru.M19[d] * nilaibaru.M13[d]);
        Mhs19.MK1914[d] = (nilaibaru.M19[d] * nilaibaru.M14[d]);
        Mhs19.MK1915[d] = (nilaibaru.M19[d] * nilaibaru.M15[d]);
        Mhs19.MK1916[d] = (nilaibaru.M19[d] * nilaibaru.M16[d]);
        Mhs19.MK1917[d] = (nilaibaru.M19[d] * nilaibaru.M17[d]);
        Mhs19.MK1918[d] = (nilaibaru.M19[d] * nilaibaru.M18[d]);
        Mhs19.MK1919[d] = (nilaibaru.M19[d] * nilaibaru.M19[d]);
        Mhs19.MK1920[d] = (nilaibaru.M19[d] * nilaibaru.M20[d]);
    }

    for ( d = 0; d < nilaibaru.M20.length; d++) {
        Mhs20.MK201[d] = (nilaibaru.M20[d] * nilaibaru.M1[d]);
        Mhs20.MK202[d] = (nilaibaru.M20[d] * nilaibaru.M2[d]);
        Mhs20.MK203[d] = (nilaibaru.M20[d] * nilaibaru.M3[d]);
        Mhs20.MK204[d] = (nilaibaru.M20[d] * nilaibaru.M4[d]);
        Mhs20.MK205[d] = (nilaibaru.M20[d] * nilaibaru.M5[d]);
        Mhs20.MK206[d] = (nilaibaru.M20[d] * nilaibaru.M6[d]);
        Mhs20.MK207[d] = (nilaibaru.M20[d] * nilaibaru.M7[d]);
        Mhs20.MK208[d] = (nilaibaru.M20[d] * nilaibaru.M8[d]);
        Mhs20.MK209[d] = (nilaibaru.M20[d] * nilaibaru.M9[d]);
        Mhs20.MK2010[d] = (nilaibaru.M20[d] * nilaibaru.M10[d]);
        Mhs20.MK2011[d] = (nilaibaru.M20[d] * nilaibaru.M11[d]);
        Mhs20.MK2012[d] = (nilaibaru.M20[d] * nilaibaru.M12[d]);
        Mhs20.MK2013[d] = (nilaibaru.M20[d] * nilaibaru.M13[d]);
        Mhs20.MK2014[d] = (nilaibaru.M20[d] * nilaibaru.M14[d]);
        Mhs20.MK2015[d] = (nilaibaru.M20[d] * nilaibaru.M15[d]);
        Mhs20.MK2016[d] = (nilaibaru.M20[d] * nilaibaru.M16[d]);
        Mhs20.MK2017[d] = (nilaibaru.M20[d] * nilaibaru.M17[d]);
        Mhs20.MK2018[d] = (nilaibaru.M20[d] * nilaibaru.M18[d]);
        Mhs20.MK2019[d] = (nilaibaru.M20[d] * nilaibaru.M19[d]);
        Mhs20.MK2020[d] = (nilaibaru.M20[d] * nilaibaru.M20[d]);
    }
    
        // TK = Total Kali
    var TKM11 = 0; TKM12 = 0; TKM13 = 0; TKM14 = 0; TKM15 = 0; TKM16 = 0; TKM17 = 0; TKM18 = 0; TKM19 = 0; TKM110 = 0; TKM111 = 0; TKM112 = 0; TKM113 = 0; TKM114 = 0; TKM115 = 0; TKM116 = 0; TKM117 = 0; TKM118 = 0; TKM119 = 0; TKM120 = 0; 
    var TKM121 = 0; TKM122 = 0; TKM123 = 0; TKM124 = 0; TKM125 = 0; TKM126 = 0; TKM127 = 0; TKM128 = 0; TKM129 = 0; TKM130 = 0; TKM131 = 0; TKM132 = 0; TKM133 = 0; TKM134 = 0; TKM135 = 0; TKM136 = 0; TKM137 = 0; TKM138 = 0; TKM139 = 0; TKM140 = 0; 
    var TKM141 = 0; TKM142 = 0; TKM143 = 0; TKM144 = 0; TKM145 = 0; TKM146 = 0; TKM147 = 0; TKM148 = 0; TKM149 = 0; TKM150 = 0; 
  
    for (d = 0; d < nilaibaru.M1.length; d++) {
        TKM11 = TKM11 + Mhs1.MK11[d]; TKM12 = TKM12 + Mhs1.MK12[d]; TKM13 = TKM13 + Mhs1.MK13[d]; TKM14 = TKM14 + Mhs1.MK14[d]; TKM15 = TKM15 + Mhs1.MK15[d]; TKM16 = TKM16 + Mhs1.MK16[d]; TKM17 = TKM17 + Mhs1.MK17[d]; TKM18 = TKM18 + Mhs1.MK18[d]; TKM19 = TKM19 + Mhs1.MK19[d]; TKM110 = TKM110 + Mhs1.MK110[d];
        TKM111 = TKM111 + Mhs1.MK111[d]; TKM112 = TKM112 + Mhs1.MK112[d]; TKM113 = TKM113 + Mhs1.MK113[d]; TKM114 = TKM114 + Mhs1.MK114[d]; TKM115 = TKM115 + Mhs1.MK115[d]; TKM116 = TKM116 + Mhs1.MK116[d]; TKM117 = TKM117 + Mhs1.MK117[d]; TKM118 = TKM118 + Mhs1.MK118[d]; TKM119 = TKM119 + Mhs1.MK119[d]; TKM120 = TKM120 + Mhs1.MK120[d];
    }

    var TKM21 = 0; TKM22 = 0; TKM23 = 0; TKM24 = 0; TKM25 = 0; TKM26 = 0; TKM27 = 0; TKM28 = 0; TKM29 = 0; TKM210 = 0; TKM211 = 0; TKM212 = 0; TKM213 = 0; TKM214 = 0; TKM215 = 0; TKM216 = 0; TKM217 = 0; TKM218 = 0; TKM219 = 0; TKM220 = 0;
    var TKM221 = 0; TKM222 = 0; TKM223 = 0; TKM224 = 0; TKM225 = 0; TKM226 = 0; TKM227 = 0; TKM228 = 0; TKM229 = 0; TKM230 = 0; TKM231 = 0; TKM232 = 0; TKM233 = 0; TKM234 = 0; TKM235 = 0; TKM236 = 0; TKM237 = 0; TKM238 = 0; TKM239 = 0; TKM240 = 0;
    var TKM241 = 0; TKM242 = 0; TKM243 = 0; TKM244 = 0; TKM245 = 0; TKM246 = 0; TKM247 = 0; TKM248 = 0; TKM249 = 0; TKM250 = 0;
    
    for (d = 0; d < nilaibaru.M2.length; d++) {
        TKM21 = TKM21 + Mhs2.MK21[d]; TKM22 = TKM22 + Mhs2.MK22[d]; TKM23 = TKM23 + Mhs2.MK23[d]; TKM24 = TKM24 + Mhs2.MK24[d]; TKM25 = TKM25 + Mhs2.MK25[d]; TKM26 = TKM26 + Mhs2.MK26[d]; TKM27 = TKM27 + Mhs2.MK27[d]; TKM28 = TKM28 + Mhs2.MK28[d]; TKM29 = TKM29 + Mhs2.MK29[d]; TKM210 = TKM210 + Mhs2.MK210[d];
        TKM211 = TKM211 + Mhs2.MK211[d]; TKM212 = TKM212 + Mhs2.MK212[d]; TKM213 = TKM213 + Mhs2.MK213[d]; TKM214 = TKM214 + Mhs2.MK214[d]; TKM215 = TKM215 + Mhs2.MK215[d]; TKM216 = TKM216 + Mhs2.MK216[d]; TKM217 = TKM217 + Mhs2.MK217[d]; TKM218 = TKM218 + Mhs2.MK218[d]; TKM219 = TKM219 + Mhs2.MK219[d]; TKM220 = TKM220 + Mhs2.MK220[d];
    }

    var TKM31 = 0; TKM32 = 0; TKM33 = 0; TKM34 = 0; TKM35 = 0; TKM36 = 0; TKM37 = 0; TKM38 = 0; TKM39 = 0; TKM310 = 0; TKM311 = 0; TKM312 = 0; TKM313 = 0; TKM314 = 0; TKM315 = 0; TKM316 = 0; TKM317 = 0; TKM318 = 0; TKM319 = 0; TKM320 = 0;
    var TKM321 = 0; TKM322 = 0; TKM323 = 0; TKM324 = 0; TKM325 = 0; TKM326 = 0; TKM327 = 0; TKM328 = 0; TKM329 = 0; TKM330 = 0; TKM331 = 0; TKM332 = 0; TKM333 = 0; TKM334 = 0; TKM335 = 0; TKM336 = 0; TKM337 = 0; TKM338 = 0; TKM339 = 0; TKM340 = 0;
    var TKM341 = 0; TKM342 = 0; TKM343 = 0; TKM344 = 0; TKM345 = 0; TKM346 = 0; TKM347 = 0; TKM348 = 0; TKM349 = 0; TKM350 = 0;
   
    for (d = 0; d < nilaibaru.M3.length; d++) {
        TKM31 = TKM31 + Mhs3.MK31[d]; TKM32 = TKM32 + Mhs3.MK32[d]; TKM33 = TKM33 + Mhs3.MK33[d]; TKM34 = TKM34 + Mhs3.MK34[d]; TKM35 = TKM35 + Mhs3.MK35[d]; TKM36 = TKM36 + Mhs3.MK36[d]; TKM37 = TKM37 + Mhs3.MK37[d]; TKM38 = TKM38 + Mhs3.MK38[d]; TKM39 = TKM39 + Mhs3.MK39[d]; TKM310 = TKM310 + Mhs3.MK310[d];
        TKM311 = TKM311 + Mhs3.MK311[d]; TKM312 = TKM312 + Mhs3.MK312[d]; TKM313 = TKM313 + Mhs3.MK313[d]; TKM314 = TKM314 + Mhs3.MK314[d]; TKM315 = TKM315 + Mhs3.MK315[d]; TKM316 = TKM316 + Mhs3.MK316[d]; TKM317 = TKM317 + Mhs3.MK317[d]; TKM318 = TKM318 + Mhs3.MK318[d]; TKM319 = TKM319 + Mhs3.MK319[d]; TKM320 = TKM320 + Mhs3.MK320[d];
    }

    var TKM41 = 0; TKM42 = 0; TKM43 = 0; TKM44 = 0; TKM45 = 0; TKM46 = 0; TKM47 = 0; TKM48 = 0; TKM49 = 0; TKM410 = 0; TKM411 = 0; TKM412 = 0; TKM413 = 0; TKM414 = 0; TKM415 = 0; TKM416 = 0; TKM417 = 0; TKM418 = 0; TKM419 = 0; TKM420 = 0;
    var TKM421 = 0; TKM422 = 0; TKM423 = 0; TKM424 = 0; TKM425 = 0; TKM426 = 0; TKM427 = 0; TKM428 = 0; TKM429 = 0; TKM430 = 0; TKM431 = 0; TKM432 = 0; TKM433 = 0; TKM434 = 0; TKM435 = 0; TKM436 = 0; TKM437 = 0; TKM438 = 0; TKM439 = 0; TKM440 = 0;
    var TKM441 = 0; TKM442 = 0; TKM443 = 0; TKM444 = 0; TKM445 = 0; TKM446 = 0; TKM447 = 0; TKM448 = 0; TKM449 = 0; TKM450 = 0; TKM451 = 0; TKM452 = 0; TKM453 = 0; TKM454 = 0; TKM455 = 0; TKM456 = 0; TKM457 = 0; TKM458 = 0; TKM459 = 0; TKM460 = 0;
  
    for (d = 0; d < nilaibaru.M4.length; d++) {
        TKM41 = TKM41 + Mhs4.MK41[d]; TKM42 = TKM42 + Mhs4.MK42[d]; TKM43 = TKM43 + Mhs4.MK43[d]; TKM44 = TKM44 + Mhs4.MK44[d]; TKM45 = TKM45 + Mhs4.MK45[d]; TKM46 = TKM46 + Mhs4.MK46[d]; TKM47 = TKM47 + Mhs4.MK47[d]; TKM48 = TKM48 + Mhs4.MK48[d]; TKM49 = TKM49 + Mhs4.MK49[d]; TKM410 = TKM410 + Mhs4.MK410[d];
        TKM411 = TKM411 + Mhs4.MK411[d]; TKM412 = TKM412 + Mhs4.MK412[d]; TKM413 = TKM413 + Mhs4.MK413[d]; TKM414 = TKM414 + Mhs4.MK414[d]; TKM415 = TKM415 + Mhs4.MK415[d]; TKM416 = TKM416 + Mhs4.MK416[d]; TKM417 = TKM417 + Mhs4.MK417[d]; TKM418 = TKM418 + Mhs4.MK418[d]; TKM419 = TKM419 + Mhs4.MK419[d]; TKM420 = TKM420 + Mhs4.MK420[d];
    }

    var TKM51 = 0; TKM52 = 0; TKM53 = 0; TKM54 = 0; TKM55 = 0; TKM56 = 0; TKM57 = 0; TKM58 = 0; TKM59 = 0; TKM510 = 0; TKM511 = 0; TKM512 = 0; TKM513 = 0; TKM514 = 0; TKM515 = 0; TKM516 = 0; TKM517 = 0; TKM518 = 0; TKM519 = 0; TKM520 = 0;
    var TKM521 = 0; TKM522 = 0; TKM523 = 0; TKM524 = 0; TKM525 = 0; TKM526 = 0; TKM527 = 0; TKM528 = 0; TKM529 = 0; TKM530 = 0; TKM531 = 0; TKM532 = 0; TKM533 = 0; TKM534 = 0; TKM535 = 0; TKM536 = 0; TKM537 = 0; TKM538 = 0; TKM539 = 0; TKM540 = 0;
    var TKM541 = 0; TKM542 = 0; TKM543 = 0; TKM544 = 0; TKM545 = 0; TKM546 = 0; TKM547 = 0; TKM548 = 0; TKM549 = 0; TKM550 = 0; TKM551 = 0; TKM552 = 0; TKM553 = 0; TKM554 = 0; TKM555 = 0; TKM556 = 0; TKM557 = 0; TKM558 = 0; TKM559 = 0; TKM560 = 0;
    
    for (d = 0; d < nilaibaru.M5.length; d++) {
        TKM51 = TKM51 + Mhs5.MK51[d]; TKM52 = TKM52 + Mhs5.MK52[d]; TKM53 = TKM53 + Mhs5.MK53[d]; TKM54 = TKM54 + Mhs5.MK54[d]; TKM55 = TKM55 + Mhs5.MK55[d]; TKM56 = TKM56 + Mhs5.MK56[d]; TKM57 = TKM57 + Mhs5.MK57[d]; TKM58 = TKM58 + Mhs5.MK58[d]; TKM59 = TKM59 + Mhs5.MK59[d]; TKM510 = TKM510 + Mhs5.MK510[d];
        TKM511 = TKM511 + Mhs5.MK511[d]; TKM512 = TKM512 + Mhs5.MK512[d]; TKM513 = TKM513 + Mhs5.MK513[d]; TKM514 = TKM514 + Mhs5.MK514[d]; TKM515 = TKM515 + Mhs5.MK515[d]; TKM516 = TKM516 + Mhs5.MK516[d]; TKM517 = TKM517 + Mhs5.MK517[d]; TKM518 = TKM518 + Mhs5.MK518[d]; TKM519 = TKM519 + Mhs5.MK519[d]; TKM520 = TKM520 + Mhs5.MK520[d];
    }

    var TKM61 = 0; TKM62 = 0; TKM63 = 0; TKM64 = 0; TKM65 = 0; TKM66 = 0; TKM67 = 0; TKM68 = 0; TKM69 = 0; TKM610 = 0; TKM611 = 0; TKM612 = 0; TKM613 = 0; TKM614 = 0; TKM615 = 0; TKM616 = 0; TKM617 = 0; TKM618 = 0; TKM619 = 0; TKM620 = 0;
    var TKM621 = 0; TKM622 = 0; TKM623 = 0; TKM624 = 0; TKM625 = 0; TKM626 = 0; TKM627 = 0; TKM628 = 0; TKM629 = 0; TKM630 = 0; TKM631 = 0; TKM632 = 0; TKM633 = 0; TKM634 = 0; TKM635 = 0; TKM636 = 0; TKM637 = 0; TKM638 = 0; TKM639 = 0; TKM640 = 0;
    var TKM641 = 0; TKM642 = 0; TKM643 = 0; TKM644 = 0; TKM645 = 0; TKM646 = 0; TKM647 = 0; TKM648 = 0; TKM649 = 0; TKM650 = 0; TKM651 = 0; TKM652 = 0; TKM653 = 0; TKM654 = 0; TKM655 = 0; TKM656 = 0; TKM657 = 0; TKM658 = 0; TKM659 = 0; TKM660 = 0;
    
    for (d = 0; d < nilaibaru.M6.length; d++) {
        TKM61 = TKM61 + Mhs6.MK61[d]; TKM62 = TKM62 + Mhs6.MK62[d]; TKM63 = TKM63 + Mhs6.MK63[d]; TKM64 = TKM64 + Mhs6.MK64[d]; TKM65 = TKM65 + Mhs6.MK65[d]; TKM66 = TKM66 + Mhs6.MK66[d]; TKM67 = TKM67 + Mhs6.MK67[d]; TKM68 = TKM68 + Mhs6.MK68[d]; TKM69 = TKM69 + Mhs6.MK69[d]; TKM610 = TKM610 + Mhs6.MK610[d];
        TKM611 = TKM611 + Mhs6.MK611[d]; TKM612 = TKM612 + Mhs6.MK612[d]; TKM613 = TKM613 + Mhs6.MK613[d]; TKM614 = TKM614 + Mhs6.MK614[d]; TKM615 = TKM615 + Mhs6.MK615[d]; TKM616 = TKM616 + Mhs6.MK616[d]; TKM617 = TKM617 + Mhs6.MK617[d]; TKM618 = TKM618 + Mhs6.MK618[d]; TKM619 = TKM619 + Mhs6.MK619[d]; TKM620 = TKM620 + Mhs6.MK620[d];
    }

    var TKM71 = 0; TKM72 = 0; TKM73 = 0; TKM74 = 0; TKM75 = 0; TKM76 = 0; TKM77 = 0; TKM78 = 0; TKM79 = 0; TKM710 = 0; TKM711 = 0; TKM712 = 0; TKM713 = 0; TKM714 = 0; TKM715 = 0; TKM716 = 0; TKM717 = 0; TKM718 = 0; TKM719 = 0; TKM720 = 0;
    var TKM721 = 0; TKM722 = 0; TKM723 = 0; TKM724 = 0; TKM725 = 0; TKM726 = 0; TKM727 = 0; TKM728 = 0; TKM729 = 0; TKM730 = 0; TKM731 = 0; TKM732 = 0; TKM733 = 0; TKM734 = 0; TKM735 = 0; TKM736 = 0; TKM737 = 0; TKM738 = 0; TKM739 = 0; TKM740 = 0;
    var TKM741 = 0; TKM742 = 0; TKM743 = 0; TKM744 = 0; TKM745 = 0; TKM746 = 0; TKM747 = 0; TKM748 = 0; TKM749 = 0; TKM750 = 0; TKM751 = 0; TKM752 = 0; TKM753 = 0; TKM754 = 0; TKM755 = 0; TKM756 = 0; TKM757 = 0; TKM758 = 0; TKM759 = 0; TKM760 = 0;
    
    for (d = 0; d < nilaibaru.M7.length; d++) {
        TKM71 = TKM71 + Mhs7.MK71[d]; TKM72 = TKM72 + Mhs7.MK72[d]; TKM73 = TKM73 + Mhs7.MK73[d]; TKM74 = TKM74 + Mhs7.MK74[d]; TKM75 = TKM75 + Mhs7.MK75[d]; TKM76 = TKM76 + Mhs7.MK76[d]; TKM77 = TKM77 + Mhs7.MK77[d]; TKM78 = TKM78 + Mhs7.MK78[d]; TKM79 = TKM79 + Mhs7.MK79[d]; TKM710 = TKM710 + Mhs7.MK710[d];
        TKM711 = TKM711 + Mhs7.MK711[d]; TKM712 = TKM712 + Mhs7.MK712[d]; TKM713 = TKM713 + Mhs7.MK713[d]; TKM714 = TKM714 + Mhs7.MK714[d]; TKM715 = TKM715 + Mhs7.MK715[d]; TKM716 = TKM716 + Mhs7.MK716[d]; TKM717 = TKM717 + Mhs7.MK717[d]; TKM718 = TKM718 + Mhs7.MK718[d]; TKM719 = TKM719 + Mhs7.MK719[d]; TKM720 = TKM720 + Mhs7.MK720[d];
    }

    var TKM81 = 0; TKM82 = 0; TKM83 = 0; TKM84 = 0; TKM85 = 0; TKM86 = 0; TKM87 = 0; TKM88 = 0; TKM89 = 0; TKM810 = 0; TKM811 = 0; TKM812 = 0; TKM813 = 0; TKM814 = 0; TKM815 = 0; TKM816 = 0; TKM817 = 0; TKM818 = 0; TKM819 = 0; TKM820 = 0;
    var TKM821 = 0; TKM822 = 0; TKM823 = 0; TKM824 = 0; TKM825 = 0; TKM826 = 0; TKM827 = 0; TKM828 = 0; TKM829 = 0; TKM830 = 0; TKM831 = 0; TKM832 = 0; TKM833 = 0; TKM834 = 0; TKM835 = 0; TKM836 = 0; TKM837 = 0; TKM838 = 0; TKM839 = 0; TKM840 = 0;
    var TKM841 = 0; TKM842 = 0; TKM843 = 0; TKM844 = 0; TKM845 = 0; TKM846 = 0; TKM847 = 0; TKM848 = 0; TKM849 = 0; TKM850 = 0; TKM851 = 0; TKM852 = 0; TKM853 = 0; TKM854 = 0; TKM855 = 0; TKM856 = 0; TKM857 = 0; TKM858 = 0; TKM859 = 0; TKM860 = 0;
    
    for (d = 0; d < nilaibaru.M8.length; d++) {
        TKM81 = TKM81 + Mhs8.MK81[d]; TKM82 = TKM82 + Mhs8.MK82[d]; TKM83 = TKM83 + Mhs8.MK83[d]; TKM84 = TKM84 + Mhs8.MK84[d]; TKM85 = TKM85 + Mhs8.MK85[d]; TKM86 = TKM86 + Mhs8.MK86[d]; TKM87 = TKM87 + Mhs8.MK87[d]; TKM88 = TKM88 + Mhs8.MK88[d]; TKM89 = TKM89 + Mhs8.MK89[d]; TKM810 = TKM810 + Mhs8.MK810[d];
        TKM811 = TKM811 + Mhs8.MK811[d]; TKM812 = TKM812 + Mhs8.MK812[d]; TKM813 = TKM813 + Mhs8.MK813[d]; TKM814 = TKM814 + Mhs8.MK814[d]; TKM815 = TKM815 + Mhs8.MK815[d]; TKM816 = TKM816 + Mhs8.MK816[d]; TKM817 = TKM817 + Mhs8.MK817[d]; TKM818 = TKM818 + Mhs8.MK818[d]; TKM819 = TKM819 + Mhs8.MK819[d]; TKM820 = TKM820 + Mhs8.MK820[d];
    }

    var TKM91 = 0; TKM92 = 0; TKM93 = 0; TKM94 = 0; TKM95 = 0; TKM96 = 0; TKM97 = 0; TKM98 = 0; TKM99 = 0; TKM910 = 0; TKM911 = 0; TKM912 = 0; TKM913 = 0; TKM914 = 0; TKM915 = 0; TKM916 = 0; TKM917 = 0; TKM918 = 0; TKM919 = 0; TKM920 = 0;
    var TKM921 = 0; TKM922 = 0; TKM923 = 0; TKM924 = 0; TKM925 = 0; TKM926 = 0; TKM927 = 0; TKM928 = 0; TKM929 = 0; TKM930 = 0; TKM931 = 0; TKM932 = 0; TKM933 = 0; TKM934 = 0; TKM935 = 0; TKM936 = 0; TKM937 = 0; TKM938 = 0; TKM939 = 0; TKM940 = 0;
    var TKM941 = 0; TKM942 = 0; TKM943 = 0; TKM944 = 0; TKM945 = 0; TKM946 = 0; TKM947 = 0; TKM948 = 0; TKM949 = 0; TKM950 = 0; TKM951 = 0; TKM952 = 0; TKM953 = 0; TKM954 = 0; TKM955 = 0; TKM956 = 0; TKM957 = 0; TKM958 = 0; TKM959 = 0; TKM960 = 0;
    
    for (d = 0; d < nilaibaru.M9.length; d++) {
        TKM91 = TKM91 + Mhs9.MK91[d]; TKM92 = TKM92 + Mhs9.MK92[d]; TKM93 = TKM93 + Mhs9.MK93[d]; TKM94 = TKM94 + Mhs9.MK94[d]; TKM95 = TKM95 + Mhs9.MK95[d]; TKM96 = TKM96 + Mhs9.MK96[d]; TKM97 = TKM97 + Mhs9.MK97[d]; TKM98 = TKM98 + Mhs9.MK98[d]; TKM99 = TKM99 + Mhs9.MK99[d]; TKM910 = TKM910 + Mhs9.MK910[d];
        TKM911 = TKM911 + Mhs9.MK911[d]; TKM912 = TKM912 + Mhs9.MK912[d]; TKM913 = TKM913 + Mhs9.MK913[d]; TKM914 = TKM914 + Mhs9.MK914[d]; TKM915 = TKM915 + Mhs9.MK915[d]; TKM916 = TKM916 + Mhs9.MK916[d]; TKM917 = TKM917 + Mhs9.MK917[d]; TKM918 = TKM918 + Mhs9.MK918[d]; TKM919 = TKM919 + Mhs9.MK919[d]; TKM920 = TKM920 + Mhs9.MK920[d];
    }

    var TKM101 = 0; TKM102 = 0; TKM103 = 0; TKM104 = 0; TKM105 = 0; TKM106 = 0; TKM107 = 0; TKM108 = 0; TKM109 = 0; TKM1010 = 0; TKM1011 = 0; TKM1012 = 0; TKM1013 = 0; TKM1014 = 0; TKM1015 = 0; TKM1016 = 0; TKM1017 = 0; TKM1018 = 0; TKM1019 = 0; TKM1020 = 0;
    var TKM1021 = 0; TKM1022 = 0; TKM1023 = 0; TKM1024 = 0; TKM1025 = 0; TKM1026 = 0; TKM1027 = 0; TKM1028 = 0; TKM1029 = 0; TKM1030 = 0; TKM1031 = 0; TKM1032 = 0; TKM1033 = 0; TKM1034 = 0; TKM1035 = 0; TKM1036 = 0; TKM1037 = 0; TKM1038 = 0; TKM1039 = 0; TKM1040 = 0;
    var TKM1041 = 0; TKM1042 = 0; TKM1043 = 0; TKM1044 = 0; TKM1045 = 0; TKM1046 = 0; TKM1047 = 0; TKM1048 = 0; TKM1049 = 0; TKM1050 = 0; TKM1051 = 0; TKM1052 = 0; TKM1053 = 0; TKM1054 = 0; TKM1055 = 0; TKM1056 = 0; TKM1057 = 0; TKM1058 = 0; TKM1059 = 0; TKM1060 = 0;
   
    for (d = 0; d < nilaibaru.M10.length; d++) {
        TKM101 = TKM101 + Mhs10.MK101[d]; TKM102 = TKM102 + Mhs10.MK102[d]; TKM103 = TKM103 + Mhs10.MK103[d]; TKM104 = TKM104 + Mhs10.MK104[d]; TKM105 = TKM105 + Mhs10.MK105[d]; TKM106 = TKM106 + Mhs10.MK106[d]; TKM107 = TKM107 + Mhs10.MK107[d]; TKM108 = TKM108 + Mhs10.MK108[d]; TKM109 = TKM109 + Mhs10.MK109[d]; TKM1010 = TKM1010 + Mhs10.MK1010[d];
        TKM1011 = TKM1011 + Mhs10.MK1011[d]; TKM1012 = TKM1012 + Mhs10.MK1012[d]; TKM1013 = TKM1013 + Mhs10.MK1013[d]; TKM1014 = TKM1014 + Mhs10.MK1014[d]; TKM1015 = TKM1015 + Mhs10.MK1015[d]; TKM1016 = TKM1016 + Mhs10.MK1016[d]; TKM1017 = TKM1017 + Mhs10.MK1017[d]; TKM1018 = TKM1018 + Mhs10.MK1018[d]; TKM1019 = TKM1019 + Mhs10.MK1019[d]; TKM1020 = TKM1020 + Mhs10.MK1020[d];
    }

    var TKM111 = 0; TKM112 = 0; TKM113 = 0; TKM114 = 0; TKM115 = 0; TKM116 = 0; TKM117 = 0; TKM118 = 0; TKM119 = 0; TKM1110 = 0; TKM1111 = 0; TKM1112 = 0; TKM1113 = 0; TKM1114 = 0; TKM1115 = 0; TKM1116 = 0; TKM1117 = 0; TKM1118 = 0; TKM1119 = 0; TKM1120 = 0;
    var TKM1121 = 0; TKM1122 = 0; TKM1123 = 0; TKM1124 = 0; TKM1125 = 0; TKM1126 = 0; TKM1127 = 0; TKM1128 = 0; TKM1129 = 0; TKM1130 = 0; TKM1131 = 0; TKM1132 = 0; TKM1133 = 0; TKM1134 = 0; TKM1135 = 0; TKM1136 = 0; TKM1137 = 0; TKM1138 = 0; TKM1139 = 0; TKM1140 = 0;
    var TKM1141 = 0; TKM1142 = 0; TKM1143 = 0; TKM1144 = 0; TKM1145 = 0; TKM1146 = 0; TKM1147 = 0; TKM1148 = 0; TKM1149 = 0; TKM1150 = 0; TKM1151 = 0; TKM1152 = 0; TKM1153 = 0; TKM1154 = 0; TKM1155 = 0; TKM1156 = 0; TKM1157 = 0; TKM1158 = 0; TKM1159 = 0; TKM1160 = 0;
    for (var d = 0; d < nilaibaru.M11.length; d++) { 
        TKM111 = TKM111 + Mhs11.MK111[d]; TKM112 = TKM112 + Mhs11.MK112[d]; TKM113 = TKM113 + Mhs11.MK113[d]; TKM114 = TKM114 + Mhs11.MK114[d]; TKM115 = TKM115 + Mhs11.MK115[d]; TKM116 = TKM116 + Mhs11.MK116[d]; TKM117 = TKM117 + Mhs11.MK117[d]; TKM118 = TKM118 + Mhs11.MK118[d]; TKM119 = TKM119 + Mhs11.MK119[d]; TKM1110 = TKM1110 + Mhs11.MK1110[d];
        TKM1111 = TKM1111 + Mhs11.MK1111[d]; TKM1112 = TKM1112 + Mhs11.MK1112[d]; TKM1113 = TKM1113 + Mhs11.MK1113[d]; TKM1114 = TKM1114 + Mhs11.MK1114[d]; TKM1115 = TKM1115 + Mhs11.MK1115[d]; TKM1116 = TKM1116 + Mhs11.MK1116[d]; TKM1117 = TKM1117 + Mhs11.MK1117[d]; TKM1118 = TKM1118 + Mhs11.MK1118[d]; TKM1119 = TKM1119 + Mhs11.MK1119[d]; TKM1120 = TKM1120 + Mhs11.MK1120[d];
        TKM1121 = TKM1121 + Mhs11.MK1121[d]; TKM1122 = TKM1122 + Mhs11.MK1122[d]; TKM1123 = TKM1123 + Mhs11.MK1123[d]; TKM1124 = TKM1124 + Mhs11.MK1124[d]; TKM1125 = TKM1125 + Mhs11.MK1125[d]; TKM1126 = TKM1126 + Mhs11.MK1126[d]; TKM1127 = TKM1127 + Mhs11.MK1127[d]; TKM1128 = TKM1128 + Mhs11.MK1128[d]; TKM1129 = TKM1129 + Mhs11.MK1129[d]; TKM1130 = TKM1130 + Mhs11.MK1130[d];
    }

    var TKM121 = 0; TKM122 = 0; TKM123 = 0; TKM124 = 0; TKM125 = 0; TKM126 = 0; TKM127 = 0; TKM128 = 0; TKM129 = 0; TKM1210 = 0; TKM1211 = 0; TKM1212 = 0; TKM1213 = 0; TKM1214 = 0; TKM1215 = 0; TKM1216 = 0; TKM1217 = 0; TKM1218 = 0; TKM1219 = 0; TKM1220 = 0;
    var TKM1221 = 0; TKM1222 = 0; TKM1223 = 0; TKM1224 = 0; TKM1225 = 0; TKM1226 = 0; TKM1227 = 0; TKM1228 = 0; TKM1229 = 0; TKM1230 = 0; TKM1231 = 0; TKM1232 = 0; TKM1233 = 0; TKM1234 = 0; TKM1235 = 0; TKM1236 = 0; TKM1237 = 0; TKM1238 = 0; TKM1239 = 0; TKM1240 = 0;
    var TKM1241 = 0; TKM1242 = 0; TKM1243 = 0; TKM1244 = 0; TKM1245 = 0; TKM1246 = 0; TKM1247 = 0; TKM1248 = 0; TKM1249 = 0; TKM1250 = 0; TKM1251 = 0; TKM1252 = 0; TKM1253 = 0; TKM1254 = 0; TKM1255 = 0; TKM1256 = 0; TKM1257 = 0; TKM1258 = 0; TKM1259 = 0; TKM1260 = 0;
    for (var d = 0; d < nilaibaru.M12.length; d++) { 
        TKM121 = TKM121 + Mhs12.MK121[d]; TKM122 = TKM122 + Mhs12.MK122[d]; TKM123 = TKM123 + Mhs12.MK123[d]; TKM124 = TKM124 + Mhs12.MK124[d]; TKM125 = TKM125 + Mhs12.MK125[d]; TKM126 = TKM126 + Mhs12.MK126[d]; TKM127 = TKM127 + Mhs12.MK127[d]; TKM128 = TKM128 + Mhs12.MK128[d]; TKM129 = TKM129 + Mhs12.MK129[d]; TKM1210 = TKM1210 + Mhs12.MK1210[d];
        TKM1211 = TKM1211 + Mhs12.MK1211[d]; TKM1212 = TKM1212 + Mhs12.MK1212[d]; TKM1213 = TKM1213 + Mhs12.MK1213[d]; TKM1214 = TKM1214 + Mhs12.MK1214[d]; TKM1215 = TKM1215 + Mhs12.MK1215[d]; TKM1216 = TKM1216 + Mhs12.MK1216[d]; TKM1217 = TKM1217 + Mhs12.MK1217[d]; TKM1218 = TKM1218 + Mhs12.MK1218[d]; TKM1219 = TKM1219 + Mhs12.MK1219[d]; TKM1220 = TKM1220 + Mhs12.MK1220[d];
        TKM1221 = TKM1221 + Mhs12.MK1221[d]; TKM1222 = TKM1222 + Mhs12.MK1222[d]; TKM1223 = TKM1223 + Mhs12.MK1223[d]; TKM1224 = TKM1224 + Mhs12.MK1224[d]; TKM1225 = TKM1225 + Mhs12.MK1225[d]; TKM1226 = TKM1226 + Mhs12.MK1226[d]; TKM1227 = TKM1227 + Mhs12.MK1227[d]; TKM1228 = TKM1228 + Mhs12.MK1228[d]; TKM1229 = TKM1229 + Mhs12.MK1229[d]; TKM1230 = TKM1230 + Mhs12.MK1230[d];
    }

    var TKM131 = 0; TKM132 = 0; TKM133 = 0; TKM134 = 0; TKM135 = 0; TKM136 = 0; TKM137 = 0; TKM138 = 0; TKM139 = 0; TKM1310 = 0; TKM1311 = 0; TKM1312 = 0; TKM1313 = 0; TKM1314 = 0; TKM1315 = 0; TKM1316 = 0; TKM1317 = 0; TKM1318 = 0; TKM1319 = 0; TKM1320 = 0;
    var TKM1321 = 0; TKM1322 = 0; TKM1323 = 0; TKM1324 = 0; TKM1325 = 0; TKM1326 = 0; TKM1327 = 0; TKM1328 = 0; TKM1329 = 0; TKM1330 = 0; TKM1331 = 0; TKM1332 = 0; TKM1333 = 0; TKM1334 = 0; TKM1335 = 0; TKM1336 = 0; TKM1337 = 0; TKM1338 = 0; TKM1339 = 0; TKM1340 = 0;
    var TKM1341 = 0; TKM1342 = 0; TKM1343 = 0; TKM1344 = 0; TKM1345 = 0; TKM1346 = 0; TKM1347 = 0; TKM1348 = 0; TKM1349 = 0; TKM1350 = 0; TKM1351 = 0; TKM1352 = 0; TKM1353 = 0; TKM1354 = 0; TKM1355 = 0; TKM1356 = 0; TKM1357 = 0; TKM1358 = 0; TKM1359 = 0; TKM1360 = 0;
    for (var d = 0; d < nilaibaru.M13.length; d++) { 
        TKM131 = TKM131 + Mhs13.MK131[d]; TKM132 = TKM132 + Mhs13.MK132[d]; TKM133 = TKM133 + Mhs13.MK133[d]; TKM134 = TKM134 + Mhs13.MK134[d]; TKM135 = TKM135 + Mhs13.MK135[d]; TKM136 = TKM136 + Mhs13.MK136[d]; TKM137 = TKM137 + Mhs13.MK137[d]; TKM138 = TKM138 + Mhs13.MK138[d]; TKM139 = TKM139 + Mhs13.MK139[d]; TKM1310 = TKM1310 + Mhs13.MK1310[d];
        TKM1311 = TKM1311 + Mhs13.MK1311[d]; TKM1312 = TKM1312 + Mhs13.MK1312[d]; TKM1313 = TKM1313 + Mhs13.MK1313[d]; TKM1314 = TKM1314 + Mhs13.MK1314[d]; TKM1315 = TKM1315 + Mhs13.MK1315[d]; TKM1316 = TKM1316 + Mhs13.MK1316[d]; TKM1317 = TKM1317 + Mhs13.MK1317[d]; TKM1318 = TKM1318 + Mhs13.MK1318[d]; TKM1319 = TKM1319 + Mhs13.MK1319[d]; TKM1320 = TKM1320 + Mhs13.MK1320[d];
        TKM1321 = TKM1321 + Mhs13.MK1321[d]; TKM1322 = TKM1322 + Mhs13.MK1322[d]; TKM1323 = TKM1323 + Mhs13.MK1323[d]; TKM1324 = TKM1324 + Mhs13.MK1324[d]; TKM1325 = TKM1325 + Mhs13.MK1325[d]; TKM1326 = TKM1326 + Mhs13.MK1326[d]; TKM1327 = TKM1327 + Mhs13.MK1327[d]; TKM1328 = TKM1328 + Mhs13.MK1328[d]; TKM1329 = TKM1329 + Mhs13.MK1329[d]; TKM1330 = TKM1330 + Mhs13.MK1330[d];
    }

    var TKM141 = 0; TKM142 = 0; TKM143 = 0; TKM144 = 0; TKM145 = 0; TKM146 = 0; TKM147 = 0; TKM148 = 0; TKM149 = 0; TKM1410 = 0; TKM1411 = 0; TKM1412 = 0; TKM1413 = 0; TKM1414 = 0; TKM1415 = 0; TKM1416 = 0; TKM1417 = 0; TKM1418 = 0; TKM1419 = 0; TKM1420 = 0;
    var TKM1421 = 0; TKM1422 = 0; TKM1423 = 0; TKM1424 = 0; TKM1425 = 0; TKM1426 = 0; TKM1427 = 0; TKM1428 = 0; TKM1429 = 0; TKM1430 = 0; TKM1431 = 0; TKM1432 = 0; TKM1433 = 0; TKM1434 = 0; TKM1435 = 0; TKM1436 = 0; TKM1437 = 0; TKM1438 = 0; TKM1439 = 0; TKM1440 = 0;
    var TKM1441 = 0; TKM1442 = 0; TKM1443 = 0; TKM1444 = 0; TKM1445 = 0; TKM1446 = 0; TKM1447 = 0; TKM1448 = 0; TKM1449 = 0; TKM1450 = 0; TKM1451 = 0; TKM1452 = 0; TKM1453 = 0; TKM1454 = 0; TKM1455 = 0; TKM1456 = 0; TKM1457 = 0; TKM1458 = 0; TKM1459 = 0; TKM1460 = 0;
    for (var d = 0; d < nilaibaru.M14.length; d++) { 
        TKM141 = TKM141 + Mhs14.MK141[d]; TKM142 = TKM142 + Mhs14.MK142[d]; TKM143 = TKM143 + Mhs14.MK143[d]; TKM144 = TKM144 + Mhs14.MK144[d]; TKM145 = TKM145 + Mhs14.MK145[d]; TKM146 = TKM146 + Mhs14.MK146[d]; TKM147 = TKM147 + Mhs14.MK147[d]; TKM148 = TKM148 + Mhs14.MK148[d]; TKM149 = TKM149 + Mhs14.MK149[d]; TKM1410 = TKM1410 + Mhs14.MK1410[d];
        TKM1411 = TKM1411 + Mhs14.MK1411[d]; TKM1412 = TKM1412 + Mhs14.MK1412[d]; TKM1413 = TKM1413 + Mhs14.MK1413[d]; TKM1414 = TKM1414 + Mhs14.MK1414[d]; TKM1415 = TKM1415 + Mhs14.MK1415[d]; TKM1416 = TKM1416 + Mhs14.MK1416[d]; TKM1417 = TKM1417 + Mhs14.MK1417[d]; TKM1418 = TKM1418 + Mhs14.MK1418[d]; TKM1419 = TKM1419 + Mhs14.MK1419[d]; TKM1420 = TKM1420 + Mhs14.MK1420[d];
        TKM1421 = TKM1421 + Mhs14.MK1421[d]; TKM1422 = TKM1422 + Mhs14.MK1422[d]; TKM1423 = TKM1423 + Mhs14.MK1423[d]; TKM1424 = TKM1424 + Mhs14.MK1424[d]; TKM1425 = TKM1425 + Mhs14.MK1425[d]; TKM1426 = TKM1426 + Mhs14.MK1426[d]; TKM1427 = TKM1427 + Mhs14.MK1427[d]; TKM1428 = TKM1428 + Mhs14.MK1428[d]; TKM1429 = TKM1429 + Mhs14.MK1429[d]; TKM1430 = TKM1430 + Mhs14.MK1430[d];
    }

    var TKM151 = 0; TKM152 = 0; TKM153 = 0; TKM154 = 0; TKM155 = 0; TKM156 = 0; TKM157 = 0; TKM158 = 0; TKM159 = 0; TKM1510 = 0; TKM1511 = 0; TKM1512 = 0; TKM1513 = 0; TKM1514 = 0; TKM1515 = 0; TKM1516 = 0; TKM1517 = 0; TKM1518 = 0; TKM1519 = 0; TKM1520 = 0;
    var TKM1521 = 0; TKM1522 = 0; TKM1523 = 0; TKM1524 = 0; TKM1525 = 0; TKM1526 = 0; TKM1527 = 0; TKM1528 = 0; TKM1529 = 0; TKM1530 = 0; TKM1531 = 0; TKM1532 = 0; TKM1533 = 0; TKM1534 = 0; TKM1535 = 0; TKM1536 = 0; TKM1537 = 0; TKM1538 = 0; TKM1539 = 0; TKM1540 = 0;
    var TKM1541 = 0; TKM1542 = 0; TKM1543 = 0; TKM1544 = 0; TKM1545 = 0; TKM1546 = 0; TKM1547 = 0; TKM1548 = 0; TKM1549 = 0; TKM1550 = 0; TKM1551 = 0; TKM1552 = 0; TKM1553 = 0; TKM1554 = 0; TKM1555 = 0; TKM1556 = 0; TKM1557 = 0; TKM1558 = 0; TKM1559 = 0; TKM1560 = 0;
    for (var d = 0; d < nilaibaru.M15.length; d++) { 
        TKM151 = TKM151 + Mhs15.MK151[d]; TKM152 = TKM152 + Mhs15.MK152[d]; TKM153 = TKM153 + Mhs15.MK153[d]; TKM154 = TKM154 + Mhs15.MK154[d]; TKM155 = TKM155 + Mhs15.MK155[d]; TKM156 = TKM156 + Mhs15.MK156[d]; TKM157 = TKM157 + Mhs15.MK157[d]; TKM158 = TKM158 + Mhs15.MK158[d]; TKM159 = TKM159 + Mhs15.MK159[d]; TKM1510 = TKM1510 + Mhs15.MK1510[d];
        TKM1511 = TKM1511 + Mhs15.MK1511[d]; TKM1512 = TKM1512 + Mhs15.MK1512[d]; TKM1513 = TKM1513 + Mhs15.MK1513[d]; TKM1514 = TKM1514 + Mhs15.MK1514[d]; TKM1515 = TKM1515 + Mhs15.MK1515[d]; TKM1516 = TKM1516 + Mhs15.MK1516[d]; TKM1517 = TKM1517 + Mhs15.MK1517[d]; TKM1518 = TKM1518 + Mhs15.MK1518[d]; TKM1519 = TKM1519 + Mhs15.MK1519[d]; TKM1520 = TKM1520 + Mhs15.MK1520[d];
        TKM1521 = TKM1521 + Mhs15.MK1521[d]; TKM1522 = TKM1522 + Mhs15.MK1522[d]; TKM1523 = TKM1523 + Mhs15.MK1523[d]; TKM1524 = TKM1524 + Mhs15.MK1524[d]; TKM1525 = TKM1525 + Mhs15.MK1525[d]; TKM1526 = TKM1526 + Mhs15.MK1526[d]; TKM1527 = TKM1527 + Mhs15.MK1527[d]; TKM1528 = TKM1528 + Mhs15.MK1528[d]; TKM1529 = TKM1529 + Mhs15.MK1529[d]; TKM1530 = TKM1530 + Mhs15.MK1530[d];
    }

    var TKM161 = 0; TKM162 = 0; TKM163 = 0; TKM164 = 0; TKM165 = 0; TKM166 = 0; TKM167 = 0; TKM168 = 0; TKM169 = 0; TKM1610 = 0; TKM1611 = 0; TKM1612 = 0; TKM1613 = 0; TKM1614 = 0; TKM1615 = 0; TKM1616 = 0; TKM1617 = 0; TKM1618 = 0; TKM1619 = 0; TKM1620 = 0;
    var TKM1621 = 0; TKM1622 = 0; TKM1623 = 0; TKM1624 = 0; TKM1625 = 0; TKM1626 = 0; TKM1627 = 0; TKM1628 = 0; TKM1629 = 0; TKM1630 = 0; TKM1631 = 0; TKM1632 = 0; TKM1633 = 0; TKM1634 = 0; TKM1635 = 0; TKM1636 = 0; TKM1637 = 0; TKM1638 = 0; TKM1639 = 0; TKM1640 = 0;
    var TKM1641 = 0; TKM1642 = 0; TKM1643 = 0; TKM1644 = 0; TKM1645 = 0; TKM1646 = 0; TKM1647 = 0; TKM1648 = 0; TKM1649 = 0; TKM1650 = 0; TKM1651 = 0; TKM1652 = 0; TKM1653 = 0; TKM1654 = 0; TKM1655 = 0; TKM1656 = 0; TKM1657 = 0; TKM1658 = 0; TKM1659 = 0; TKM1660 = 0;
    for (var d = 0; d < nilaibaru.M16.length; d++) { 
        TKM161 = TKM161 + Mhs16.MK161[d]; TKM162 = TKM162 + Mhs16.MK162[d]; TKM163 = TKM163 + Mhs16.MK163[d]; TKM164 = TKM164 + Mhs16.MK164[d]; TKM165 = TKM165 + Mhs16.MK165[d]; TKM166 = TKM166 + Mhs16.MK166[d]; TKM167 = TKM167 + Mhs16.MK167[d]; TKM168 = TKM168 + Mhs16.MK168[d]; TKM169 = TKM169 + Mhs16.MK169[d]; TKM1610 = TKM1610 + Mhs16.MK1610[d];
        TKM1611 = TKM1611 + Mhs16.MK1611[d]; TKM1612 = TKM1612 + Mhs16.MK1612[d]; TKM1613 = TKM1613 + Mhs16.MK1613[d]; TKM1614 = TKM1614 + Mhs16.MK1614[d]; TKM1615 = TKM1615 + Mhs16.MK1615[d]; TKM1616 = TKM1616 + Mhs16.MK1616[d]; TKM1617 = TKM1617 + Mhs16.MK1617[d]; TKM1618 = TKM1618 + Mhs16.MK1618[d]; TKM1619 = TKM1619 + Mhs16.MK1619[d]; TKM1620 = TKM1620 + Mhs16.MK1620[d];
        TKM1621 = TKM1621 + Mhs16.MK1621[d]; TKM1622 = TKM1622 + Mhs16.MK1622[d]; TKM1623 = TKM1623 + Mhs16.MK1623[d]; TKM1624 = TKM1624 + Mhs16.MK1624[d]; TKM1625 = TKM1625 + Mhs16.MK1625[d]; TKM1626 = TKM1626 + Mhs16.MK1626[d]; TKM1627 = TKM1627 + Mhs16.MK1627[d]; TKM1628 = TKM1628 + Mhs16.MK1628[d]; TKM1629 = TKM1629 + Mhs16.MK1629[d]; TKM1630 = TKM1630 + Mhs16.MK1630[d];
    }

    var TKM171 = 0; TKM172 = 0; TKM173 = 0; TKM174 = 0; TKM175 = 0; TKM176 = 0; TKM177 = 0; TKM178 = 0; TKM179 = 0; TKM1710 = 0; TKM1711 = 0; TKM1712 = 0; TKM1713 = 0; TKM1714 = 0; TKM1715 = 0; TKM1716 = 0; TKM1717 = 0; TKM1718 = 0; TKM1719 = 0; TKM1720 = 0;
    var TKM1721 = 0; TKM1722 = 0; TKM1723 = 0; TKM1724 = 0; TKM1725 = 0; TKM1726 = 0; TKM1727 = 0; TKM1728 = 0; TKM1729 = 0; TKM1730 = 0; TKM1731 = 0; TKM1732 = 0; TKM1733 = 0; TKM1734 = 0; TKM1735 = 0; TKM1736 = 0; TKM1737 = 0; TKM1738 = 0; TKM1739 = 0; TKM1740 = 0;
    var TKM1741 = 0; TKM1742 = 0; TKM1743 = 0; TKM1744 = 0; TKM1745 = 0; TKM1746 = 0; TKM1747 = 0; TKM1748 = 0; TKM1749 = 0; TKM1750 = 0; TKM1751 = 0; TKM1752 = 0; TKM1753 = 0; TKM1754 = 0; TKM1755 = 0; TKM1756 = 0; TKM1757 = 0; TKM1758 = 0; TKM1759 = 0; TKM1760 = 0;
    for (var d = 0; d < nilaibaru.M17.length; d++) { 
        TKM171 = TKM171 + Mhs17.MK171[d]; TKM172 = TKM172 + Mhs17.MK172[d]; TKM173 = TKM173 + Mhs17.MK173[d]; TKM174 = TKM174 + Mhs17.MK174[d]; TKM175 = TKM175 + Mhs17.MK175[d]; TKM176 = TKM176 + Mhs17.MK176[d]; TKM177 = TKM177 + Mhs17.MK177[d]; TKM178 = TKM178 + Mhs17.MK178[d]; TKM179 = TKM179 + Mhs17.MK179[d]; TKM1710 = TKM1710 + Mhs17.MK1710[d];
        TKM1711 = TKM1711 + Mhs17.MK1711[d]; TKM1712 = TKM1712 + Mhs17.MK1712[d]; TKM1713 = TKM1713 + Mhs17.MK1713[d]; TKM1714 = TKM1714 + Mhs17.MK1714[d]; TKM1715 = TKM1715 + Mhs17.MK1715[d]; TKM1716 = TKM1716 + Mhs17.MK1716[d]; TKM1717 = TKM1717 + Mhs17.MK1717[d]; TKM1718 = TKM1718 + Mhs17.MK1718[d]; TKM1719 = TKM1719 + Mhs17.MK1719[d]; TKM1720 = TKM1720 + Mhs17.MK1720[d];
        TKM1721 = TKM1721 + Mhs17.MK1721[d]; TKM1722 = TKM1722 + Mhs17.MK1722[d]; TKM1723 = TKM1723 + Mhs17.MK1723[d]; TKM1724 = TKM1724 + Mhs17.MK1724[d]; TKM1725 = TKM1725 + Mhs17.MK1725[d]; TKM1726 = TKM1726 + Mhs17.MK1726[d]; TKM1727 = TKM1727 + Mhs17.MK1727[d]; TKM1728 = TKM1728 + Mhs17.MK1728[d]; TKM1729 = TKM1729 + Mhs17.MK1729[d]; TKM1730 = TKM1730 + Mhs17.MK1730[d];
    }
    
    var TKM181 = 0; TKM182 = 0; TKM183 = 0; TKM184 = 0; TKM185 = 0; TKM186 = 0; TKM187 = 0; TKM188 = 0; TKM189 = 0; TKM1810 = 0; TKM1811 = 0; TKM1812 = 0; TKM1813 = 0; TKM1814 = 0; TKM1815 = 0; TKM1816 = 0; TKM1817 = 0; TKM1818 = 0; TKM1819 = 0; TKM1820 = 0;
    var TKM1821 = 0; TKM1822 = 0; TKM1823 = 0; TKM1824 = 0; TKM1825 = 0; TKM1826 = 0; TKM1827 = 0; TKM1828 = 0; TKM1829 = 0; TKM1830 = 0; TKM1831 = 0; TKM1832 = 0; TKM1833 = 0; TKM1834 = 0; TKM1835 = 0; TKM1836 = 0; TKM1837 = 0; TKM1838 = 0; TKM1839 = 0; TKM1840 = 0;
    var TKM1841 = 0; TKM1842 = 0; TKM1843 = 0; TKM1844 = 0; TKM1845 = 0; TKM1846 = 0; TKM1847 = 0; TKM1848 = 0; TKM1849 = 0; TKM1850 = 0; TKM1851 = 0; TKM1852 = 0; TKM1853 = 0; TKM1854 = 0; TKM1855 = 0; TKM1856 = 0; TKM1857 = 0; TKM1858 = 0; TKM1859 = 0; TKM1860 = 0;
    for (var d = 0; d < nilaibaru.M18.length; d++) { 
        TKM181 = TKM181 + Mhs18.MK181[d]; TKM182 = TKM182 + Mhs18.MK182[d]; TKM183 = TKM183 + Mhs18.MK183[d]; TKM184 = TKM184 + Mhs18.MK184[d]; TKM185 = TKM185 + Mhs18.MK185[d]; TKM186 = TKM186 + Mhs18.MK186[d]; TKM187 = TKM187 + Mhs18.MK187[d]; TKM188 = TKM188 + Mhs18.MK188[d]; TKM189 = TKM189 + Mhs18.MK189[d]; TKM1810 = TKM1810 + Mhs18.MK1810[d];
        TKM1811 = TKM1811 + Mhs18.MK1811[d]; TKM1812 = TKM1812 + Mhs18.MK1812[d]; TKM1813 = TKM1813 + Mhs18.MK1813[d]; TKM1814 = TKM1814 + Mhs18.MK1814[d]; TKM1815 = TKM1815 + Mhs18.MK1815[d]; TKM1816 = TKM1816 + Mhs18.MK1816[d]; TKM1817 = TKM1817 + Mhs18.MK1817[d]; TKM1818 = TKM1818 + Mhs18.MK1818[d]; TKM1819 = TKM1819 + Mhs18.MK1819[d]; TKM1820 = TKM1820 + Mhs18.MK1820[d];
        TKM1821 = TKM1821 + Mhs18.MK1821[d]; TKM1822 = TKM1822 + Mhs18.MK1822[d]; TKM1823 = TKM1823 + Mhs18.MK1823[d]; TKM1824 = TKM1824 + Mhs18.MK1824[d]; TKM1825 = TKM1825 + Mhs18.MK1825[d]; TKM1826 = TKM1826 + Mhs18.MK1826[d]; TKM1827 = TKM1827 + Mhs18.MK1827[d]; TKM1828 = TKM1828 + Mhs18.MK1828[d]; TKM1829 = TKM1829 + Mhs18.MK1829[d]; TKM1830 = TKM1830 + Mhs18.MK1830[d];
    }
    
    var TKM191 = 0; TKM192 = 0; TKM193 = 0; TKM194 = 0; TKM195 = 0; TKM196 = 0; TKM197 = 0; TKM198 = 0; TKM199 = 0; TKM1910 = 0; TKM1911 = 0; TKM1912 = 0; TKM1913 = 0; TKM1914 = 0; TKM1915 = 0; TKM1916 = 0; TKM1917 = 0; TKM1918 = 0; TKM1919 = 0; TKM1920 = 0;
    var TKM1921 = 0; TKM1922 = 0; TKM1923 = 0; TKM1924 = 0; TKM1925 = 0; TKM1926 = 0; TKM1927 = 0; TKM1928 = 0; TKM1929 = 0; TKM1930 = 0; TKM1931 = 0; TKM1932 = 0; TKM1933 = 0; TKM1934 = 0; TKM1935 = 0; TKM1936 = 0; TKM1937 = 0; TKM1938 = 0; TKM1939 = 0; TKM1940 = 0;
    var TKM1941 = 0; TKM1942 = 0; TKM1943 = 0; TKM1944 = 0; TKM1945 = 0; TKM1946 = 0; TKM1947 = 0; TKM1948 = 0; TKM1949 = 0; TKM1950 = 0; TKM1951 = 0; TKM1952 = 0; TKM1953 = 0; TKM1954 = 0; TKM1955 = 0; TKM1956 = 0; TKM1957 = 0; TKM1958 = 0; TKM1959 = 0; TKM1960 = 0;
    for (var d = 0; d < nilaibaru.M19.length; d++) { 
        TKM191 = TKM191 + Mhs19.MK191[d]; TKM192 = TKM192 + Mhs19.MK192[d]; TKM193 = TKM193 + Mhs19.MK193[d]; TKM194 = TKM194 + Mhs19.MK194[d]; TKM195 = TKM195 + Mhs19.MK195[d]; TKM196 = TKM196 + Mhs19.MK196[d]; TKM197 = TKM197 + Mhs19.MK197[d]; TKM198 = TKM198 + Mhs19.MK198[d]; TKM199 = TKM199 + Mhs19.MK199[d]; TKM1910 = TKM1910 + Mhs19.MK1910[d];
        TKM1911 = TKM1911 + Mhs19.MK1911[d]; TKM1912 = TKM1912 + Mhs19.MK1912[d]; TKM1913 = TKM1913 + Mhs19.MK1913[d]; TKM1914 = TKM1914 + Mhs19.MK1914[d]; TKM1915 = TKM1915 + Mhs19.MK1915[d]; TKM1916 = TKM1916 + Mhs19.MK1916[d]; TKM1917 = TKM1917 + Mhs19.MK1917[d]; TKM1918 = TKM1918 + Mhs19.MK1918[d]; TKM1919 = TKM1919 + Mhs19.MK1919[d]; TKM1920 = TKM1920 + Mhs19.MK1920[d];
        TKM1921 = TKM1921 + Mhs19.MK1921[d]; TKM1922 = TKM1922 + Mhs19.MK1922[d]; TKM1923 = TKM1923 + Mhs19.MK1923[d]; TKM1924 = TKM1924 + Mhs19.MK1924[d]; TKM1925 = TKM1925 + Mhs19.MK1925[d]; TKM1926 = TKM1926 + Mhs19.MK1926[d]; TKM1927 = TKM1927 + Mhs19.MK1927[d]; TKM1928 = TKM1928 + Mhs19.MK1928[d]; TKM1929 = TKM1929 + Mhs19.MK1929[d]; TKM1930 = TKM1930 + Mhs19.MK1930[d];
    }

    var TKM201 = 0; TKM202 = 0; TKM203 = 0; TKM204 = 0; TKM205 = 0; TKM206 = 0; TKM207 = 0; TKM208 = 0; TKM209 = 0; TKM2010 = 0; TKM2011 = 0; TKM2012 = 0; TKM2013 = 0; TKM2014 = 0; TKM2015 = 0; TKM2016 = 0; TKM2017 = 0; TKM2018 = 0; TKM2019 = 0; TKM2020 = 0;
    var TKM2021 = 0; TKM2022 = 0; TKM2023 = 0; TKM2024 = 0; TKM2025 = 0; TKM2026 = 0; TKM2027 = 0; TKM2028 = 0; TKM2029 = 0; TKM2030 = 0; TKM2031 = 0; TKM2032 = 0; TKM2033 = 0; TKM2034 = 0; TKM2035 = 0; TKM2036 = 0; TKM2037 = 0; TKM2038 = 0; TKM2039 = 0; TKM2040 = 0;
    var TKM2041 = 0; TKM2042 = 0; TKM2043 = 0; TKM2044 = 0; TKM2045 = 0; TKM2046 = 0; TKM2047 = 0; TKM2048 = 0; TKM2049 = 0; TKM2050 = 0; TKM2051 = 0; TKM2052 = 0; TKM2053 = 0; TKM2054 = 0; TKM2055 = 0; TKM2056 = 0; TKM2057 = 0; TKM2058 = 0; TKM2059 = 0; TKM2060 = 0;
    for (var d = 0; d < nilaibaru.M20.length; d++) { 
        TKM201 = TKM201 + Mhs20.MK201[d]; TKM202 = TKM202 + Mhs20.MK202[d]; TKM203 = TKM203 + Mhs20.MK203[d]; TKM204 = TKM204 + Mhs20.MK204[d]; TKM205 = TKM205 + Mhs20.MK205[d]; TKM206 = TKM206 + Mhs20.MK206[d]; TKM207 = TKM207 + Mhs20.MK207[d]; TKM208 = TKM208 + Mhs20.MK208[d]; TKM209 = TKM209 + Mhs20.MK209[d]; TKM2010 = TKM2010 + Mhs20.MK2010[d];
        TKM2011 = TKM2011 + Mhs20.MK2011[d]; TKM2012 = TKM2012 + Mhs20.MK2012[d]; TKM2013 = TKM2013 + Mhs20.MK2013[d]; TKM2014 = TKM2014 + Mhs20.MK2014[d]; TKM2015 = TKM2015 + Mhs20.MK2015[d]; TKM2016 = TKM2016 + Mhs20.MK2016[d]; TKM2017 = TKM2017 + Mhs20.MK2017[d]; TKM2018 = TKM2018 + Mhs20.MK2018[d]; TKM2019 = TKM2019 + Mhs20.MK2019[d]; TKM2020 = TKM2020 + Mhs20.MK2020[d];
        TKM2021 = TKM2021 + Mhs20.MK2021[d]; TKM2022 = TKM2022 + Mhs20.MK2022[d]; TKM2023 = TKM2023 + Mhs20.MK2023[d]; TKM2024 = TKM2024 + Mhs20.MK2024[d]; TKM2025 = TKM2025 + Mhs20.MK2025[d]; TKM2026 = TKM2026 + Mhs20.MK2026[d]; TKM2027 = TKM2027 + Mhs20.MK2027[d]; TKM2028 = TKM2028 + Mhs20.MK2028[d]; TKM2029 = TKM2029 + Mhs20.MK2029[d]; TKM2030 = TKM2030 + Mhs20.MK2030[d];
    }

    // ANM = Akar Nilai Mahasiswa
    var ANM1 = 0; ANM2 = 0; ANM3 = 0; ANM4 = 0; ANM5 = 0; ANM6 = 0; ANM7 = 0; ANM8 = 0; ANM9 = 0; ANM10 = 0; ANM11 = 0; ANM12 = 0; ANM13 = 0; ANM14 = 0; ANM15 = 0; ANM16 = 0; ANM17 = 0; ANM18 = 0; ANM19 = 0; ANM20 = 0;
    var ANM21 = 0; ANM22 = 0; ANM23 = 0; ANM24 = 0; ANM25 = 0; ANM26 = 0; ANM27 = 0; ANM28 = 0; ANM29 = 0; ANM30 = 0; ANM31 = 0; ANM32 = 0; ANM33 = 0; ANM34 = 0; ANM35 = 0; ANM36 = 0; ANM37 = 0; ANM38 = 0; ANM39 = 0; ANM40 = 0;
    var ANM41 = 0; ANM42 = 0; ANM43 = 0; ANM44 = 0; ANM45 = 0; ANM46 = 0; ANM47 = 0; ANM48 = 0; ANM49 = 0; ANM50 = 0;
    
    ANM1 = Math.sqrt(TKM11); ANM2 = Math.sqrt(TKM22); ANM3 = Math.sqrt(TKM33); ANM4 = Math.sqrt(TKM44); ANM5 = Math.sqrt(TKM55); ANM6 = Math.sqrt(TKM66); ANM7 = Math.sqrt(TKM77); ANM8 = Math.sqrt(TKM88); ANM9 = Math.sqrt(TKM99); ANM10 = Math.sqrt(TKM1010);
    ANM11 = Math.sqrt(TKM1111); ANM12 = Math.sqrt(TKM1212); ANM13 = Math.sqrt(TKM1313); ANM14 = Math.sqrt(TKM1414); ANM15 = Math.sqrt(TKM1515); ANM16 = Math.sqrt(TKM1616); ANM17 = Math.sqrt(TKM1717); ANM18 = Math.sqrt(TKM1818); ANM19 = Math.sqrt(TKM1919); ANM20 = Math.sqrt(TKM2020);
        

    // perhitungan similarity + total nilai sim
    var simM11 = 0; simM12 = 0; simM13 = 0; simM14 = 0; simM15 = 0; simM16 = 0; simM17 = 0; simM18 = 0; simM19 = 0; simM110 = 0; simM111 = 0; simM112 = 0; simM113 = 0; simM114 = 0; simM115 = 0; simM116 = 0; simM117 = 0; simM118 = 0; simM119 = 0; simM120 = 0;
    var simM121 = 0; simM122 = 0; simM123 = 0; simM124 = 0; simM125 = 0; simM126 = 0; simM127 = 0; simM128 = 0; simM129 = 0; simM130 = 0; simM131 = 0; simM132 = 0; simM133 = 0; simM134 = 0; simM135 = 0; simM136 = 0; simM137 = 0; simM138 = 0; simM139 = 0; simM140 = 0;
    var simM141 = 0; simM142 = 0; simM143 = 0; simM144 = 0; simM145 = 0; simM146 = 0; simM147 = 0; simM148 = 0; simM149 = 0; simM150 = 0;
    for (var d = 0; d < nilaibaru.M1.length;d++) {
        simM11 = (TKM11/(ANM1*ANM1)); simM12 = (TKM12/(ANM1*ANM2)); simM13 = (TKM13/(ANM1*ANM3)); simM14 = (TKM14/(ANM1*ANM4)); simM15 = (TKM15/(ANM1*ANM5)); simM16 = (TKM16/(ANM1*ANM6)); simM17 = (TKM17/(ANM1*ANM7)); simM18 = (TKM18/(ANM1*ANM8)); simM19 = (TKM19/(ANM1*ANM9)); simM110 = (TKM110/(ANM1*ANM10));
        simM111 = (TKM111/(ANM1*ANM11)); simM112 = (TKM112/(ANM1*ANM12)); simM113 = (TKM113/(ANM1*ANM13)); simM114 = (TKM114/(ANM1*ANM14)); simM115 = (TKM115/(ANM1*ANM15)); simM116 = (TKM116/(ANM1*ANM16)); simM117 = (TKM117/(ANM1*ANM17)); simM118 = (TKM118/(ANM1*ANM18)); simM119 = (TKM119/(ANM1*ANM19)); simM120 = (TKM120/(ANM1*ANM20));      
    }

    var simM21 = 0; simM22 = 0; simM23 = 0; simM24 = 0; simM25 = 0; simM26 = 0; simM27 = 0; simM28 = 0; simM29 = 0; simM210 = 0; simM211 = 0; simM212 = 0; simM213 = 0; simM214 = 0; simM215 = 0; simM216 = 0; simM217 = 0; simM218 = 0; simM219 = 0; simM220 = 0;
    var simM221 = 0; simM222 = 0; simM223 = 0; simM224 = 0; simM225 = 0; simM226 = 0; simM227 = 0; simM228 = 0; simM229 = 0; simM230 = 0; simM231 = 0; simM232 = 0; simM233 = 0; simM234 = 0; simM235 = 0; simM236 = 0; simM237 = 0; simM238 = 0; simM239 = 0; simM240 = 0;
    var simM241 = 0; simM242 = 0; simM243 = 0; simM244 = 0; simM245 = 0; simM246 = 0; simM247 = 0; simM248 = 0; simM249 = 0; simM250 = 0; 
    for (var d = 0; d < nilaibaru.M2.length;d++) {
        simM21 = (TKM21/(ANM2*ANM1)); simM22 = (TKM22/(ANM2*ANM2)); simM23 = (TKM23/(ANM2*ANM3)); simM24 = (TKM24/(ANM2*ANM4)); simM25 = (TKM25/(ANM2*ANM5)); simM26 = (TKM26/(ANM2*ANM6)); simM27 = (TKM27/(ANM2*ANM7)); simM28 = (TKM28/(ANM2*ANM8)); simM29 = (TKM29/(ANM2*ANM9)); simM210 = (TKM210/(ANM2*ANM10));
        simM211 = (TKM211/(ANM2*ANM11)); simM212 = (TKM212/(ANM2*ANM12)); simM213 = (TKM213/(ANM2*ANM13)); simM214 = (TKM214/(ANM2*ANM14)); simM215 = (TKM215/(ANM2*ANM15)); simM216 = (TKM216/(ANM2*ANM16)); simM217 = (TKM217/(ANM2*ANM17)); simM218 = (TKM218/(ANM2*ANM18)); simM219 = (TKM219/(ANM2*ANM19)); simM220 = (TKM220/(ANM2*ANM20));
    }

    var simM31 = 0; simM32 = 0; simM33 = 0; simM34 = 0; simM35 = 0; simM36 = 0; simM37 = 0; simM38 = 0; simM39 = 0; simM310 = 0; simM311 = 0; simM312 = 0; simM313 = 0; simM314 = 0; simM315 = 0; simM316 = 0; simM317 = 0; simM318 = 0; simM319 = 0; simM320 = 0;
    var simM321 = 0; simM322 = 0; simM323 = 0; simM324 = 0; simM325 = 0; simM326 = 0; simM327 = 0; simM328 = 0; simM329 = 0; simM330 = 0; simM331 = 0; simM332 = 0; simM333 = 0; simM334 = 0; simM335 = 0; simM336 = 0; simM337 = 0; simM338 = 0; simM339 = 0; simM340 = 0;
    var simM341 = 0; simM342 = 0; simM343 = 0; simM344 = 0; simM345 = 0; simM346 = 0; simM347 = 0; simM348 = 0; simM349 = 0; simM350 = 0; simM351 = 0; simM352 = 0; simM353 = 0; simM354 = 0; simM355 = 0; simM356 = 0; simM357 = 0; simM358 = 0; simM359 = 0; simM360 = 0;
    for (var d = 0; d < nilaibaru.M3.length;d++) {
        simM31 = (TKM31/(ANM3*ANM1)); simM32 = (TKM32/(ANM3*ANM2)); simM33 = (TKM33/(ANM3*ANM3)); simM34 = (TKM34/(ANM3*ANM4)); simM35 = (TKM35/(ANM3*ANM5)); simM36 = (TKM36/(ANM3*ANM6)); simM37 = (TKM37/(ANM3*ANM7)); simM38 = (TKM38/(ANM3*ANM8)); simM39 = (TKM39/(ANM3*ANM9)); simM310 = (TKM310/(ANM3*ANM10));
        simM311 = (TKM311/(ANM3*ANM11)); simM312 = (TKM312/(ANM3*ANM12)); simM313 = (TKM313/(ANM3*ANM13)); simM314 = (TKM314/(ANM3*ANM14)); simM315 = (TKM315/(ANM3*ANM15)); simM316 = (TKM316/(ANM3*ANM16)); simM317 = (TKM317/(ANM3*ANM17)); simM318 = (TKM318/(ANM3*ANM18)); simM319 = (TKM319/(ANM3*ANM19)); simM320 = (TKM320/(ANM3*ANM20));
    }

    var simM41 = 0; simM42 = 0; simM43 = 0; simM44 = 0; simM45 = 0; simM46 = 0; simM47 = 0; simM48 = 0; simM49 = 0; simM410 = 0; simM411 = 0; simM412 = 0; simM413 = 0; simM414 = 0; simM415 = 0; simM416 = 0; simM417 = 0; simM418 = 0; simM419 = 0; simM420 = 0;
    var simM421 = 0; simM422 = 0; simM423 = 0; simM424 = 0; simM425 = 0; simM426 = 0; simM427 = 0; simM428 = 0; simM429 = 0; simM430 = 0; simM431 = 0; simM432 = 0; simM433 = 0; simM434 = 0; simM435 = 0; simM436 = 0; simM437 = 0; simM438 = 0; simM439 = 0; simM440 = 0;
    var simM441 = 0; simM442 = 0; simM443 = 0; simM444 = 0; simM445 = 0; simM446 = 0; simM447 = 0; simM448 = 0; simM449 = 0; simM450 = 0; simM451 = 0; simM452 = 0; simM453 = 0; simM454 = 0; simM455 = 0; simM456 = 0; simM457 = 0; simM458 = 0; simM459 = 0; simM460 = 0;
    for (var d = 0; d < nilaibaru.M4.length;d++) {
        simM41 = (TKM41/(ANM4*ANM1)); simM42 = (TKM42/(ANM4*ANM2)); simM43 = (TKM43/(ANM4*ANM3)); simM44 = (TKM44/(ANM4*ANM4)); simM45 = (TKM45/(ANM4*ANM5)); simM46 = (TKM46/(ANM4*ANM6)); simM47 = (TKM47/(ANM4*ANM7)); simM48 = (TKM48/(ANM4*ANM8)); simM49 = (TKM49/(ANM4*ANM9)); simM410 = (TKM410/(ANM4*ANM10));
        simM411 = (TKM411/(ANM4*ANM11)); simM412 = (TKM412/(ANM4*ANM12)); simM413 = (TKM413/(ANM4*ANM13)); simM414 = (TKM414/(ANM4*ANM14)); simM415 = (TKM415/(ANM4*ANM15)); simM416 = (TKM416/(ANM4*ANM16)); simM417 = (TKM417/(ANM4*ANM17)); simM418 = (TKM418/(ANM4*ANM18)); simM419 = (TKM419/(ANM4*ANM19)); simM420 = (TKM420/(ANM4*ANM20));
    }

    var simM51 = 0; simM52 = 0; simM53 = 0; simM54 = 0; simM55 = 0; simM56 = 0; simM57 = 0; simM58 = 0; simM59 = 0; simM510 = 0; simM511 = 0; simM512 = 0; simM513 = 0; simM514 = 0; simM515 = 0; simM516 = 0; simM517 = 0; simM518 = 0; simM519 = 0; simM520 = 0;
    var simM521 = 0; simM522 = 0; simM523 = 0; simM524 = 0; simM525 = 0; simM526 = 0; simM527 = 0; simM528 = 0; simM529 = 0; simM530 = 0; simM531 = 0; simM532 = 0; simM533 = 0; simM534 = 0; simM535 = 0; simM536 = 0; simM537 = 0; simM538 = 0; simM539 = 0; simM540 = 0;
    var simM541 = 0; simM542 = 0; simM543 = 0; simM544 = 0; simM545 = 0; simM546 = 0; simM547 = 0; simM548 = 0; simM549 = 0; simM550 = 0; simM551 = 0; simM552 = 0; simM553 = 0; simM554 = 0; simM555 = 0; simM556 = 0; simM557 = 0; simM558 = 0; simM559 = 0; simM560 = 0;
    for (var d = 0; d < nilaibaru.M5.length;d++) {
        simM51 = (TKM51/(ANM5*ANM1)); simM52 = (TKM52/(ANM5*ANM2)); simM53 = (TKM53/(ANM5*ANM3)); simM54 = (TKM54/(ANM5*ANM4)); simM55 = (TKM55/(ANM5*ANM5)); simM56 = (TKM56/(ANM5*ANM6)); simM57 = (TKM57/(ANM5*ANM7)); simM58 = (TKM58/(ANM5*ANM8)); simM59 = (TKM59/(ANM5*ANM9)); simM510 = (TKM510/(ANM5*ANM10));
        simM511 = (TKM511/(ANM5*ANM11)); simM512 = (TKM512/(ANM5*ANM12)); simM513 = (TKM513/(ANM5*ANM13)); simM514 = (TKM514/(ANM5*ANM14)); simM515 = (TKM515/(ANM5*ANM15)); simM516 = (TKM516/(ANM5*ANM16)); simM517 = (TKM517/(ANM5*ANM17)); simM518 = (TKM518/(ANM5*ANM18)); simM519 = (TKM519/(ANM5*ANM19)); simM520 = (TKM520/(ANM5*ANM20));
    }

    var simM61 = 0; simM62 = 0; simM63 = 0; simM64 = 0; simM65 = 0; simM66 = 0; simM67 = 0; simM68 = 0; simM69 = 0; simM610 = 0; simM611 = 0; simM612 = 0; simM613 = 0; simM614 = 0; simM615 = 0; simM616 = 0; simM617 = 0; simM618 = 0; simM619 = 0; simM620 = 0;
    var simM621 = 0; simM622 = 0; simM623 = 0; simM624 = 0; simM625 = 0; simM626 = 0; simM627 = 0; simM628 = 0; simM629 = 0; simM630 = 0; simM631 = 0; simM632 = 0; simM633 = 0; simM634 = 0; simM635 = 0; simM636 = 0; simM637 = 0; simM638 = 0; simM639 = 0; simM640 = 0;
    var simM641 = 0; simM642 = 0; simM643 = 0; simM644 = 0; simM645 = 0; simM646 = 0; simM647 = 0; simM648 = 0; simM649 = 0; simM650 = 0; simM651 = 0; simM652 = 0; simM653 = 0; simM654 = 0; simM655 = 0; simM656 = 0; simM657 = 0; simM658 = 0; simM659 = 0; simM660 = 0;
    for (var d = 0; d < nilaibaru.M6.length;d++) {
        simM61 = (TKM61/(ANM6*ANM1)); simM62 = (TKM62/(ANM6*ANM2)); simM63 = (TKM63/(ANM6*ANM3)); simM64 = (TKM64/(ANM6*ANM4)); simM65 = (TKM65/(ANM6*ANM5)); simM66 = (TKM66/(ANM6*ANM6)); simM67 = (TKM67/(ANM6*ANM7)); simM68 = (TKM68/(ANM6*ANM8)); simM69 = (TKM69/(ANM6*ANM9)); simM610 = (TKM610/(ANM6*ANM10));
        simM611 = (TKM611/(ANM6*ANM11)); simM612 = (TKM612/(ANM6*ANM12)); simM613 = (TKM613/(ANM6*ANM13)); simM614 = (TKM614/(ANM6*ANM14)); simM615 = (TKM615/(ANM6*ANM15)); simM616 = (TKM616/(ANM6*ANM16)); simM617 = (TKM617/(ANM6*ANM17)); simM618 = (TKM618/(ANM6*ANM18)); simM619 = (TKM619/(ANM6*ANM19)); simM620 = (TKM620/(ANM6*ANM20));
    }

    var simM71 = 0; simM72 = 0; simM73 = 0; simM74 = 0; simM75 = 0; simM76 = 0; simM77 = 0; simM78 = 0; simM79 = 0; simM710 = 0; simM711 = 0; simM712 = 0; simM713 = 0; simM714 = 0; simM715 = 0; simM716 = 0; simM717 = 0; simM718 = 0; simM719 = 0; simM720 = 0;
    var simM721 = 0; simM722 = 0; simM723 = 0; simM724 = 0; simM725 = 0; simM726 = 0; simM727 = 0; simM728 = 0; simM729 = 0; simM730 = 0; simM731 = 0; simM732 = 0; simM733 = 0; simM734 = 0; simM735 = 0; simM736 = 0; simM737 = 0; simM738 = 0; simM739 = 0; simM740 = 0;
    var simM741 = 0; simM742 = 0; simM743 = 0; simM744 = 0; simM745 = 0; simM746 = 0; simM747 = 0; simM748 = 0; simM749 = 0; simM750 = 0; simM751 = 0; simM752 = 0; simM753 = 0; simM754 = 0; simM755 = 0; simM756 = 0; simM757 = 0; simM758 = 0; simM759 = 0; simM760 = 0;
    for (var d = 0; d < nilaibaru.M7.length;d++) {
        simM71 = (TKM71/(ANM7*ANM1)); simM72 = (TKM72/(ANM7*ANM2)); simM73 = (TKM73/(ANM7*ANM3)); simM74 = (TKM74/(ANM7*ANM4)); simM75 = (TKM75/(ANM7*ANM5)); simM76 = (TKM76/(ANM7*ANM6)); simM77 = (TKM77/(ANM7*ANM7)); simM78 = (TKM78/(ANM7*ANM8)); simM79 = (TKM79/(ANM7*ANM9)); simM710 = (TKM710/(ANM7*ANM10));
        simM711 = (TKM711/(ANM7*ANM11)); simM712 = (TKM712/(ANM7*ANM12)); simM713 = (TKM713/(ANM7*ANM13)); simM714 = (TKM714/(ANM7*ANM14)); simM715 = (TKM715/(ANM7*ANM15)); simM716 = (TKM716/(ANM7*ANM16)); simM717 = (TKM717/(ANM7*ANM17)); simM718 = (TKM718/(ANM7*ANM18)); simM719 = (TKM719/(ANM7*ANM19)); simM720 = (TKM720/(ANM7*ANM20));
    }

    var simM81 = 0; simM82 = 0; simM83 = 0; simM84 = 0; simM85 = 0; simM86 = 0; simM87 = 0; simM88 = 0; simM89 = 0; simM810 = 0; simM811 = 0; simM812 = 0; simM813 = 0; simM814 = 0; simM815 = 0; simM816 = 0; simM817 = 0; simM818 = 0; simM819 = 0; simM820 = 0;
    var simM821 = 0; simM822 = 0; simM823 = 0; simM824 = 0; simM825 = 0; simM826 = 0; simM827 = 0; simM828 = 0; simM829 = 0; simM830 = 0; simM831 = 0; simM832 = 0; simM833 = 0; simM834 = 0; simM835 = 0; simM836 = 0; simM837 = 0; simM838 = 0; simM839 = 0; simM840 = 0;
    var simM841 = 0; simM842 = 0; simM843 = 0; simM844 = 0; simM845 = 0; simM846 = 0; simM847 = 0; simM848 = 0; simM849 = 0; simM850 = 0; simM851 = 0; simM852 = 0; simM853 = 0; simM854 = 0; simM855 = 0; simM856 = 0; simM857 = 0; simM858 = 0; simM859 = 0; simM860 = 0;
    for (var d = 0; d < nilaibaru.M8.length;d++) {
        simM81 = (TKM81/(ANM8*ANM1)); simM82 = (TKM82/(ANM8*ANM2)); simM83 = (TKM83/(ANM8*ANM3)); simM84 = (TKM84/(ANM8*ANM4)); simM85 = (TKM85/(ANM8*ANM5)); simM86 = (TKM86/(ANM8*ANM6)); simM87 = (TKM87/(ANM8*ANM7)); simM88 = (TKM88/(ANM8*ANM8)); simM89 = (TKM89/(ANM8*ANM9)); simM810 = (TKM810/(ANM8*ANM10));
        simM811 = (TKM811/(ANM8*ANM11)); simM812 = (TKM812/(ANM8*ANM12)); simM813 = (TKM813/(ANM8*ANM13)); simM814 = (TKM814/(ANM8*ANM14)); simM815 = (TKM815/(ANM8*ANM15)); simM816 = (TKM816/(ANM8*ANM16)); simM817 = (TKM817/(ANM8*ANM17)); simM818 = (TKM818/(ANM8*ANM18)); simM819 = (TKM819/(ANM8*ANM19)); simM820 = (TKM820/(ANM8*ANM20));
    }

    var simM91 = 0; simM92 = 0; simM93 = 0; simM94 = 0; simM95 = 0; simM96 = 0; simM97 = 0; simM98 = 0; simM99 = 0; simM910 = 0; simM911 = 0; simM912 = 0; simM913 = 0; simM914 = 0; simM915 = 0; simM916 = 0; simM917 = 0; simM918 = 0; simM919 = 0; simM920 = 0;
    var simM921 = 0; simM922 = 0; simM923 = 0; simM924 = 0; simM925 = 0; simM926 = 0; simM927 = 0; simM928 = 0; simM929 = 0; simM930 = 0; simM931 = 0; simM932 = 0; simM933 = 0; simM934 = 0; simM935 = 0; simM936 = 0; simM937 = 0; simM938 = 0; simM939 = 0; simM940 = 0;
    var simM941 = 0; simM942 = 0; simM943 = 0; simM944 = 0; simM945 = 0; simM946 = 0; simM947 = 0; simM948 = 0; simM949 = 0; simM950 = 0; simM951 = 0; simM952 = 0; simM953 = 0; simM954 = 0; simM955 = 0; simM956 = 0; simM957 = 0; simM958 = 0; simM959 = 0; simM960 = 0;
    for (var d = 0; d < nilaibaru.M9.length;d++) {
        simM91 = (TKM91/(ANM9*ANM1)); simM92 = (TKM92/(ANM9*ANM2)); simM93 = (TKM93/(ANM9*ANM3)); simM94 = (TKM94/(ANM9*ANM4)); simM95 = (TKM95/(ANM9*ANM5)); simM96 = (TKM96/(ANM9*ANM6)); simM97 = (TKM97/(ANM9*ANM7)); simM98 = (TKM98/(ANM9*ANM8)); simM99 = (TKM99/(ANM9*ANM9)); simM910 = (TKM910/(ANM9*ANM10));
        simM911 = (TKM911/(ANM9*ANM11)); simM912 = (TKM912/(ANM9*ANM12)); simM913 = (TKM913/(ANM9*ANM13)); simM914 = (TKM914/(ANM9*ANM14)); simM915 = (TKM915/(ANM9*ANM15)); simM916 = (TKM916/(ANM9*ANM16)); simM917 = (TKM917/(ANM9*ANM17)); simM918 = (TKM918/(ANM9*ANM18)); simM919 = (TKM919/(ANM9*ANM19)); simM920 = (TKM920/(ANM9*ANM20));
    }

    var simM101 = 0; simM102 = 0; simM103 = 0; simM104 = 0; simM105 = 0; simM106 = 0; simM107 = 0; simM108 = 0; simM109 = 0; simM1010 = 0; simM1011 = 0; simM1012 = 0; simM1013 = 0; simM1014 = 0; simM1015 = 0; simM1016 = 0; simM1017 = 0; simM1018 = 0; simM1019 = 0; simM1020 = 0;
    var simM1021 = 0; simM1022 = 0; simM1023 = 0; simM1024 = 0; simM1025 = 0; simM1026 = 0; simM1027 = 0; simM1028 = 0; simM1029 = 0; simM1030 = 0; simM1031 = 0; simM1032 = 0; simM1033 = 0; simM1034 = 0; simM1035 = 0; simM1036 = 0; simM1037 = 0; simM1038 = 0; simM1039 = 0; simM1040 = 0;
    var simM1041 = 0; simM1042 = 0; simM1043 = 0; simM1044 = 0; simM1045 = 0; simM1046 = 0; simM1047 = 0; simM1048 = 0; simM1049 = 0; simM1050 = 0; simM1051 = 0; simM1052 = 0; simM1053 = 0; simM1054 = 0; simM1055 = 0; simM1056 = 0; simM1057 = 0; simM1058 = 0; simM1059 = 0; simM1060 = 0;
    for (var d = 0; d < nilaibaru.M10.length;d++) {
        simM101 = (TKM101/(ANM10*ANM1)); simM102 = (TKM102/(ANM10*ANM2)); simM103 = (TKM103/(ANM10*ANM3)); simM104 = (TKM104/(ANM10*ANM4)); simM105 = (TKM105/(ANM10*ANM5)); simM106 = (TKM106/(ANM10*ANM6)); simM107 = (TKM107/(ANM10*ANM7)); simM108 = (TKM108/(ANM10*ANM8)); simM109 = (TKM109/(ANM10*ANM9)); simM1010 = (TKM1010/(ANM10*ANM10));
        simM1011 = (TKM1011/(ANM10*ANM11)); simM1012 = (TKM1012/(ANM10*ANM12)); simM1013 = (TKM1013/(ANM10*ANM13)); simM1014 = (TKM1014/(ANM10*ANM14)); simM1015 = (TKM1015/(ANM10*ANM15)); simM1016 = (TKM1016/(ANM10*ANM16)); simM1017 = (TKM1017/(ANM10*ANM17)); simM1018 = (TKM1018/(ANM10*ANM18)); simM1019 = (TKM1019/(ANM10*ANM19)); simM1020 = (TKM1020/(ANM10*ANM20));
    }

    var simM111 = 0; simM112 = 0; simM113 = 0; simM114 = 0; simM115 = 0; simM116 = 0; simM117 = 0; simM118 = 0; simM119 = 0; simM1110 = 0; simM1111 = 0; simM1112 = 0; simM1113 = 0; simM1114 = 0; simM1115 = 0; simM1116 = 0; simM1117 = 0; simM1118 = 0; simM1119 = 0; simM1120 = 0;
    var simM1121 = 0; simM1122 = 0; simM1123 = 0; simM1124 = 0; simM1125 = 0; simM1126 = 0; simM1127 = 0; simM1128 = 0; simM1129 = 0; simM1130 = 0; simM1131 = 0; simM1132 = 0; simM1133 = 0; simM1134 = 0; simM1135 = 0; simM1136 = 0; simM1137 = 0; simM1138 = 0; simM1139 = 0; simM1140 = 0;
    var simM1141 = 0; simM1142 = 0; simM1143 = 0; simM1144 = 0; simM1145 = 0; simM1146 = 0; simM1147 = 0; simM1148 = 0; simM1149 = 0; simM1150 = 0; simM1151 = 0; simM1152 = 0; simM1153 = 0; simM1154 = 0; simM1155 = 0; simM1156 = 0; simM1157 = 0; simM1158 = 0; simM1159 = 0; simM1160 = 0;
    for (var d = 0; d < nilaibaru.M11.length;d++) {
        simM111 = (TKM111/(ANM11*ANM1)); simM112 = (TKM112/(ANM11*ANM2)); simM113 = (TKM113/(ANM11*ANM3)); simM114 = (TKM114/(ANM11*ANM4)); simM115 = (TKM115/(ANM11*ANM5)); simM116 = (TKM116/(ANM11*ANM6)); simM117 = (TKM117/(ANM11*ANM7)); simM118 = (TKM118/(ANM11*ANM8)); simM119 = (TKM119/(ANM11*ANM9)); simM1110 = (TKM1110/(ANM11*ANM10));
        simM1111 = (TKM1111/(ANM11*ANM11)); simM1112 = (TKM1112/(ANM11*ANM12)); simM1113 = (TKM1113/(ANM11*ANM13)); simM1114 = (TKM1114/(ANM11*ANM14)); simM1115 = (TKM1115/(ANM11*ANM15)); simM1116 = (TKM1116/(ANM11*ANM16)); simM1117 = (TKM1117/(ANM11*ANM17)); simM1118 = (TKM1118/(ANM11*ANM18)); simM1119 = (TKM1119/(ANM11*ANM19)); simM1120 = (TKM1120/(ANM11*ANM20));
    }

    var simM121 = 0; simM122 = 0; simM123 = 0; simM124 = 0; simM125 = 0; simM126 = 0; simM127 = 0; simM128 = 0; simM129 = 0; simM1210 = 0; simM1211 = 0; simM1212 = 0; simM1213 = 0; simM1214 = 0; simM1215 = 0; simM1216 = 0; simM1217 = 0; simM1218 = 0; simM1219 = 0; simM1220 = 0;
    var simM1221 = 0; simM1222 = 0; simM1223 = 0; simM1224 = 0; simM1225 = 0; simM1226 = 0; simM1227 = 0; simM1228 = 0; simM1229 = 0; simM1230 = 0; simM1231 = 0; simM1232 = 0; simM1233 = 0; simM1234 = 0; simM1235 = 0; simM1236 = 0; simM1237 = 0; simM1238 = 0; simM1239 = 0; simM1240 = 0;
    var simM1241 = 0; simM1242 = 0; simM1243 = 0; simM1244 = 0; simM1245 = 0; simM1246 = 0; simM1247 = 0; simM1248 = 0; simM1249 = 0; simM1250 = 0; simM1251 = 0; simM1252 = 0; simM1253 = 0; simM1254 = 0; simM1255 = 0; simM1256 = 0; simM1257 = 0; simM1258 = 0; simM1259 = 0; simM1260 = 0;
    for (var d = 0; d < nilaibaru.M12.length;d++) {
        simM121 = (TKM121/(ANM12*ANM1)); simM122 = (TKM122/(ANM12*ANM2)); simM123 = (TKM123/(ANM12*ANM3)); simM124 = (TKM124/(ANM12*ANM4)); simM125 = (TKM125/(ANM12*ANM5)); simM126 = (TKM126/(ANM12*ANM6)); simM127 = (TKM127/(ANM12*ANM7)); simM128 = (TKM128/(ANM12*ANM8)); simM129 = (TKM129/(ANM12*ANM9)); simM1210 = (TKM1210/(ANM12*ANM10));
        simM1211 = (TKM1211/(ANM12*ANM11)); simM1212 = (TKM1212/(ANM12*ANM12)); simM1213 = (TKM1213/(ANM12*ANM13)); simM1214 = (TKM1214/(ANM12*ANM14)); simM1215 = (TKM1215/(ANM12*ANM15)); simM1216 = (TKM1216/(ANM12*ANM16)); simM1217 = (TKM1217/(ANM12*ANM17)); simM1218 = (TKM1218/(ANM12*ANM18)); simM1219 = (TKM1219/(ANM12*ANM19)); simM1220 = (TKM1220/(ANM12*ANM20));
    }

    var simM131 = 0; simM132 = 0; simM133 = 0; simM134 = 0; simM135 = 0; simM136 = 0; simM137 = 0; simM138 = 0; simM139 = 0; simM1310 = 0; simM1311 = 0; simM1312 = 0; simM1313 = 0; simM1314 = 0; simM1315 = 0; simM1316 = 0; simM1317 = 0; simM1318 = 0; simM1319 = 0; simM1320 = 0;
    var simM1321 = 0; simM1322 = 0; simM1323 = 0; simM1324 = 0; simM1325 = 0; simM1326 = 0; simM1327 = 0; simM1328 = 0; simM1329 = 0; simM1330 = 0; simM1331 = 0; simM1332 = 0; simM1333 = 0; simM1334 = 0; simM1335 = 0; simM1336 = 0; simM1337 = 0; simM1338 = 0; simM1339 = 0; simM1340 = 0;
    var simM1341 = 0; simM1342 = 0; simM1343 = 0; simM1344 = 0; simM1345 = 0; simM1346 = 0; simM1347 = 0; simM1348 = 0; simM1349 = 0; simM1350 = 0; simM1351 = 0; simM1352 = 0; simM1353 = 0; simM1354 = 0; simM1355 = 0; simM1356 = 0; simM1357 = 0; simM1358 = 0; simM1359 = 0; simM1360 = 0;
    for (var d = 0; d < nilaibaru.M13.length;d++) {
        simM131 = (TKM131/(ANM13*ANM1)); simM132 = (TKM132/(ANM13*ANM2)); simM133 = (TKM133/(ANM13*ANM3)); simM134 = (TKM134/(ANM13*ANM4)); simM135 = (TKM135/(ANM13*ANM5)); simM136 = (TKM136/(ANM13*ANM6)); simM137 = (TKM137/(ANM13*ANM7)); simM138 = (TKM138/(ANM13*ANM8)); simM139 = (TKM139/(ANM13*ANM9)); simM1310 = (TKM1310/(ANM13*ANM10));
        simM1311 = (TKM1311/(ANM13*ANM11)); simM1312 = (TKM1312/(ANM13*ANM12)); simM1313 = (TKM1313/(ANM13*ANM13)); simM1314 = (TKM1314/(ANM13*ANM14)); simM1315 = (TKM1315/(ANM13*ANM15)); simM1316 = (TKM1316/(ANM13*ANM16)); simM1317 = (TKM1317/(ANM13*ANM17)); simM1318 = (TKM1318/(ANM13*ANM18)); simM1319 = (TKM1319/(ANM13*ANM19)); simM1320 = (TKM1320/(ANM13*ANM20));
    }

    var simM141 = 0; simM142 = 0; simM143 = 0; simM144 = 0; simM145 = 0; simM146 = 0; simM147 = 0; simM148 = 0; simM149 = 0; simM1410 = 0; simM1411 = 0; simM1412 = 0; simM1413 = 0; simM1414 = 0; simM1415 = 0; simM1416 = 0; simM1417 = 0; simM1418 = 0; simM1419 = 0; simM1420 = 0;
    var simM1421 = 0; simM1422 = 0; simM1423 = 0; simM1424 = 0; simM1425 = 0; simM1426 = 0; simM1427 = 0; simM1428 = 0; simM1429 = 0; simM1430 = 0; simM1431 = 0; simM1432 = 0; simM1433 = 0; simM1434 = 0; simM1435 = 0; simM1436 = 0; simM1437 = 0; simM1438 = 0; simM1439 = 0; simM1440 = 0;
    var simM1441 = 0; simM1442 = 0; simM1443 = 0; simM1444 = 0; simM1445 = 0; simM1446 = 0; simM1447 = 0; simM1448 = 0; simM1449 = 0; simM1450 = 0; simM1451 = 0; simM1452 = 0; simM1453 = 0; simM1454 = 0; simM1455 = 0; simM1456 = 0; simM1457 = 0; simM1458 = 0; simM1459 = 0; simM1460 = 0;
    for (var d = 0; d < nilaibaru.M14.length;d++) {
        simM141 = (TKM141/(ANM14*ANM1)); simM142 = (TKM142/(ANM14*ANM2)); simM143 = (TKM143/(ANM14*ANM3)); simM144 = (TKM144/(ANM14*ANM4)); simM145 = (TKM145/(ANM14*ANM5)); simM146 = (TKM146/(ANM14*ANM6)); simM147 = (TKM147/(ANM14*ANM7)); simM148 = (TKM148/(ANM14*ANM8)); simM149 = (TKM149/(ANM14*ANM9)); simM1410 = (TKM1410/(ANM14*ANM10));
        simM1411 = (TKM1411/(ANM14*ANM11)); simM1412 = (TKM1412/(ANM14*ANM12)); simM1413 = (TKM1413/(ANM14*ANM13)); simM1414 = (TKM1414/(ANM14*ANM14)); simM1415 = (TKM1415/(ANM14*ANM15)); simM1416 = (TKM1416/(ANM14*ANM16)); simM1417 = (TKM1417/(ANM14*ANM17)); simM1418 = (TKM1418/(ANM14*ANM18)); simM1419 = (TKM1419/(ANM14*ANM19)); simM1420 = (TKM1420/(ANM14*ANM20));
    }

    var simM151 = 0; simM152 = 0; simM153 = 0; simM154 = 0; simM155 = 0; simM156 = 0; simM157 = 0; simM158 = 0; simM159 = 0; simM1510 = 0; simM1511 = 0; simM1512 = 0; simM1513 = 0; simM1514 = 0; simM1515 = 0; simM1516 = 0; simM1517 = 0; simM1518 = 0; simM1519 = 0; simM1520 = 0;
    var simM1521 = 0; simM1522 = 0; simM1523 = 0; simM1524 = 0; simM1525 = 0; simM1526 = 0; simM1527 = 0; simM1528 = 0; simM1529 = 0; simM1530 = 0; simM1531 = 0; simM1532 = 0; simM1533 = 0; simM1534 = 0; simM1535 = 0; simM1536 = 0; simM1537 = 0; simM1538 = 0; simM1539 = 0; simM1540 = 0;
    var simM1541 = 0; simM1542 = 0; simM1543 = 0; simM1544 = 0; simM1545 = 0; simM1546 = 0; simM1547 = 0; simM1548 = 0; simM1549 = 0; simM1550 = 0; simM1551 = 0; simM1552 = 0; simM1553 = 0; simM1554 = 0; simM1555 = 0; simM1556 = 0; simM1557 = 0; simM1558 = 0; simM1559 = 0; simM1560 = 0;
    for (var d = 0; d < nilaibaru.M15.length;d++) {
        simM151 = (TKM151/(ANM15*ANM1)); simM152 = (TKM152/(ANM15*ANM2)); simM153 = (TKM153/(ANM15*ANM3)); simM154 = (TKM154/(ANM15*ANM4)); simM155 = (TKM155/(ANM15*ANM5)); simM156 = (TKM156/(ANM15*ANM6)); simM157 = (TKM157/(ANM15*ANM7)); simM158 = (TKM158/(ANM15*ANM8)); simM159 = (TKM159/(ANM15*ANM9)); simM1510 = (TKM1510/(ANM15*ANM10));
        simM1511 = (TKM1511/(ANM15*ANM11)); simM1512 = (TKM1512/(ANM15*ANM12)); simM1513 = (TKM1513/(ANM15*ANM13)); simM1514 = (TKM1514/(ANM15*ANM14)); simM1515 = (TKM1515/(ANM15*ANM15)); simM1516 = (TKM1516/(ANM15*ANM16)); simM1517 = (TKM1517/(ANM15*ANM17)); simM1518 = (TKM1518/(ANM15*ANM18)); simM1519 = (TKM1519/(ANM15*ANM19)); simM1520 = (TKM1520/(ANM15*ANM20));
    }

    var simM161 = 0; simM162 = 0; simM163 = 0; simM164 = 0; simM165 = 0; simM166 = 0; simM167 = 0; simM168 = 0; simM169 = 0; simM1610 = 0; simM1611 = 0; simM1612 = 0; simM1613 = 0; simM1614 = 0; simM1615 = 0; simM1616 = 0; simM1617 = 0; simM1618 = 0; simM1619 = 0; simM1620 = 0;
    var simM1621 = 0; simM1622 = 0; simM1623 = 0; simM1624 = 0; simM1625 = 0; simM1626 = 0; simM1627 = 0; simM1628 = 0; simM1629 = 0; simM1630 = 0; simM1631 = 0; simM1632 = 0; simM1633 = 0; simM1634 = 0; simM1635 = 0; simM1636 = 0; simM1637 = 0; simM1638 = 0; simM1639 = 0; simM1640 = 0;
    var simM1641 = 0; simM1642 = 0; simM1643 = 0; simM1644 = 0; simM1645 = 0; simM1646 = 0; simM1647 = 0; simM1648 = 0; simM1649 = 0; simM1650 = 0; simM1651 = 0; simM1652 = 0; simM1653 = 0; simM1654 = 0; simM1655 = 0; simM1656 = 0; simM1657 = 0; simM1658 = 0; simM1659 = 0; simM1660 = 0;
    for (var d = 0; d < nilaibaru.M16.length;d++) {
        simM161 = (TKM161/(ANM16*ANM1)); simM162 = (TKM162/(ANM16*ANM2)); simM163 = (TKM163/(ANM16*ANM3)); simM164 = (TKM164/(ANM16*ANM4)); simM165 = (TKM165/(ANM16*ANM5)); simM166 = (TKM166/(ANM16*ANM6)); simM167 = (TKM167/(ANM16*ANM7)); simM168 = (TKM168/(ANM16*ANM8)); simM169 = (TKM169/(ANM16*ANM9)); simM1610 = (TKM1610/(ANM16*ANM10));
        simM1611 = (TKM1611/(ANM16*ANM11)); simM1612 = (TKM1612/(ANM16*ANM12)); simM1613 = (TKM1613/(ANM16*ANM13)); simM1614 = (TKM1614/(ANM16*ANM14)); simM1615 = (TKM1615/(ANM16*ANM15)); simM1616 = (TKM1616/(ANM16*ANM16)); simM1617 = (TKM1617/(ANM16*ANM17)); simM1618 = (TKM1618/(ANM16*ANM18)); simM1619 = (TKM1619/(ANM16*ANM19)); simM1620 = (TKM1620/(ANM16*ANM20));
    }

    var simM171 = 0; simM172 = 0; simM173 = 0; simM174 = 0; simM175 = 0; simM176 = 0; simM177 = 0; simM178 = 0; simM179 = 0; simM1710 = 0; simM1711 = 0; simM1712 = 0; simM1713 = 0; simM1714 = 0; simM1715 = 0; simM1716 = 0; simM1717 = 0; simM1718 = 0; simM1719 = 0; simM1720 = 0;
    var simM1721 = 0; simM1722 = 0; simM1723 = 0; simM1724 = 0; simM1725 = 0; simM1726 = 0; simM1727 = 0; simM1728 = 0; simM1729 = 0; simM1730 = 0; simM1731 = 0; simM1732 = 0; simM1733 = 0; simM1734 = 0; simM1735 = 0; simM1736 = 0; simM1737 = 0; simM1738 = 0; simM1739 = 0; simM1740 = 0;
    var simM1741 = 0; simM1742 = 0; simM1743 = 0; simM1744 = 0; simM1745 = 0; simM1746 = 0; simM1747 = 0; simM1748 = 0; simM1749 = 0; simM1750 = 0; simM1751 = 0; simM1752 = 0; simM1753 = 0; simM1754 = 0; simM1755 = 0; simM1756 = 0; simM1757 = 0; simM1758 = 0; simM1759 = 0; simM1760 = 0;
    for (var d = 0; d < nilaibaru.M17.length;d++) {
        simM171 = (TKM171/(ANM17*ANM1)); simM172 = (TKM172/(ANM17*ANM2)); simM173 = (TKM173/(ANM17*ANM3)); simM174 = (TKM174/(ANM17*ANM4)); simM175 = (TKM175/(ANM17*ANM5)); simM176 = (TKM176/(ANM17*ANM6)); simM177 = (TKM177/(ANM17*ANM7)); simM178 = (TKM178/(ANM17*ANM8)); simM179 = (TKM179/(ANM17*ANM9)); simM1710 = (TKM1710/(ANM17*ANM10));
        simM1711 = (TKM1711/(ANM17*ANM11)); simM1712 = (TKM1712/(ANM17*ANM12)); simM1713 = (TKM1713/(ANM17*ANM13)); simM1714 = (TKM1714/(ANM17*ANM14)); simM1715 = (TKM1715/(ANM17*ANM15)); simM1716 = (TKM1716/(ANM17*ANM16)); simM1717 = (TKM1717/(ANM17*ANM17)); simM1718 = (TKM1718/(ANM17*ANM18)); simM1719 = (TKM1719/(ANM17*ANM19)); simM1720 = (TKM1720/(ANM17*ANM20));
    }

    var simM181 = 0; simM182 = 0; simM183 = 0; simM184 = 0; simM185 = 0; simM186 = 0; simM187 = 0; simM188 = 0; simM189 = 0; simM1810 = 0; simM1811 = 0; simM1812 = 0; simM1813 = 0; simM1814 = 0; simM1815 = 0; simM1816 = 0; simM1817 = 0; simM1818 = 0; simM1819 = 0; simM1820 = 0;
    var simM1821 = 0; simM1822 = 0; simM1823 = 0; simM1824 = 0; simM1825 = 0; simM1826 = 0; simM1827 = 0; simM1828 = 0; simM1829 = 0; simM1830 = 0; simM1831 = 0; simM1832 = 0; simM1833 = 0; simM1834 = 0; simM1835 = 0; simM1836 = 0; simM1837 = 0; simM1838 = 0; simM1839 = 0; simM1840 = 0;
    var simM1841 = 0; simM1842 = 0; simM1843 = 0; simM1844 = 0; simM1845 = 0; simM1846 = 0; simM1847 = 0; simM1848 = 0; simM1849 = 0; simM1850 = 0; simM1851 = 0; simM1852 = 0; simM1853 = 0; simM1854 = 0; simM1855 = 0; simM1856 = 0; simM1857 = 0; simM1858 = 0; simM1859 = 0; simM1860 = 0;
    for (var d = 0; d < nilaibaru.M18.length;d++) {
        simM181 = (TKM181/(ANM18*ANM1)); simM182 = (TKM182/(ANM18*ANM2)); simM183 = (TKM183/(ANM18*ANM3)); simM184 = (TKM184/(ANM18*ANM4)); simM185 = (TKM185/(ANM18*ANM5)); simM186 = (TKM186/(ANM18*ANM6)); simM187 = (TKM187/(ANM18*ANM7)); simM188 = (TKM188/(ANM18*ANM8)); simM189 = (TKM189/(ANM18*ANM9)); simM1810 = (TKM1810/(ANM18*ANM10));
        simM1811 = (TKM1811/(ANM18*ANM11)); simM1812 = (TKM1812/(ANM18*ANM12)); simM1813 = (TKM1813/(ANM18*ANM13)); simM1814 = (TKM1814/(ANM18*ANM14)); simM1815 = (TKM1815/(ANM18*ANM15)); simM1816 = (TKM1816/(ANM18*ANM16)); simM1817 = (TKM1817/(ANM18*ANM17)); simM1818 = (TKM1818/(ANM18*ANM18)); simM1819 = (TKM1819/(ANM18*ANM19)); simM1820 = (TKM1820/(ANM18*ANM20));
    }

    var simM191 = 0; simM192 = 0; simM193 = 0; simM194 = 0; simM195 = 0; simM196 = 0; simM197 = 0; simM198 = 0; simM199 = 0; simM1910 = 0; simM1911 = 0; simM1912 = 0; simM1913 = 0; simM1914 = 0; simM1915 = 0; simM1916 = 0; simM1917 = 0; simM1918 = 0; simM1919 = 0; simM1920 = 0;
    var simM1921 = 0; simM1922 = 0; simM1923 = 0; simM1924 = 0; simM1925 = 0; simM1926 = 0; simM1927 = 0; simM1928 = 0; simM1929 = 0; simM1930 = 0; simM1931 = 0; simM1932 = 0; simM1933 = 0; simM1934 = 0; simM1935 = 0; simM1936 = 0; simM1937 = 0; simM1938 = 0; simM1939 = 0; simM1940 = 0;
    var simM1941 = 0; simM1942 = 0; simM1943 = 0; simM1944 = 0; simM1945 = 0; simM1946 = 0; simM1947 = 0; simM1948 = 0; simM1949 = 0; simM1950 = 0; simM1951 = 0; simM1952 = 0; simM1953 = 0; simM1954 = 0; simM1955 = 0; simM1956 = 0; simM1957 = 0; simM1958 = 0; simM1959 = 0; simM1960 = 0;
    for (var d = 0; d < nilaibaru.M19.length;d++) {
        simM191 = (TKM191/(ANM19*ANM1)); simM192 = (TKM192/(ANM19*ANM2)); simM193 = (TKM193/(ANM19*ANM3)); simM194 = (TKM194/(ANM19*ANM4)); simM195 = (TKM195/(ANM19*ANM5)); simM196 = (TKM196/(ANM19*ANM6)); simM197 = (TKM197/(ANM19*ANM7)); simM198 = (TKM198/(ANM19*ANM8)); simM199 = (TKM199/(ANM19*ANM9)); simM1910 = (TKM1910/(ANM19*ANM10));
        simM1911 = (TKM1911/(ANM19*ANM11)); simM1912 = (TKM1912/(ANM19*ANM12)); simM1913 = (TKM1913/(ANM19*ANM13)); simM1914 = (TKM1914/(ANM19*ANM14)); simM1915 = (TKM1915/(ANM19*ANM15)); simM1916 = (TKM1916/(ANM19*ANM16)); simM1917 = (TKM1917/(ANM19*ANM17)); simM1918 = (TKM1918/(ANM19*ANM18)); simM1919 = (TKM1919/(ANM19*ANM19)); simM1920 = (TKM1920/(ANM19*ANM20));
    }

    var simM201 = 0; simM202 = 0; simM203 = 0; simM204 = 0; simM205 = 0; simM206 = 0; simM207 = 0; simM208 = 0; simM209 = 0; simM2010 = 0; simM2011 = 0; simM2012 = 0; simM2013 = 0; simM2014 = 0; simM2015 = 0; simM2016 = 0; simM2017 = 0; simM2018 = 0; simM2019 = 0; simM2020 = 0;
    var simM2021 = 0; simM2022 = 0; simM2023 = 0; simM2024 = 0; simM2025 = 0; simM2026 = 0; simM2027 = 0; simM2028 = 0; simM2029 = 0; simM2030 = 0; simM2031 = 0; simM2032 = 0; simM2033 = 0; simM2034 = 0; simM2035 = 0; simM2036 = 0; simM2037 = 0; simM2038 = 0; simM2039 = 0; simM2040 = 0;
    var simM2041 = 0; simM2042 = 0; simM2043 = 0; simM2044 = 0; simM2045 = 0; simM2046 = 0; simM2047 = 0; simM2048 = 0; simM2049 = 0; simM2050 = 0; simM2051 = 0; simM2052 = 0; simM2053 = 0; simM2054 = 0; simM2055 = 0; simM2056 = 0; simM2057 = 0; simM2058 = 0; simM2059 = 0; simM2060 = 0;
    for (var d = 0; d < nilaibaru.M20.length;d++) {
        simM201 = (TKM201/(ANM20*ANM1)); simM202 = (TKM202/(ANM20*ANM2)); simM203 = (TKM203/(ANM20*ANM3)); simM204 = (TKM204/(ANM20*ANM4)); simM205 = (TKM205/(ANM20*ANM5)); simM206 = (TKM206/(ANM20*ANM6)); simM207 = (TKM207/(ANM20*ANM7)); simM208 = (TKM208/(ANM20*ANM8)); simM209 = (TKM209/(ANM20*ANM9)); simM2010 = (TKM2010/(ANM20*ANM10));
        simM2011 = (TKM2011/(ANM20*ANM11)); simM2012 = (TKM2012/(ANM20*ANM12)); simM2013 = (TKM2013/(ANM20*ANM13)); simM2014 = (TKM2014/(ANM20*ANM14)); simM2015 = (TKM2015/(ANM20*ANM15)); simM2016 = (TKM2016/(ANM20*ANM16)); simM2017 = (TKM2017/(ANM20*ANM17)); simM2018 = (TKM2018/(ANM20*ANM18)); simM2019 = (TKM2019/(ANM20*ANM19)); simM2020 = (TKM2020/(ANM20*ANM20));
    }

    // TSM = Total Similarity - Kebawah Hanya 9 Nilai !!!!!
    var TSM1 = 0; TSM2 = 0; TSM3 = 0; TSM4 = 0; TSM5 = 0; TSM6 = 0; TSM7 = 0; TSM8 = 0; TSM9 = 0; TSM10 = 0; TSM11 = 0; TSM12 = 0; TSM13 = 0; TSM14 = 0;
    var TSM11 = 0; TSM12 = 0; TSM13 = 0; TSM14 = 0; TSM15 = 0; TSM16 = 0; TSM17 = 0; TSM18 = 0; TSM19 = 0; TSM20 = 0; TSM21 = 0; TSM22 = 0; TSM23 = 0; TSM24 = 0; 
    var TSM25 = 0; TSM26 = 0; TSM27 = 0; TSM28 = 0; TSM29 = 0; TSM30 = 0;

    TSM1 = Math.ceil(simM11 + simM12 + simM13 + simM14 + simM15 + simM16 + simM17 + simM18 + simM19 + simM110 + simM111 + simM112 + simM113 + simM114 + simM115 + simM116 + simM117 + simM118 + simM119 + simM120);
    TSM2 = Math.ceil(simM21 + simM22 + simM23 + simM24 + simM25 + simM26 + simM27 + simM28 + simM29 + simM210 + simM211 + simM212 + simM213 + simM214 + simM215 + simM216 + simM217 + simM218 + simM219 + simM220);
    TSM3 = Math.ceil(simM31 + simM32 + simM33 + simM34 + simM35 + simM36 + simM37 + simM38 + simM39 + simM310 + simM311 + simM312 + simM313 + simM314 + simM315 + simM316 + simM317 + simM318 + simM319 + simM320);
    TSM4 = Math.ceil(simM41 + simM42 + simM43 + simM44 + simM45 + simM46 + simM47 + simM48 + simM49 + simM410 + simM411 + simM412 + simM413 + simM414 + simM415 + simM416 + simM417 + simM418 + simM419 + simM420);
    TSM5 = Math.ceil(simM51 + simM52 + simM53 + simM54 + simM55 + simM56 + simM57 + simM58 + simM59 + simM510 + simM511 + simM512 + simM513 + simM514 + simM515 + simM516 + simM517 + simM518 + simM519 + simM520);
    TSM6 = Math.ceil(simM61 + simM62 + simM63 + simM64 + simM65 + simM66 + simM67 + simM68 + simM69 + simM610 + simM611 + simM612 + simM613 + simM614 + simM615 + simM616 + simM617 + simM618 + simM619 + simM620);
    TSM7 = Math.ceil(simM71 + simM72 + simM73 + simM74 + simM75 + simM76 + simM77 + simM78 + simM79 + simM710 + simM711 + simM712 + simM713 + simM714 + simM715 + simM716 + simM717 + simM718 + simM719 + simM720);
    TSM8 = Math.ceil(simM81 + simM82 + simM83 + simM84 + simM85 + simM86 + simM87 + simM88 + simM89 + simM810 + simM811 + simM812 + simM813 + simM814 + simM815 + simM816 + simM817 + simM818 + simM819 + simM820);
    TSM9 = Math.ceil(simM91 + simM92 + simM93 + simM94 + simM95 + simM96 + simM97 + simM98 + simM99 + simM910 + simM911 + simM912 + simM913 + simM914 + simM915 + simM916 + simM917 + simM918 + simM919 + simM920);
    TSM10 = Math.ceil(simM101 + simM102 + simM103 + simM104 + simM105 + simM106 + simM107 + simM108 + simM109 + simM1010 + simM1011 + simM1012 + simM1013 + simM1014 + simM1015 + simM1016 + simM1017 + simM1018 + simM1019 + simM1020);
    TSM11 = Math.ceil(simM111 + simM112 + simM113 + simM114 + simM115 + simM116 + simM117 + simM118 + simM119 + simM1110 + simM1111 + simM1112 + simM1113 + simM1114 + simM1115 + simM1116 + simM1117 + simM1118 + simM1119 + simM1120);
    TSM12 = Math.ceil(simM121 + simM122 + simM123 + simM124 + simM125 + simM126 + simM127 + simM128 + simM129 + simM1210 + simM1211 + simM1212 + simM1213 + simM1214 + simM1215 + simM1216 + simM1217 + simM1218 + simM1219 + simM1220);
    TSM13 = Math.ceil(simM131 + simM132 + simM133 + simM134 + simM135 + simM136 + simM137 + simM138 + simM139 + simM1310 + simM1311 + simM1312 + simM1313 + simM1314 + simM1315 + simM1316 + simM1317 + simM1318 + simM1319 + simM1320);
    TSM14 = Math.ceil(simM141 + simM142 + simM143 + simM144 + simM145 + simM146 + simM147 + simM148 + simM149 + simM1410 + simM1411 + simM1412 + simM1413 + simM1414 + simM1415 + simM1416 + simM1417 + simM1418 + simM1419 + simM1420);



    // pNM = prediksi nilai mahasiswa 
    var pNM11 = 0; var pNM12 = 0; var pNM13 = 0; var pNM14 = 0; var pNM15 = 0; var pNM16 = 0; var pNM17 = 0; var pNM18 = 0; var pNM19 = 0;
  
    pNM11 = ((nilaibaru.M1[0] * simM11) + (nilaibaru.M2[0] * simM12) + (nilaibaru.M3[0] * simM13) + (nilaibaru.M4[0] * simM14) + (nilaibaru.M5[0] * simM15) + (nilaibaru.M6[0] * simM16) + (nilaibaru.M7[0] * simM17) + (nilaibaru.M8[0] * simM18) + (nilaibaru.M9[0] * simM19) + (nilaibaru.M10[0] * simM110) + (nilaibaru.M11[0] * simM111) + (nilaibaru.M12[0] * simM112) + (nilaibaru.M13[0] * simM113) + (nilaibaru.M14[0] * simM114) + (nilaibaru.M15[0] * simM115) + (nilaibaru.M16[0] * simM116) + (nilaibaru.M17[0] * simM117) + (nilaibaru.M18[0] * simM118) + (nilaibaru.M19[0] * simM119) + (nilaibaru.M20[0] * simM120));
    pNM12 = ((nilaibaru.M1[1] * simM11) + (nilaibaru.M2[1] * simM12) + (nilaibaru.M3[1] * simM13) + (nilaibaru.M4[1] * simM14) + (nilaibaru.M5[1] * simM15) + (nilaibaru.M6[1] * simM16) + (nilaibaru.M7[1] * simM17) + (nilaibaru.M8[1] * simM18) + (nilaibaru.M9[1] * simM19) + (nilaibaru.M10[1] * simM110) + (nilaibaru.M11[1] * simM111) + (nilaibaru.M12[1] * simM112) + (nilaibaru.M13[1] * simM113) + (nilaibaru.M14[1] * simM114) + (nilaibaru.M15[1] * simM115) + (nilaibaru.M16[1] * simM116) + (nilaibaru.M17[1] * simM117) + (nilaibaru.M18[1] * simM118) + (nilaibaru.M19[1] * simM119) + (nilaibaru.M20[1] * simM120));
    pNM13 = ((nilaibaru.M1[2] * simM11) + (nilaibaru.M2[2] * simM12) + (nilaibaru.M3[2] * simM13) + (nilaibaru.M4[2] * simM14) + (nilaibaru.M5[2] * simM15) + (nilaibaru.M6[2] * simM16) + (nilaibaru.M7[2] * simM17) + (nilaibaru.M8[2] * simM18) + (nilaibaru.M9[2] * simM19) + (nilaibaru.M10[2] * simM110) + (nilaibaru.M11[2] * simM111) + (nilaibaru.M12[2] * simM112) + (nilaibaru.M13[2] * simM113) + (nilaibaru.M14[2] * simM114) + (nilaibaru.M15[2] * simM115) + (nilaibaru.M16[2] * simM116) + (nilaibaru.M17[2] * simM117) + (nilaibaru.M18[2] * simM118) + (nilaibaru.M19[2] * simM119) + (nilaibaru.M20[2] * simM120));
    pNM14 = ((nilaibaru.M1[3] * simM11) + (nilaibaru.M2[3] * simM12) + (nilaibaru.M3[3] * simM13) + (nilaibaru.M4[3] * simM14) + (nilaibaru.M5[3] * simM15) + (nilaibaru.M6[3] * simM16) + (nilaibaru.M7[3] * simM17) + (nilaibaru.M8[3] * simM18) + (nilaibaru.M9[3] * simM19) + (nilaibaru.M10[3] * simM110) + (nilaibaru.M11[3] * simM111) + (nilaibaru.M12[3] * simM112) + (nilaibaru.M13[3] * simM113) + (nilaibaru.M14[3] * simM114) + (nilaibaru.M15[3] * simM115) + (nilaibaru.M16[3] * simM116) + (nilaibaru.M17[3] * simM117) + (nilaibaru.M18[3] * simM118) + (nilaibaru.M19[3] * simM119) + (nilaibaru.M20[3] * simM120));
    pNM15 = ((nilaibaru.M1[4] * simM11) + (nilaibaru.M2[4] * simM12) + (nilaibaru.M3[4] * simM13) + (nilaibaru.M4[4] * simM14) + (nilaibaru.M5[4] * simM15) + (nilaibaru.M6[4] * simM16) + (nilaibaru.M7[4] * simM17) + (nilaibaru.M8[4] * simM18) + (nilaibaru.M9[4] * simM19) + (nilaibaru.M10[4] * simM110) + (nilaibaru.M11[4] * simM111) + (nilaibaru.M12[4] * simM112) + (nilaibaru.M13[4] * simM113) + (nilaibaru.M14[4] * simM114) + (nilaibaru.M15[4] * simM115) + (nilaibaru.M16[4] * simM116) + (nilaibaru.M17[4] * simM117) + (nilaibaru.M18[4] * simM118) + (nilaibaru.M19[4] * simM119) + (nilaibaru.M20[4] * simM120));
    pNM16 = ((nilaibaru.M1[5] * simM11) + (nilaibaru.M2[5] * simM12) + (nilaibaru.M3[5] * simM13) + (nilaibaru.M4[5] * simM14) + (nilaibaru.M5[5] * simM15) + (nilaibaru.M6[5] * simM16) + (nilaibaru.M7[5] * simM17) + (nilaibaru.M8[5] * simM18) + (nilaibaru.M9[5] * simM19) + (nilaibaru.M10[5] * simM110) + (nilaibaru.M11[5] * simM111) + (nilaibaru.M12[5] * simM112) + (nilaibaru.M13[5] * simM113) + (nilaibaru.M14[5] * simM114) + (nilaibaru.M15[5] * simM115) + (nilaibaru.M16[5] * simM116) + (nilaibaru.M17[5] * simM117) + (nilaibaru.M18[5] * simM118) + (nilaibaru.M19[5] * simM119) + (nilaibaru.M20[5] * simM120));
    pNM17 = ((nilaibaru.M1[6] * simM11) + (nilaibaru.M2[6] * simM12) + (nilaibaru.M3[6] * simM13) + (nilaibaru.M4[6] * simM14) + (nilaibaru.M5[6] * simM15) + (nilaibaru.M6[6] * simM16) + (nilaibaru.M7[6] * simM17) + (nilaibaru.M8[6] * simM18) + (nilaibaru.M9[6] * simM19) + (nilaibaru.M10[6] * simM110) + (nilaibaru.M11[6] * simM111) + (nilaibaru.M12[6] * simM112) + (nilaibaru.M13[6] * simM113) + (nilaibaru.M14[6] * simM114) + (nilaibaru.M15[6] * simM115) + (nilaibaru.M16[6] * simM116) + (nilaibaru.M17[6] * simM117) + (nilaibaru.M18[6] * simM118) + (nilaibaru.M19[6] * simM119) + (nilaibaru.M20[6] * simM120));
    pNM18 = ((nilaibaru.M1[7] * simM11) + (nilaibaru.M2[7] * simM12) + (nilaibaru.M3[7] * simM13) + (nilaibaru.M4[7] * simM14) + (nilaibaru.M5[7] * simM15) + (nilaibaru.M6[7] * simM16) + (nilaibaru.M7[7] * simM17) + (nilaibaru.M8[7] * simM18) + (nilaibaru.M9[7] * simM19) + (nilaibaru.M10[7] * simM110) + (nilaibaru.M11[7] * simM111) + (nilaibaru.M12[7] * simM112) + (nilaibaru.M13[7] * simM113) + (nilaibaru.M14[7] * simM114) + (nilaibaru.M15[7] * simM115) + (nilaibaru.M16[7] * simM116) + (nilaibaru.M17[7] * simM117) + (nilaibaru.M18[7] * simM118) + (nilaibaru.M19[7] * simM119) + (nilaibaru.M20[7] * simM120));
    pNM19 = ((nilaibaru.M1[8] * simM11) + (nilaibaru.M2[8] * simM12) + (nilaibaru.M3[8] * simM13) + (nilaibaru.M4[8] * simM14) + (nilaibaru.M5[8] * simM15) + (nilaibaru.M6[8] * simM16) + (nilaibaru.M7[8] * simM17) + (nilaibaru.M8[8] * simM18) + (nilaibaru.M9[8] * simM19) + (nilaibaru.M10[8] * simM110) + (nilaibaru.M11[8] * simM111) + (nilaibaru.M12[8] * simM112) + (nilaibaru.M13[8] * simM113) + (nilaibaru.M14[8] * simM114) + (nilaibaru.M15[8] * simM115) + (nilaibaru.M16[8] * simM116) + (nilaibaru.M17[8] * simM117) + (nilaibaru.M18[8] * simM118) + (nilaibaru.M19[8] * simM119) + (nilaibaru.M20[8] * simM120));


    var pNM21 = 0; var pNM22 = 0; var pNM23 = 0; var pNM24 = 0; var pNM25 = 0; var pNM26 = 0; var pNM27 = 0; var pNM28 = 0; var pNM29 = 0; 

    pNM21 = ((nilaibaru.M1[0] * simM21) + (nilaibaru.M2[0] * simM22) + (nilaibaru.M3[0] * simM23) + (nilaibaru.M4[0] * simM24) + (nilaibaru.M5[0] * simM25) + (nilaibaru.M6[0] * simM26) + (nilaibaru.M7[0] * simM27) + (nilaibaru.M8[0] * simM28) + (nilaibaru.M9[0] * simM29) + (nilaibaru.M10[0] * simM210) + (nilaibaru.M11[0] * simM211) + (nilaibaru.M12[0] * simM212) + (nilaibaru.M13[0] * simM213) + (nilaibaru.M14[0] * simM214) + (nilaibaru.M15[0] * simM215) + (nilaibaru.M16[0] * simM216) + (nilaibaru.M17[0] * simM217) + (nilaibaru.M18[0] * simM218) + (nilaibaru.M19[0] * simM219) + (nilaibaru.M20[0] * simM220));
    pNM22 = ((nilaibaru.M1[1] * simM21) + (nilaibaru.M2[1] * simM22) + (nilaibaru.M3[1] * simM23) + (nilaibaru.M4[1] * simM24) + (nilaibaru.M5[1] * simM25) + (nilaibaru.M6[1] * simM26) + (nilaibaru.M7[1] * simM27) + (nilaibaru.M8[1] * simM28) + (nilaibaru.M9[1] * simM29) + (nilaibaru.M10[1] * simM210) + (nilaibaru.M11[1] * simM211) + (nilaibaru.M12[1] * simM212) + (nilaibaru.M13[1] * simM213) + (nilaibaru.M14[1] * simM214) + (nilaibaru.M15[1] * simM215) + (nilaibaru.M16[1] * simM216) + (nilaibaru.M17[1] * simM217) + (nilaibaru.M18[1] * simM218) + (nilaibaru.M19[1] * simM219) + (nilaibaru.M20[1] * simM220));
    pNM23 = ((nilaibaru.M1[2] * simM21) + (nilaibaru.M2[2] * simM22) + (nilaibaru.M3[2] * simM23) + (nilaibaru.M4[2] * simM24) + (nilaibaru.M5[2] * simM25) + (nilaibaru.M6[2] * simM26) + (nilaibaru.M7[2] * simM27) + (nilaibaru.M8[2] * simM28) + (nilaibaru.M9[2] * simM29) + (nilaibaru.M10[2] * simM210) + (nilaibaru.M11[2] * simM211) + (nilaibaru.M12[2] * simM212) + (nilaibaru.M13[2] * simM213) + (nilaibaru.M14[2] * simM214) + (nilaibaru.M15[2] * simM215) + (nilaibaru.M16[2] * simM216) + (nilaibaru.M17[2] * simM217) + (nilaibaru.M18[2] * simM218) + (nilaibaru.M19[2] * simM219) + (nilaibaru.M20[2] * simM220));
    pNM24 = ((nilaibaru.M1[3] * simM21) + (nilaibaru.M2[3] * simM22) + (nilaibaru.M3[3] * simM23) + (nilaibaru.M4[3] * simM24) + (nilaibaru.M5[3] * simM25) + (nilaibaru.M6[3] * simM26) + (nilaibaru.M7[3] * simM27) + (nilaibaru.M8[3] * simM28) + (nilaibaru.M9[3] * simM29) + (nilaibaru.M10[3] * simM210) + (nilaibaru.M11[3] * simM211) + (nilaibaru.M12[3] * simM212) + (nilaibaru.M13[3] * simM213) + (nilaibaru.M14[3] * simM214) + (nilaibaru.M15[3] * simM215) + (nilaibaru.M16[3] * simM216) + (nilaibaru.M17[3] * simM217) + (nilaibaru.M18[3] * simM218) + (nilaibaru.M19[3] * simM219) + (nilaibaru.M20[3] * simM220));
    pNM25 = ((nilaibaru.M1[4] * simM21) + (nilaibaru.M2[4] * simM22) + (nilaibaru.M3[4] * simM23) + (nilaibaru.M4[4] * simM24) + (nilaibaru.M5[4] * simM25) + (nilaibaru.M6[4] * simM26) + (nilaibaru.M7[4] * simM27) + (nilaibaru.M8[4] * simM28) + (nilaibaru.M9[4] * simM29) + (nilaibaru.M10[4] * simM210) + (nilaibaru.M11[4] * simM211) + (nilaibaru.M12[4] * simM212) + (nilaibaru.M13[4] * simM213) + (nilaibaru.M14[4] * simM214) + (nilaibaru.M15[4] * simM215) + (nilaibaru.M16[4] * simM216) + (nilaibaru.M17[4] * simM217) + (nilaibaru.M18[4] * simM218) + (nilaibaru.M19[4] * simM219) + (nilaibaru.M20[4] * simM220));
    pNM26 = ((nilaibaru.M1[5] * simM21) + (nilaibaru.M2[5] * simM22) + (nilaibaru.M3[5] * simM23) + (nilaibaru.M4[5] * simM24) + (nilaibaru.M5[5] * simM25) + (nilaibaru.M6[5] * simM26) + (nilaibaru.M7[5] * simM27) + (nilaibaru.M8[5] * simM28) + (nilaibaru.M9[5] * simM29) + (nilaibaru.M10[5] * simM210) + (nilaibaru.M11[5] * simM211) + (nilaibaru.M12[5] * simM212) + (nilaibaru.M13[5] * simM213) + (nilaibaru.M14[5] * simM214) + (nilaibaru.M15[5] * simM215) + (nilaibaru.M16[5] * simM216) + (nilaibaru.M17[5] * simM217) + (nilaibaru.M18[5] * simM218) + (nilaibaru.M19[5] * simM219) + (nilaibaru.M20[5] * simM220));
    pNM27 = ((nilaibaru.M1[6] * simM21) + (nilaibaru.M2[6] * simM22) + (nilaibaru.M3[6] * simM23) + (nilaibaru.M4[6] * simM24) + (nilaibaru.M5[6] * simM25) + (nilaibaru.M6[6] * simM26) + (nilaibaru.M7[6] * simM27) + (nilaibaru.M8[6] * simM28) + (nilaibaru.M9[6] * simM29) + (nilaibaru.M10[6] * simM210) + (nilaibaru.M11[6] * simM211) + (nilaibaru.M12[6] * simM212) + (nilaibaru.M13[6] * simM213) + (nilaibaru.M14[6] * simM214) + (nilaibaru.M15[6] * simM215) + (nilaibaru.M16[6] * simM216) + (nilaibaru.M17[6] * simM217) + (nilaibaru.M18[6] * simM218) + (nilaibaru.M19[6] * simM219) + (nilaibaru.M20[6] * simM220));
    pNM28 = ((nilaibaru.M1[7] * simM21) + (nilaibaru.M2[7] * simM22) + (nilaibaru.M3[7] * simM23) + (nilaibaru.M4[7] * simM24) + (nilaibaru.M5[7] * simM25) + (nilaibaru.M6[7] * simM26) + (nilaibaru.M7[7] * simM27) + (nilaibaru.M8[7] * simM28) + (nilaibaru.M9[7] * simM29) + (nilaibaru.M10[7] * simM210) + (nilaibaru.M11[7] * simM211) + (nilaibaru.M12[7] * simM212) + (nilaibaru.M13[7] * simM213) + (nilaibaru.M14[7] * simM214) + (nilaibaru.M15[7] * simM215) + (nilaibaru.M16[7] * simM216) + (nilaibaru.M17[7] * simM217) + (nilaibaru.M18[7] * simM218) + (nilaibaru.M19[7] * simM219) + (nilaibaru.M20[7] * simM220));
    pNM29 = ((nilaibaru.M1[8] * simM21) + (nilaibaru.M2[8] * simM22) + (nilaibaru.M3[8] * simM23) + (nilaibaru.M4[8] * simM24) + (nilaibaru.M5[8] * simM25) + (nilaibaru.M6[8] * simM26) + (nilaibaru.M7[8] * simM27) + (nilaibaru.M8[8] * simM28) + (nilaibaru.M9[8] * simM29) + (nilaibaru.M10[8] * simM210) + (nilaibaru.M11[8] * simM211) + (nilaibaru.M12[8] * simM212) + (nilaibaru.M13[8] * simM213) + (nilaibaru.M14[8] * simM214) + (nilaibaru.M15[8] * simM215) + (nilaibaru.M16[8] * simM216) + (nilaibaru.M17[8] * simM217) + (nilaibaru.M18[8] * simM218) + (nilaibaru.M19[8] * simM219) + (nilaibaru.M20[8] * simM220));

    var pNM31 = 0; var pNM32 = 0; var pNM33 = 0; var pNM34 = 0; var pNM35 = 0; var pNM36 = 0; var pNM37 = 0; var pNM38 = 0; var pNM39 = 0;

    pNM31 = ((nilaibaru.M1[0] * simM31) + (nilaibaru.M2[0] * simM32) + (nilaibaru.M3[0] * simM33) + (nilaibaru.M4[0] * simM34) + (nilaibaru.M5[0] * simM35) + (nilaibaru.M6[0] * simM36) + (nilaibaru.M7[0] * simM37) + (nilaibaru.M8[0] * simM38) + (nilaibaru.M9[0] * simM39) + (nilaibaru.M10[0] * simM310) + (nilaibaru.M11[0] * simM311) + (nilaibaru.M12[0] * simM312) + (nilaibaru.M13[0] * simM313) + (nilaibaru.M14[0] * simM314) + (nilaibaru.M15[0] * simM315) + (nilaibaru.M16[0] * simM316) + (nilaibaru.M17[0] * simM317) + (nilaibaru.M18[0] * simM318) + (nilaibaru.M19[0] * simM319) + (nilaibaru.M20[0] * simM320));
    pNM32 = ((nilaibaru.M1[1] * simM31) + (nilaibaru.M2[1] * simM32) + (nilaibaru.M3[1] * simM33) + (nilaibaru.M4[1] * simM34) + (nilaibaru.M5[1] * simM35) + (nilaibaru.M6[1] * simM36) + (nilaibaru.M7[1] * simM37) + (nilaibaru.M8[1] * simM38) + (nilaibaru.M9[1] * simM39) + (nilaibaru.M10[1] * simM310) + (nilaibaru.M11[1] * simM311) + (nilaibaru.M12[1] * simM312) + (nilaibaru.M13[1] * simM313) + (nilaibaru.M14[1] * simM314) + (nilaibaru.M15[1] * simM315) + (nilaibaru.M16[1] * simM316) + (nilaibaru.M17[1] * simM317) + (nilaibaru.M18[1] * simM318) + (nilaibaru.M19[1] * simM319) + (nilaibaru.M20[1] * simM320));
    pNM33 = ((nilaibaru.M1[2] * simM31) + (nilaibaru.M2[2] * simM32) + (nilaibaru.M3[2] * simM33) + (nilaibaru.M4[2] * simM34) + (nilaibaru.M5[2] * simM35) + (nilaibaru.M6[2] * simM36) + (nilaibaru.M7[2] * simM37) + (nilaibaru.M8[2] * simM38) + (nilaibaru.M9[2] * simM39) + (nilaibaru.M10[2] * simM310) + (nilaibaru.M11[2] * simM311) + (nilaibaru.M12[2] * simM312) + (nilaibaru.M13[2] * simM313) + (nilaibaru.M14[2] * simM314) + (nilaibaru.M15[2] * simM315) + (nilaibaru.M16[2] * simM316) + (nilaibaru.M17[2] * simM317) + (nilaibaru.M18[2] * simM318) + (nilaibaru.M19[2] * simM319) + (nilaibaru.M20[2] * simM320));
    pNM34 = ((nilaibaru.M1[3] * simM31) + (nilaibaru.M2[3] * simM32) + (nilaibaru.M3[3] * simM33) + (nilaibaru.M4[3] * simM34) + (nilaibaru.M5[3] * simM35) + (nilaibaru.M6[3] * simM36) + (nilaibaru.M7[3] * simM37) + (nilaibaru.M8[3] * simM38) + (nilaibaru.M9[3] * simM39) + (nilaibaru.M10[3] * simM310) + (nilaibaru.M11[3] * simM311) + (nilaibaru.M12[3] * simM312) + (nilaibaru.M13[3] * simM313) + (nilaibaru.M14[3] * simM314) + (nilaibaru.M15[3] * simM315) + (nilaibaru.M16[3] * simM316) + (nilaibaru.M17[3] * simM317) + (nilaibaru.M18[3] * simM318) + (nilaibaru.M19[3] * simM319) + (nilaibaru.M20[3] * simM320));
    pNM35 = ((nilaibaru.M1[4] * simM31) + (nilaibaru.M2[4] * simM32) + (nilaibaru.M3[4] * simM33) + (nilaibaru.M4[4] * simM34) + (nilaibaru.M5[4] * simM35) + (nilaibaru.M6[4] * simM36) + (nilaibaru.M7[4] * simM37) + (nilaibaru.M8[4] * simM38) + (nilaibaru.M9[4] * simM39) + (nilaibaru.M10[4] * simM310) + (nilaibaru.M11[4] * simM311) + (nilaibaru.M12[4] * simM312) + (nilaibaru.M13[4] * simM313) + (nilaibaru.M14[4] * simM314) + (nilaibaru.M15[4] * simM315) + (nilaibaru.M16[4] * simM316) + (nilaibaru.M17[4] * simM317) + (nilaibaru.M18[4] * simM318) + (nilaibaru.M19[4] * simM319) + (nilaibaru.M20[4] * simM320));
    pNM36 = ((nilaibaru.M1[5] * simM31) + (nilaibaru.M2[5] * simM32) + (nilaibaru.M3[5] * simM33) + (nilaibaru.M4[5] * simM34) + (nilaibaru.M5[5] * simM35) + (nilaibaru.M6[5] * simM36) + (nilaibaru.M7[5] * simM37) + (nilaibaru.M8[5] * simM38) + (nilaibaru.M9[5] * simM39) + (nilaibaru.M10[5] * simM310) + (nilaibaru.M11[5] * simM311) + (nilaibaru.M12[5] * simM312) + (nilaibaru.M13[5] * simM313) + (nilaibaru.M14[5] * simM314) + (nilaibaru.M15[5] * simM315) + (nilaibaru.M16[5] * simM316) + (nilaibaru.M17[5] * simM317) + (nilaibaru.M18[5] * simM318) + (nilaibaru.M19[5] * simM319) + (nilaibaru.M20[5] * simM320));
    pNM37 = ((nilaibaru.M1[6] * simM31) + (nilaibaru.M2[6] * simM32) + (nilaibaru.M3[6] * simM33) + (nilaibaru.M4[6] * simM34) + (nilaibaru.M5[6] * simM35) + (nilaibaru.M6[6] * simM36) + (nilaibaru.M7[6] * simM37) + (nilaibaru.M8[6] * simM38) + (nilaibaru.M9[6] * simM39) + (nilaibaru.M10[6] * simM310) + (nilaibaru.M11[6] * simM311) + (nilaibaru.M12[6] * simM312) + (nilaibaru.M13[6] * simM313) + (nilaibaru.M14[6] * simM314) + (nilaibaru.M15[6] * simM315) + (nilaibaru.M16[6] * simM316) + (nilaibaru.M17[6] * simM317) + (nilaibaru.M18[6] * simM318) + (nilaibaru.M19[6] * simM319) + (nilaibaru.M20[6] * simM320));
    pNM38 = ((nilaibaru.M1[7] * simM31) + (nilaibaru.M2[7] * simM32) + (nilaibaru.M3[7] * simM33) + (nilaibaru.M4[7] * simM34) + (nilaibaru.M5[7] * simM35) + (nilaibaru.M6[7] * simM36) + (nilaibaru.M7[7] * simM37) + (nilaibaru.M8[7] * simM38) + (nilaibaru.M9[7] * simM39) + (nilaibaru.M10[7] * simM310) + (nilaibaru.M11[7] * simM311) + (nilaibaru.M12[7] * simM312) + (nilaibaru.M13[7] * simM313) + (nilaibaru.M14[7] * simM314) + (nilaibaru.M15[7] * simM315) + (nilaibaru.M16[7] * simM316) + (nilaibaru.M17[7] * simM317) + (nilaibaru.M18[7] * simM318) + (nilaibaru.M19[7] * simM319) + (nilaibaru.M20[7] * simM320));
    pNM39 = ((nilaibaru.M1[8] * simM31) + (nilaibaru.M2[8] * simM32) + (nilaibaru.M3[8] * simM33) + (nilaibaru.M4[8] * simM34) + (nilaibaru.M5[8] * simM35) + (nilaibaru.M6[8] * simM36) + (nilaibaru.M7[8] * simM37) + (nilaibaru.M8[8] * simM38) + (nilaibaru.M9[8] * simM39) + (nilaibaru.M10[8] * simM310) + (nilaibaru.M11[8] * simM311) + (nilaibaru.M12[8] * simM312) + (nilaibaru.M13[8] * simM313) + (nilaibaru.M14[8] * simM314) + (nilaibaru.M15[8] * simM315) + (nilaibaru.M16[8] * simM316) + (nilaibaru.M17[8] * simM317) + (nilaibaru.M18[8] * simM318) + (nilaibaru.M19[8] * simM319) + (nilaibaru.M20[8] * simM320));

    var pNM41 = 0; var pNM42 = 0; var pNM43 = 0; var pNM44 = 0; var pNM45 = 0; var pNM46 = 0; var pNM47 = 0; var pNM48 = 0; var pNM49 = 0;

    pNM41 = ((nilaibaru.M1[0] * simM41) + (nilaibaru.M2[0] * simM42) + (nilaibaru.M3[0] * simM43) + (nilaibaru.M4[0] * simM44) + (nilaibaru.M5[0] * simM45) + (nilaibaru.M6[0] * simM46) + (nilaibaru.M7[0] * simM47) + (nilaibaru.M8[0] * simM48) + (nilaibaru.M9[0] * simM49) + (nilaibaru.M10[0] * simM410) + (nilaibaru.M11[0] * simM411) + (nilaibaru.M12[0] * simM412) + (nilaibaru.M13[0] * simM413) + (nilaibaru.M14[0] * simM414) + (nilaibaru.M15[0] * simM415) + (nilaibaru.M16[0] * simM416) + (nilaibaru.M17[0] * simM417) + (nilaibaru.M18[0] * simM418) + (nilaibaru.M19[0] * simM419) + (nilaibaru.M20[0] * simM420));
    pNM42 = ((nilaibaru.M1[1] * simM41) + (nilaibaru.M2[1] * simM42) + (nilaibaru.M3[1] * simM43) + (nilaibaru.M4[1] * simM44) + (nilaibaru.M5[1] * simM45) + (nilaibaru.M6[1] * simM46) + (nilaibaru.M7[1] * simM47) + (nilaibaru.M8[1] * simM48) + (nilaibaru.M9[1] * simM49) + (nilaibaru.M10[1] * simM410) + (nilaibaru.M11[1] * simM411) + (nilaibaru.M12[1] * simM412) + (nilaibaru.M13[1] * simM413) + (nilaibaru.M14[1] * simM414) + (nilaibaru.M15[1] * simM415) + (nilaibaru.M16[1] * simM416) + (nilaibaru.M17[1] * simM417) + (nilaibaru.M18[1] * simM418) + (nilaibaru.M19[1] * simM419) + (nilaibaru.M20[1] * simM420));
    pNM43 = ((nilaibaru.M1[2] * simM41) + (nilaibaru.M2[2] * simM42) + (nilaibaru.M3[2] * simM43) + (nilaibaru.M4[2] * simM44) + (nilaibaru.M5[2] * simM45) + (nilaibaru.M6[2] * simM46) + (nilaibaru.M7[2] * simM47) + (nilaibaru.M8[2] * simM48) + (nilaibaru.M9[2] * simM49) + (nilaibaru.M10[2] * simM410) + (nilaibaru.M11[2] * simM411) + (nilaibaru.M12[2] * simM412) + (nilaibaru.M13[2] * simM413) + (nilaibaru.M14[2] * simM414) + (nilaibaru.M15[2] * simM415) + (nilaibaru.M16[2] * simM416) + (nilaibaru.M17[2] * simM417) + (nilaibaru.M18[2] * simM418) + (nilaibaru.M19[2] * simM419) + (nilaibaru.M20[2] * simM420));
    pNM44 = ((nilaibaru.M1[3] * simM41) + (nilaibaru.M2[3] * simM42) + (nilaibaru.M3[3] * simM43) + (nilaibaru.M4[3] * simM44) + (nilaibaru.M5[3] * simM45) + (nilaibaru.M6[3] * simM46) + (nilaibaru.M7[3] * simM47) + (nilaibaru.M8[3] * simM48) + (nilaibaru.M9[3] * simM49) + (nilaibaru.M10[3] * simM410) + (nilaibaru.M11[3] * simM411) + (nilaibaru.M12[3] * simM412) + (nilaibaru.M13[3] * simM413) + (nilaibaru.M14[3] * simM414) + (nilaibaru.M15[3] * simM415) + (nilaibaru.M16[3] * simM416) + (nilaibaru.M17[3] * simM417) + (nilaibaru.M18[3] * simM418) + (nilaibaru.M19[3] * simM419) + (nilaibaru.M20[3] * simM420));
    pNM45 = ((nilaibaru.M1[4] * simM41) + (nilaibaru.M2[4] * simM42) + (nilaibaru.M3[4] * simM43) + (nilaibaru.M4[4] * simM44) + (nilaibaru.M5[4] * simM45) + (nilaibaru.M6[4] * simM46) + (nilaibaru.M7[4] * simM47) + (nilaibaru.M8[4] * simM48) + (nilaibaru.M9[4] * simM49) + (nilaibaru.M10[4] * simM410) + (nilaibaru.M11[4] * simM411) + (nilaibaru.M12[4] * simM412) + (nilaibaru.M13[4] * simM413) + (nilaibaru.M14[4] * simM414) + (nilaibaru.M15[4] * simM415) + (nilaibaru.M16[4] * simM416) + (nilaibaru.M17[4] * simM417) + (nilaibaru.M18[4] * simM418) + (nilaibaru.M19[4] * simM419) + (nilaibaru.M20[4] * simM420));
    pNM46 = ((nilaibaru.M1[5] * simM41) + (nilaibaru.M2[5] * simM42) + (nilaibaru.M3[5] * simM43) + (nilaibaru.M4[5] * simM44) + (nilaibaru.M5[5] * simM45) + (nilaibaru.M6[5] * simM46) + (nilaibaru.M7[5] * simM47) + (nilaibaru.M8[5] * simM48) + (nilaibaru.M9[5] * simM49) + (nilaibaru.M10[5] * simM410) + (nilaibaru.M11[5] * simM411) + (nilaibaru.M12[5] * simM412) + (nilaibaru.M13[5] * simM413) + (nilaibaru.M14[5] * simM414) + (nilaibaru.M15[5] * simM415) + (nilaibaru.M16[5] * simM416) + (nilaibaru.M17[5] * simM417) + (nilaibaru.M18[5] * simM418) + (nilaibaru.M19[5] * simM419) + (nilaibaru.M20[5] * simM420));
    pNM47 = ((nilaibaru.M1[6] * simM41) + (nilaibaru.M2[6] * simM42) + (nilaibaru.M3[6] * simM43) + (nilaibaru.M4[6] * simM44) + (nilaibaru.M5[6] * simM45) + (nilaibaru.M6[6] * simM46) + (nilaibaru.M7[6] * simM47) + (nilaibaru.M8[6] * simM48) + (nilaibaru.M9[6] * simM49) + (nilaibaru.M10[6] * simM410) + (nilaibaru.M11[6] * simM411) + (nilaibaru.M12[6] * simM412) + (nilaibaru.M13[6] * simM413) + (nilaibaru.M14[6] * simM414) + (nilaibaru.M15[6] * simM415) + (nilaibaru.M16[6] * simM416) + (nilaibaru.M17[6] * simM417) + (nilaibaru.M18[6] * simM418) + (nilaibaru.M19[6] * simM419) + (nilaibaru.M20[6] * simM420));
    pNM48 = ((nilaibaru.M1[7] * simM41) + (nilaibaru.M2[7] * simM42) + (nilaibaru.M3[7] * simM43) + (nilaibaru.M4[7] * simM44) + (nilaibaru.M5[7] * simM45) + (nilaibaru.M6[7] * simM46) + (nilaibaru.M7[7] * simM47) + (nilaibaru.M8[7] * simM48) + (nilaibaru.M9[7] * simM49) + (nilaibaru.M10[7] * simM410) + (nilaibaru.M11[7] * simM411) + (nilaibaru.M12[7] * simM412) + (nilaibaru.M13[7] * simM413) + (nilaibaru.M14[7] * simM414) + (nilaibaru.M15[7] * simM415) + (nilaibaru.M16[7] * simM416) + (nilaibaru.M17[7] * simM417) + (nilaibaru.M18[7] * simM418) + (nilaibaru.M19[7] * simM419) + (nilaibaru.M20[7] * simM420));
    pNM49 = ((nilaibaru.M1[8] * simM41) + (nilaibaru.M2[8] * simM42) + (nilaibaru.M3[8] * simM43) + (nilaibaru.M4[8] * simM44) + (nilaibaru.M5[8] * simM45) + (nilaibaru.M6[8] * simM46) + (nilaibaru.M7[8] * simM47) + (nilaibaru.M8[8] * simM48) + (nilaibaru.M9[8] * simM49) + (nilaibaru.M10[8] * simM410) + (nilaibaru.M11[8] * simM411) + (nilaibaru.M12[8] * simM412) + (nilaibaru.M13[8] * simM413) + (nilaibaru.M14[8] * simM414) + (nilaibaru.M15[8] * simM415) + (nilaibaru.M16[8] * simM416) + (nilaibaru.M17[8] * simM417) + (nilaibaru.M18[8] * simM418) + (nilaibaru.M19[8] * simM419) + (nilaibaru.M20[8] * simM420));


    var pNM51 = 0; var pNM52 = 0; var pNM53 = 0; var pNM54 = 0; var pNM55 = 0; var pNM56 = 0; var pNM57 = 0; var pNM58 = 0; var pNM59 = 0;

    pNM51 = ((nilaibaru.M1[0] * simM51) + (nilaibaru.M2[0] * simM52) + (nilaibaru.M3[0] * simM53) + (nilaibaru.M4[0] * simM54) + (nilaibaru.M5[0] * simM55) + (nilaibaru.M6[0] * simM56) + (nilaibaru.M7[0] * simM57) + (nilaibaru.M8[0] * simM58) + (nilaibaru.M9[0] * simM59) + (nilaibaru.M10[0] * simM510) + (nilaibaru.M11[0] * simM511) + (nilaibaru.M12[0] * simM512) + (nilaibaru.M13[0] * simM513) + (nilaibaru.M14[0] * simM514) + (nilaibaru.M15[0] * simM515) + (nilaibaru.M16[0] * simM516) + (nilaibaru.M17[0] * simM517) + (nilaibaru.M18[0] * simM518) + (nilaibaru.M19[0] * simM519) + (nilaibaru.M20[0] * simM520));
    pNM52 = ((nilaibaru.M1[1] * simM51) + (nilaibaru.M2[1] * simM52) + (nilaibaru.M3[1] * simM53) + (nilaibaru.M4[1] * simM54) + (nilaibaru.M5[1] * simM55) + (nilaibaru.M6[1] * simM56) + (nilaibaru.M7[1] * simM57) + (nilaibaru.M8[1] * simM58) + (nilaibaru.M9[1] * simM59) + (nilaibaru.M10[1] * simM510) + (nilaibaru.M11[1] * simM511) + (nilaibaru.M12[1] * simM512) + (nilaibaru.M13[1] * simM513) + (nilaibaru.M14[1] * simM514) + (nilaibaru.M15[1] * simM515) + (nilaibaru.M16[1] * simM516) + (nilaibaru.M17[1] * simM517) + (nilaibaru.M18[1] * simM518) + (nilaibaru.M19[1] * simM519) + (nilaibaru.M20[1] * simM520));
    pNM53 = ((nilaibaru.M1[2] * simM51) + (nilaibaru.M2[2] * simM52) + (nilaibaru.M3[2] * simM53) + (nilaibaru.M4[2] * simM54) + (nilaibaru.M5[2] * simM55) + (nilaibaru.M6[2] * simM56) + (nilaibaru.M7[2] * simM57) + (nilaibaru.M8[2] * simM58) + (nilaibaru.M9[2] * simM59) + (nilaibaru.M10[2] * simM510) + (nilaibaru.M11[2] * simM511) + (nilaibaru.M12[2] * simM512) + (nilaibaru.M13[2] * simM513) + (nilaibaru.M14[2] * simM514) + (nilaibaru.M15[2] * simM515) + (nilaibaru.M16[2] * simM516) + (nilaibaru.M17[2] * simM517) + (nilaibaru.M18[2] * simM518) + (nilaibaru.M19[2] * simM519) + (nilaibaru.M20[2] * simM520));
    pNM54 = ((nilaibaru.M1[3] * simM51) + (nilaibaru.M2[3] * simM52) + (nilaibaru.M3[3] * simM53) + (nilaibaru.M4[3] * simM54) + (nilaibaru.M5[3] * simM55) + (nilaibaru.M6[3] * simM56) + (nilaibaru.M7[3] * simM57) + (nilaibaru.M8[3] * simM58) + (nilaibaru.M9[3] * simM59) + (nilaibaru.M10[3] * simM510) + (nilaibaru.M11[3] * simM511) + (nilaibaru.M12[3] * simM512) + (nilaibaru.M13[3] * simM513) + (nilaibaru.M14[3] * simM514) + (nilaibaru.M15[3] * simM515) + (nilaibaru.M16[3] * simM516) + (nilaibaru.M17[3] * simM517) + (nilaibaru.M18[3] * simM518) + (nilaibaru.M19[3] * simM519) + (nilaibaru.M20[3] * simM520));
    pNM55 = ((nilaibaru.M1[4] * simM51) + (nilaibaru.M2[4] * simM52) + (nilaibaru.M3[4] * simM53) + (nilaibaru.M4[4] * simM54) + (nilaibaru.M5[4] * simM55) + (nilaibaru.M6[4] * simM56) + (nilaibaru.M7[4] * simM57) + (nilaibaru.M8[4] * simM58) + (nilaibaru.M9[4] * simM59) + (nilaibaru.M10[4] * simM510) + (nilaibaru.M11[4] * simM511) + (nilaibaru.M12[4] * simM512) + (nilaibaru.M13[4] * simM513) + (nilaibaru.M14[4] * simM514) + (nilaibaru.M15[4] * simM515) + (nilaibaru.M16[4] * simM516) + (nilaibaru.M17[4] * simM517) + (nilaibaru.M18[4] * simM518) + (nilaibaru.M19[4] * simM519) + (nilaibaru.M20[4] * simM520));
    pNM56 = ((nilaibaru.M1[5] * simM51) + (nilaibaru.M2[5] * simM52) + (nilaibaru.M3[5] * simM53) + (nilaibaru.M4[5] * simM54) + (nilaibaru.M5[5] * simM55) + (nilaibaru.M6[5] * simM56) + (nilaibaru.M7[5] * simM57) + (nilaibaru.M8[5] * simM58) + (nilaibaru.M9[5] * simM59) + (nilaibaru.M10[5] * simM510) + (nilaibaru.M11[5] * simM511) + (nilaibaru.M12[5] * simM512) + (nilaibaru.M13[5] * simM513) + (nilaibaru.M14[5] * simM514) + (nilaibaru.M15[5] * simM515) + (nilaibaru.M16[5] * simM516) + (nilaibaru.M17[5] * simM517) + (nilaibaru.M18[5] * simM518) + (nilaibaru.M19[5] * simM519) + (nilaibaru.M20[5] * simM520));
    pNM57 = ((nilaibaru.M1[6] * simM51) + (nilaibaru.M2[6] * simM52) + (nilaibaru.M3[6] * simM53) + (nilaibaru.M4[6] * simM54) + (nilaibaru.M5[6] * simM55) + (nilaibaru.M6[6] * simM56) + (nilaibaru.M7[6] * simM57) + (nilaibaru.M8[6] * simM58) + (nilaibaru.M9[6] * simM59) + (nilaibaru.M10[6] * simM510) + (nilaibaru.M11[6] * simM511) + (nilaibaru.M12[6] * simM512) + (nilaibaru.M13[6] * simM513) + (nilaibaru.M14[6] * simM514) + (nilaibaru.M15[6] * simM515) + (nilaibaru.M16[6] * simM516) + (nilaibaru.M17[6] * simM517) + (nilaibaru.M18[6] * simM518) + (nilaibaru.M19[6] * simM519) + (nilaibaru.M20[6] * simM520));
    pNM58 = ((nilaibaru.M1[7] * simM51) + (nilaibaru.M2[7] * simM52) + (nilaibaru.M3[7] * simM53) + (nilaibaru.M4[7] * simM54) + (nilaibaru.M5[7] * simM55) + (nilaibaru.M6[7] * simM56) + (nilaibaru.M7[7] * simM57) + (nilaibaru.M8[7] * simM58) + (nilaibaru.M9[7] * simM59) + (nilaibaru.M10[7] * simM510) + (nilaibaru.M11[7] * simM511) + (nilaibaru.M12[7] * simM512) + (nilaibaru.M13[7] * simM513) + (nilaibaru.M14[7] * simM514) + (nilaibaru.M15[7] * simM515) + (nilaibaru.M16[7] * simM516) + (nilaibaru.M17[7] * simM517) + (nilaibaru.M18[7] * simM518) + (nilaibaru.M19[7] * simM519) + (nilaibaru.M20[7] * simM520));
    pNM59 = ((nilaibaru.M1[8] * simM51) + (nilaibaru.M2[8] * simM52) + (nilaibaru.M3[8] * simM53) + (nilaibaru.M4[8] * simM54) + (nilaibaru.M5[8] * simM55) + (nilaibaru.M6[8] * simM56) + (nilaibaru.M7[8] * simM57) + (nilaibaru.M8[8] * simM58) + (nilaibaru.M9[8] * simM59) + (nilaibaru.M10[8] * simM510) + (nilaibaru.M11[8] * simM511) + (nilaibaru.M12[8] * simM512) + (nilaibaru.M13[8] * simM513) + (nilaibaru.M14[8] * simM514) + (nilaibaru.M15[8] * simM515) + (nilaibaru.M16[8] * simM516) + (nilaibaru.M17[8] * simM517) + (nilaibaru.M18[8] * simM518) + (nilaibaru.M19[8] * simM519) + (nilaibaru.M20[8] * simM520));

    var pNM61 = 0; var pNM62 = 0; var pNM63 = 0; var pNM64 = 0; var pNM65 = 0; var pNM66 = 0; var pNM67 = 0; var pNM68 = 0; var pNM69 = 0; 

    pNM61 = ((nilaibaru.M1[0] * simM61) + (nilaibaru.M2[0] * simM62) + (nilaibaru.M3[0] * simM63) + (nilaibaru.M4[0] * simM64) + (nilaibaru.M5[0] * simM65) + (nilaibaru.M6[0] * simM66) + (nilaibaru.M7[0] * simM67) + (nilaibaru.M8[0] * simM68) + (nilaibaru.M9[0] * simM69) + (nilaibaru.M10[0] * simM610) + (nilaibaru.M11[0] * simM611) + (nilaibaru.M12[0] * simM612) + (nilaibaru.M13[0] * simM613) + (nilaibaru.M14[0] * simM614) + (nilaibaru.M15[0] * simM615) + (nilaibaru.M16[0] * simM616) + (nilaibaru.M17[0] * simM617) + (nilaibaru.M18[0] * simM618) + (nilaibaru.M19[0] * simM619) + (nilaibaru.M20[0] * simM620));
    pNM62 = ((nilaibaru.M1[1] * simM61) + (nilaibaru.M2[1] * simM62) + (nilaibaru.M3[1] * simM63) + (nilaibaru.M4[1] * simM64) + (nilaibaru.M5[1] * simM65) + (nilaibaru.M6[1] * simM66) + (nilaibaru.M7[1] * simM67) + (nilaibaru.M8[1] * simM68) + (nilaibaru.M9[1] * simM69) + (nilaibaru.M10[1] * simM610) + (nilaibaru.M11[1] * simM611) + (nilaibaru.M12[1] * simM612) + (nilaibaru.M13[1] * simM613) + (nilaibaru.M14[1] * simM614) + (nilaibaru.M15[1] * simM615) + (nilaibaru.M16[1] * simM616) + (nilaibaru.M17[1] * simM617) + (nilaibaru.M18[1] * simM618) + (nilaibaru.M19[1] * simM619) + (nilaibaru.M20[1] * simM620));
    pNM63 = ((nilaibaru.M1[2] * simM61) + (nilaibaru.M2[2] * simM62) + (nilaibaru.M3[2] * simM63) + (nilaibaru.M4[2] * simM64) + (nilaibaru.M5[2] * simM65) + (nilaibaru.M6[2] * simM66) + (nilaibaru.M7[2] * simM67) + (nilaibaru.M8[2] * simM68) + (nilaibaru.M9[2] * simM69) + (nilaibaru.M10[2] * simM610) + (nilaibaru.M11[2] * simM611) + (nilaibaru.M12[2] * simM612) + (nilaibaru.M13[2] * simM613) + (nilaibaru.M14[2] * simM614) + (nilaibaru.M15[2] * simM615) + (nilaibaru.M16[2] * simM616) + (nilaibaru.M17[2] * simM617) + (nilaibaru.M18[2] * simM618) + (nilaibaru.M19[2] * simM619) + (nilaibaru.M20[2] * simM620));
    pNM64 = ((nilaibaru.M1[3] * simM61) + (nilaibaru.M2[3] * simM62) + (nilaibaru.M3[3] * simM63) + (nilaibaru.M4[3] * simM64) + (nilaibaru.M5[3] * simM65) + (nilaibaru.M6[3] * simM66) + (nilaibaru.M7[3] * simM67) + (nilaibaru.M8[3] * simM68) + (nilaibaru.M9[3] * simM69) + (nilaibaru.M10[3] * simM610) + (nilaibaru.M11[3] * simM611) + (nilaibaru.M12[3] * simM612) + (nilaibaru.M13[3] * simM613) + (nilaibaru.M14[3] * simM614) + (nilaibaru.M15[3] * simM615) + (nilaibaru.M16[3] * simM616) + (nilaibaru.M17[3] * simM617) + (nilaibaru.M18[3] * simM618) + (nilaibaru.M19[3] * simM619) + (nilaibaru.M20[3] * simM620));
    pNM65 = ((nilaibaru.M1[4] * simM61) + (nilaibaru.M2[4] * simM62) + (nilaibaru.M3[4] * simM63) + (nilaibaru.M4[4] * simM64) + (nilaibaru.M5[4] * simM65) + (nilaibaru.M6[4] * simM66) + (nilaibaru.M7[4] * simM67) + (nilaibaru.M8[4] * simM68) + (nilaibaru.M9[4] * simM69) + (nilaibaru.M10[4] * simM610) + (nilaibaru.M11[4] * simM611) + (nilaibaru.M12[4] * simM612) + (nilaibaru.M13[4] * simM613) + (nilaibaru.M14[4] * simM614) + (nilaibaru.M15[4] * simM615) + (nilaibaru.M16[4] * simM616) + (nilaibaru.M17[4] * simM617) + (nilaibaru.M18[4] * simM618) + (nilaibaru.M19[4] * simM619) + (nilaibaru.M20[4] * simM620));
    pNM66 = ((nilaibaru.M1[5] * simM61) + (nilaibaru.M2[5] * simM62) + (nilaibaru.M3[5] * simM63) + (nilaibaru.M4[5] * simM64) + (nilaibaru.M5[5] * simM65) + (nilaibaru.M6[5] * simM66) + (nilaibaru.M7[5] * simM67) + (nilaibaru.M8[5] * simM68) + (nilaibaru.M9[5] * simM69) + (nilaibaru.M10[5] * simM610) + (nilaibaru.M11[5] * simM611) + (nilaibaru.M12[5] * simM612) + (nilaibaru.M13[5] * simM613) + (nilaibaru.M14[5] * simM614) + (nilaibaru.M15[5] * simM615) + (nilaibaru.M16[5] * simM616) + (nilaibaru.M17[5] * simM617) + (nilaibaru.M18[5] * simM618) + (nilaibaru.M19[5] * simM619) + (nilaibaru.M20[5] * simM620));
    pNM67 = ((nilaibaru.M1[6] * simM61) + (nilaibaru.M2[6] * simM62) + (nilaibaru.M3[6] * simM63) + (nilaibaru.M4[6] * simM64) + (nilaibaru.M5[6] * simM65) + (nilaibaru.M6[6] * simM66) + (nilaibaru.M7[6] * simM67) + (nilaibaru.M8[6] * simM68) + (nilaibaru.M9[6] * simM69) + (nilaibaru.M10[6] * simM610) + (nilaibaru.M11[6] * simM611) + (nilaibaru.M12[6] * simM612) + (nilaibaru.M13[6] * simM613) + (nilaibaru.M14[6] * simM614) + (nilaibaru.M15[6] * simM615) + (nilaibaru.M16[6] * simM616) + (nilaibaru.M17[6] * simM617) + (nilaibaru.M18[6] * simM618) + (nilaibaru.M19[6] * simM619) + (nilaibaru.M20[6] * simM620));
    pNM68 = ((nilaibaru.M1[7] * simM61) + (nilaibaru.M2[7] * simM62) + (nilaibaru.M3[7] * simM63) + (nilaibaru.M4[7] * simM64) + (nilaibaru.M5[7] * simM65) + (nilaibaru.M6[7] * simM66) + (nilaibaru.M7[7] * simM67) + (nilaibaru.M8[7] * simM68) + (nilaibaru.M9[7] * simM69) + (nilaibaru.M10[7] * simM610) + (nilaibaru.M11[7] * simM611) + (nilaibaru.M12[7] * simM612) + (nilaibaru.M13[7] * simM613) + (nilaibaru.M14[7] * simM614) + (nilaibaru.M15[7] * simM615) + (nilaibaru.M16[7] * simM616) + (nilaibaru.M17[7] * simM617) + (nilaibaru.M18[7] * simM618) + (nilaibaru.M19[7] * simM619) + (nilaibaru.M20[7] * simM620));
    pNM69 = ((nilaibaru.M1[8] * simM61) + (nilaibaru.M2[8] * simM62) + (nilaibaru.M3[8] * simM63) + (nilaibaru.M4[8] * simM64) + (nilaibaru.M5[8] * simM65) + (nilaibaru.M6[8] * simM66) + (nilaibaru.M7[8] * simM67) + (nilaibaru.M8[8] * simM68) + (nilaibaru.M9[8] * simM69) + (nilaibaru.M10[8] * simM610) + (nilaibaru.M11[8] * simM611) + (nilaibaru.M12[8] * simM612) + (nilaibaru.M13[8] * simM613) + (nilaibaru.M14[8] * simM614) + (nilaibaru.M15[8] * simM615) + (nilaibaru.M16[8] * simM616) + (nilaibaru.M17[8] * simM617) + (nilaibaru.M18[8] * simM618) + (nilaibaru.M19[8] * simM619) + (nilaibaru.M20[8] * simM620));

    var pNM71 = 0; var pNM72 = 0; var pNM73 = 0; var pNM74 = 0; var pNM75 = 0; var pNM76 = 0; var pNM77 = 0; var pNM78 = 0; var pNM79 = 0;

    pNM71 = ((nilaibaru.M1[0] * simM71) + (nilaibaru.M2[0] * simM72) + (nilaibaru.M3[0] * simM73) + (nilaibaru.M4[0] * simM74) + (nilaibaru.M5[0] * simM75) + (nilaibaru.M6[0] * simM76) + (nilaibaru.M7[0] * simM77) + (nilaibaru.M8[0] * simM78) + (nilaibaru.M9[0] * simM79) + (nilaibaru.M10[0] * simM710) + (nilaibaru.M11[0] * simM711) + (nilaibaru.M12[0] * simM712) + (nilaibaru.M13[0] * simM713) + (nilaibaru.M14[0] * simM714) + (nilaibaru.M15[0] * simM715) + (nilaibaru.M16[0] * simM716) + (nilaibaru.M17[0] * simM717) + (nilaibaru.M18[0] * simM718) + (nilaibaru.M19[0] * simM719) + (nilaibaru.M20[0] * simM720));
    pNM72 = ((nilaibaru.M1[1] * simM71) + (nilaibaru.M2[1] * simM72) + (nilaibaru.M3[1] * simM73) + (nilaibaru.M4[1] * simM74) + (nilaibaru.M5[1] * simM75) + (nilaibaru.M6[1] * simM76) + (nilaibaru.M7[1] * simM77) + (nilaibaru.M8[1] * simM78) + (nilaibaru.M9[1] * simM79) + (nilaibaru.M10[1] * simM710) + (nilaibaru.M11[1] * simM711) + (nilaibaru.M12[1] * simM712) + (nilaibaru.M13[1] * simM713) + (nilaibaru.M14[1] * simM714) + (nilaibaru.M15[1] * simM715) + (nilaibaru.M16[1] * simM716) + (nilaibaru.M17[1] * simM717) + (nilaibaru.M18[1] * simM718) + (nilaibaru.M19[1] * simM719) + (nilaibaru.M20[1] * simM720));
    pNM73 = ((nilaibaru.M1[2] * simM71) + (nilaibaru.M2[2] * simM72) + (nilaibaru.M3[2] * simM73) + (nilaibaru.M4[2] * simM74) + (nilaibaru.M5[2] * simM75) + (nilaibaru.M6[2] * simM76) + (nilaibaru.M7[2] * simM77) + (nilaibaru.M8[2] * simM78) + (nilaibaru.M9[2] * simM79) + (nilaibaru.M10[2] * simM710) + (nilaibaru.M11[2] * simM711) + (nilaibaru.M12[2] * simM712) + (nilaibaru.M13[2] * simM713) + (nilaibaru.M14[2] * simM714) + (nilaibaru.M15[2] * simM715) + (nilaibaru.M16[2] * simM716) + (nilaibaru.M17[2] * simM717) + (nilaibaru.M18[2] * simM718) + (nilaibaru.M19[2] * simM719) + (nilaibaru.M20[2] * simM720));
    pNM74 = ((nilaibaru.M1[3] * simM71) + (nilaibaru.M2[3] * simM72) + (nilaibaru.M3[3] * simM73) + (nilaibaru.M4[3] * simM74) + (nilaibaru.M5[3] * simM75) + (nilaibaru.M6[3] * simM76) + (nilaibaru.M7[3] * simM77) + (nilaibaru.M8[3] * simM78) + (nilaibaru.M9[3] * simM79) + (nilaibaru.M10[3] * simM710) + (nilaibaru.M11[3] * simM711) + (nilaibaru.M12[3] * simM712) + (nilaibaru.M13[3] * simM713) + (nilaibaru.M14[3] * simM714) + (nilaibaru.M15[3] * simM715) + (nilaibaru.M16[3] * simM716) + (nilaibaru.M17[3] * simM717) + (nilaibaru.M18[3] * simM718) + (nilaibaru.M19[3] * simM719) + (nilaibaru.M20[3] * simM720));
    pNM75 = ((nilaibaru.M1[4] * simM71) + (nilaibaru.M2[4] * simM72) + (nilaibaru.M3[4] * simM73) + (nilaibaru.M4[4] * simM74) + (nilaibaru.M5[4] * simM75) + (nilaibaru.M6[4] * simM76) + (nilaibaru.M7[4] * simM77) + (nilaibaru.M8[4] * simM78) + (nilaibaru.M9[4] * simM79) + (nilaibaru.M10[4] * simM710) + (nilaibaru.M11[4] * simM711) + (nilaibaru.M12[4] * simM712) + (nilaibaru.M13[4] * simM713) + (nilaibaru.M14[4] * simM714) + (nilaibaru.M15[4] * simM715) + (nilaibaru.M16[4] * simM716) + (nilaibaru.M17[4] * simM717) + (nilaibaru.M18[4] * simM718) + (nilaibaru.M19[4] * simM719) + (nilaibaru.M20[4] * simM720));
    pNM76 = ((nilaibaru.M1[5] * simM71) + (nilaibaru.M2[5] * simM72) + (nilaibaru.M3[5] * simM73) + (nilaibaru.M4[5] * simM74) + (nilaibaru.M5[5] * simM75) + (nilaibaru.M6[5] * simM76) + (nilaibaru.M7[5] * simM77) + (nilaibaru.M8[5] * simM78) + (nilaibaru.M9[5] * simM79) + (nilaibaru.M10[5] * simM710) + (nilaibaru.M11[5] * simM711) + (nilaibaru.M12[5] * simM712) + (nilaibaru.M13[5] * simM713) + (nilaibaru.M14[5] * simM714) + (nilaibaru.M15[5] * simM715) + (nilaibaru.M16[5] * simM716) + (nilaibaru.M17[5] * simM717) + (nilaibaru.M18[5] * simM718) + (nilaibaru.M19[5] * simM719) + (nilaibaru.M20[5] * simM720));
    pNM77 = ((nilaibaru.M1[6] * simM71) + (nilaibaru.M2[6] * simM72) + (nilaibaru.M3[6] * simM73) + (nilaibaru.M4[6] * simM74) + (nilaibaru.M5[6] * simM75) + (nilaibaru.M6[6] * simM76) + (nilaibaru.M7[6] * simM77) + (nilaibaru.M8[6] * simM78) + (nilaibaru.M9[6] * simM79) + (nilaibaru.M10[6] * simM710) + (nilaibaru.M11[6] * simM711) + (nilaibaru.M12[6] * simM712) + (nilaibaru.M13[6] * simM713) + (nilaibaru.M14[6] * simM714) + (nilaibaru.M15[6] * simM715) + (nilaibaru.M16[6] * simM716) + (nilaibaru.M17[6] * simM717) + (nilaibaru.M18[6] * simM718) + (nilaibaru.M19[6] * simM719) + (nilaibaru.M20[6] * simM720));
    pNM78 = ((nilaibaru.M1[7] * simM71) + (nilaibaru.M2[7] * simM72) + (nilaibaru.M3[7] * simM73) + (nilaibaru.M4[7] * simM74) + (nilaibaru.M5[7] * simM75) + (nilaibaru.M6[7] * simM76) + (nilaibaru.M7[7] * simM77) + (nilaibaru.M8[7] * simM78) + (nilaibaru.M9[7] * simM79) + (nilaibaru.M10[7] * simM710) + (nilaibaru.M11[7] * simM711) + (nilaibaru.M12[7] * simM712) + (nilaibaru.M13[7] * simM713) + (nilaibaru.M14[7] * simM714) + (nilaibaru.M15[7] * simM715) + (nilaibaru.M16[7] * simM716) + (nilaibaru.M17[7] * simM717) + (nilaibaru.M18[7] * simM718) + (nilaibaru.M19[7] * simM719) + (nilaibaru.M20[7] * simM720));
    pNM79 = ((nilaibaru.M1[8] * simM71) + (nilaibaru.M2[8] * simM72) + (nilaibaru.M3[8] * simM73) + (nilaibaru.M4[8] * simM74) + (nilaibaru.M5[8] * simM75) + (nilaibaru.M6[8] * simM76) + (nilaibaru.M7[8] * simM77) + (nilaibaru.M8[8] * simM78) + (nilaibaru.M9[8] * simM79) + (nilaibaru.M10[8] * simM710) + (nilaibaru.M11[8] * simM711) + (nilaibaru.M12[8] * simM712) + (nilaibaru.M13[8] * simM713) + (nilaibaru.M14[8] * simM714) + (nilaibaru.M15[8] * simM715) + (nilaibaru.M16[8] * simM716) + (nilaibaru.M17[8] * simM717) + (nilaibaru.M18[8] * simM718) + (nilaibaru.M19[8] * simM719) + (nilaibaru.M20[8] * simM720));

    var pNM81 = 0; var pNM82 = 0; var pNM83 = 0; var pNM84 = 0; var pNM85 = 0; var pNM86 = 0; var pNM87 = 0; var pNM88 = 0; var pNM89 = 0; 

    pNM81 = ((nilaibaru.M1[0] * simM81) + (nilaibaru.M2[0] * simM82) + (nilaibaru.M3[0] * simM83) + (nilaibaru.M4[0] * simM84) + (nilaibaru.M5[0] * simM85) + (nilaibaru.M6[0] * simM86) + (nilaibaru.M7[0] * simM87) + (nilaibaru.M8[0] * simM88) + (nilaibaru.M9[0] * simM89) + (nilaibaru.M10[0] * simM810) + (nilaibaru.M11[0] * simM811) + (nilaibaru.M12[0] * simM812) + (nilaibaru.M13[0] * simM813) + (nilaibaru.M14[0] * simM814) + (nilaibaru.M15[0] * simM815) + (nilaibaru.M16[0] * simM816) + (nilaibaru.M17[0] * simM817) + (nilaibaru.M18[0] * simM818) + (nilaibaru.M19[0] * simM819) + (nilaibaru.M20[0] * simM820));
    pNM82 = ((nilaibaru.M1[1] * simM81) + (nilaibaru.M2[1] * simM82) + (nilaibaru.M3[1] * simM83) + (nilaibaru.M4[1] * simM84) + (nilaibaru.M5[1] * simM85) + (nilaibaru.M6[1] * simM86) + (nilaibaru.M7[1] * simM87) + (nilaibaru.M8[1] * simM88) + (nilaibaru.M9[1] * simM89) + (nilaibaru.M10[1] * simM810) + (nilaibaru.M11[1] * simM811) + (nilaibaru.M12[1] * simM812) + (nilaibaru.M13[1] * simM813) + (nilaibaru.M14[1] * simM814) + (nilaibaru.M15[1] * simM815) + (nilaibaru.M16[1] * simM816) + (nilaibaru.M17[1] * simM817) + (nilaibaru.M18[1] * simM818) + (nilaibaru.M19[1] * simM819) + (nilaibaru.M20[1] * simM820));
    pNM83 = ((nilaibaru.M1[2] * simM81) + (nilaibaru.M2[2] * simM82) + (nilaibaru.M3[2] * simM83) + (nilaibaru.M4[2] * simM84) + (nilaibaru.M5[2] * simM85) + (nilaibaru.M6[2] * simM86) + (nilaibaru.M7[2] * simM87) + (nilaibaru.M8[2] * simM88) + (nilaibaru.M9[2] * simM89) + (nilaibaru.M10[2] * simM810) + (nilaibaru.M11[2] * simM811) + (nilaibaru.M12[2] * simM812) + (nilaibaru.M13[2] * simM813) + (nilaibaru.M14[2] * simM814) + (nilaibaru.M15[2] * simM815) + (nilaibaru.M16[2] * simM816) + (nilaibaru.M17[2] * simM817) + (nilaibaru.M18[2] * simM818) + (nilaibaru.M19[2] * simM819) + (nilaibaru.M20[2] * simM820));
    pNM84 = ((nilaibaru.M1[3] * simM81) + (nilaibaru.M2[3] * simM82) + (nilaibaru.M3[3] * simM83) + (nilaibaru.M4[3] * simM84) + (nilaibaru.M5[3] * simM85) + (nilaibaru.M6[3] * simM86) + (nilaibaru.M7[3] * simM87) + (nilaibaru.M8[3] * simM88) + (nilaibaru.M9[3] * simM89) + (nilaibaru.M10[3] * simM810) + (nilaibaru.M11[3] * simM811) + (nilaibaru.M12[3] * simM812) + (nilaibaru.M13[3] * simM813) + (nilaibaru.M14[3] * simM814) + (nilaibaru.M15[3] * simM815) + (nilaibaru.M16[3] * simM816) + (nilaibaru.M17[3] * simM817) + (nilaibaru.M18[3] * simM818) + (nilaibaru.M19[3] * simM819) + (nilaibaru.M20[3] * simM820));
    pNM85 = ((nilaibaru.M1[4] * simM81) + (nilaibaru.M2[4] * simM82) + (nilaibaru.M3[4] * simM83) + (nilaibaru.M4[4] * simM84) + (nilaibaru.M5[4] * simM85) + (nilaibaru.M6[4] * simM86) + (nilaibaru.M7[4] * simM87) + (nilaibaru.M8[4] * simM88) + (nilaibaru.M9[4] * simM89) + (nilaibaru.M10[4] * simM810) + (nilaibaru.M11[4] * simM811) + (nilaibaru.M12[4] * simM812) + (nilaibaru.M13[4] * simM813) + (nilaibaru.M14[4] * simM814) + (nilaibaru.M15[4] * simM815) + (nilaibaru.M16[4] * simM816) + (nilaibaru.M17[4] * simM817) + (nilaibaru.M18[4] * simM818) + (nilaibaru.M19[4] * simM819) + (nilaibaru.M20[4] * simM820));
    pNM86 = ((nilaibaru.M1[5] * simM81) + (nilaibaru.M2[5] * simM82) + (nilaibaru.M3[5] * simM83) + (nilaibaru.M4[5] * simM84) + (nilaibaru.M5[5] * simM85) + (nilaibaru.M6[5] * simM86) + (nilaibaru.M7[5] * simM87) + (nilaibaru.M8[5] * simM88) + (nilaibaru.M9[5] * simM89) + (nilaibaru.M10[5] * simM810) + (nilaibaru.M11[5] * simM811) + (nilaibaru.M12[5] * simM812) + (nilaibaru.M13[5] * simM813) + (nilaibaru.M14[5] * simM814) + (nilaibaru.M15[5] * simM815) + (nilaibaru.M16[5] * simM816) + (nilaibaru.M17[5] * simM817) + (nilaibaru.M18[5] * simM818) + (nilaibaru.M19[5] * simM819) + (nilaibaru.M20[5] * simM820));
    pNM87 = ((nilaibaru.M1[6] * simM81) + (nilaibaru.M2[6] * simM82) + (nilaibaru.M3[6] * simM83) + (nilaibaru.M4[6] * simM84) + (nilaibaru.M5[6] * simM85) + (nilaibaru.M6[6] * simM86) + (nilaibaru.M7[6] * simM87) + (nilaibaru.M8[6] * simM88) + (nilaibaru.M9[6] * simM89) + (nilaibaru.M10[6] * simM810) + (nilaibaru.M11[6] * simM811) + (nilaibaru.M12[6] * simM812) + (nilaibaru.M13[6] * simM813) + (nilaibaru.M14[6] * simM814) + (nilaibaru.M15[6] * simM815) + (nilaibaru.M16[6] * simM816) + (nilaibaru.M17[6] * simM817) + (nilaibaru.M18[6] * simM818) + (nilaibaru.M19[6] * simM819) + (nilaibaru.M20[6] * simM820));
    pNM88 = ((nilaibaru.M1[7] * simM81) + (nilaibaru.M2[7] * simM82) + (nilaibaru.M3[7] * simM83) + (nilaibaru.M4[7] * simM84) + (nilaibaru.M5[7] * simM85) + (nilaibaru.M6[7] * simM86) + (nilaibaru.M7[7] * simM87) + (nilaibaru.M8[7] * simM88) + (nilaibaru.M9[7] * simM89) + (nilaibaru.M10[7] * simM810) + (nilaibaru.M11[7] * simM811) + (nilaibaru.M12[7] * simM812) + (nilaibaru.M13[7] * simM813) + (nilaibaru.M14[7] * simM814) + (nilaibaru.M15[7] * simM815) + (nilaibaru.M16[7] * simM816) + (nilaibaru.M17[7] * simM817) + (nilaibaru.M18[7] * simM818) + (nilaibaru.M19[7] * simM819) + (nilaibaru.M20[7] * simM820));
    pNM89 = ((nilaibaru.M1[8] * simM81) + (nilaibaru.M2[8] * simM82) + (nilaibaru.M3[8] * simM83) + (nilaibaru.M4[8] * simM84) + (nilaibaru.M5[8] * simM85) + (nilaibaru.M6[8] * simM86) + (nilaibaru.M7[8] * simM87) + (nilaibaru.M8[8] * simM88) + (nilaibaru.M9[8] * simM89) + (nilaibaru.M10[8] * simM810) + (nilaibaru.M11[8] * simM811) + (nilaibaru.M12[8] * simM812) + (nilaibaru.M13[8] * simM813) + (nilaibaru.M14[8] * simM814) + (nilaibaru.M15[8] * simM815) + (nilaibaru.M16[8] * simM816) + (nilaibaru.M17[8] * simM817) + (nilaibaru.M18[8] * simM818) + (nilaibaru.M19[8] * simM819) + (nilaibaru.M20[8] * simM820));

    var pNM91 = 0; pNM92 = 0; pNM93 = 0; pNM94 = 0; pNM95 = 0; pNM96 = 0; pNM97 = 0; pNM98 = 0; pNM99 = 0; 

    pNM91 = ((nilaibaru.M1[0] * simM91) + (nilaibaru.M2[0] * simM92) + (nilaibaru.M3[0] * simM93) + (nilaibaru.M4[0] * simM94) + (nilaibaru.M5[0] * simM95) + (nilaibaru.M6[0] * simM96) + (nilaibaru.M7[0] * simM97) + (nilaibaru.M8[0] * simM98) + (nilaibaru.M9[0] * simM99) + (nilaibaru.M10[0] * simM910) + (nilaibaru.M11[0] * simM911) + (nilaibaru.M12[0] * simM912) + (nilaibaru.M13[0] * simM913) + (nilaibaru.M14[0] * simM914) + (nilaibaru.M15[0] * simM915) + (nilaibaru.M16[0] * simM916) + (nilaibaru.M17[0] * simM917) + (nilaibaru.M18[0] * simM918) + (nilaibaru.M19[0] * simM919) + (nilaibaru.M20[0] * simM920));
    pNM92 = ((nilaibaru.M1[1] * simM91) + (nilaibaru.M2[1] * simM92) + (nilaibaru.M3[1] * simM93) + (nilaibaru.M4[1] * simM94) + (nilaibaru.M5[1] * simM95) + (nilaibaru.M6[1] * simM96) + (nilaibaru.M7[1] * simM97) + (nilaibaru.M8[1] * simM98) + (nilaibaru.M9[1] * simM99) + (nilaibaru.M10[1] * simM910) + (nilaibaru.M11[1] * simM911) + (nilaibaru.M12[1] * simM912) + (nilaibaru.M13[1] * simM913) + (nilaibaru.M14[1] * simM914) + (nilaibaru.M15[1] * simM915) + (nilaibaru.M16[1] * simM916) + (nilaibaru.M17[1] * simM917) + (nilaibaru.M18[1] * simM918) + (nilaibaru.M19[1] * simM919) + (nilaibaru.M20[1] * simM920));
    pNM93 = ((nilaibaru.M1[2] * simM91) + (nilaibaru.M2[2] * simM92) + (nilaibaru.M3[2] * simM93) + (nilaibaru.M4[2] * simM94) + (nilaibaru.M5[2] * simM95) + (nilaibaru.M6[2] * simM96) + (nilaibaru.M7[2] * simM97) + (nilaibaru.M8[2] * simM98) + (nilaibaru.M9[2] * simM99) + (nilaibaru.M10[2] * simM910) + (nilaibaru.M11[2] * simM911) + (nilaibaru.M12[2] * simM912) + (nilaibaru.M13[2] * simM913) + (nilaibaru.M14[2] * simM914) + (nilaibaru.M15[2] * simM915) + (nilaibaru.M16[2] * simM916) + (nilaibaru.M17[2] * simM917) + (nilaibaru.M18[2] * simM918) + (nilaibaru.M19[2] * simM919) + (nilaibaru.M20[2] * simM920));
    pNM94 = ((nilaibaru.M1[3] * simM91) + (nilaibaru.M2[3] * simM92) + (nilaibaru.M3[3] * simM93) + (nilaibaru.M4[3] * simM94) + (nilaibaru.M5[3] * simM95) + (nilaibaru.M6[3] * simM96) + (nilaibaru.M7[3] * simM97) + (nilaibaru.M8[3] * simM98) + (nilaibaru.M9[3] * simM99) + (nilaibaru.M10[3] * simM910) + (nilaibaru.M11[3] * simM911) + (nilaibaru.M12[3] * simM912) + (nilaibaru.M13[3] * simM913) + (nilaibaru.M14[3] * simM914) + (nilaibaru.M15[3] * simM915) + (nilaibaru.M16[3] * simM916) + (nilaibaru.M17[3] * simM917) + (nilaibaru.M18[3] * simM918) + (nilaibaru.M19[3] * simM919) + (nilaibaru.M20[3] * simM920));
    pNM95 = ((nilaibaru.M1[4] * simM91) + (nilaibaru.M2[4] * simM92) + (nilaibaru.M3[4] * simM93) + (nilaibaru.M4[4] * simM94) + (nilaibaru.M5[4] * simM95) + (nilaibaru.M6[4] * simM96) + (nilaibaru.M7[4] * simM97) + (nilaibaru.M8[4] * simM98) + (nilaibaru.M9[4] * simM99) + (nilaibaru.M10[4] * simM910) + (nilaibaru.M11[4] * simM911) + (nilaibaru.M12[4] * simM912) + (nilaibaru.M13[4] * simM913) + (nilaibaru.M14[4] * simM914) + (nilaibaru.M15[4] * simM915) + (nilaibaru.M16[4] * simM916) + (nilaibaru.M17[4] * simM917) + (nilaibaru.M18[4] * simM918) + (nilaibaru.M19[4] * simM919) + (nilaibaru.M20[4] * simM920));
    pNM96 = ((nilaibaru.M1[5] * simM91) + (nilaibaru.M2[5] * simM92) + (nilaibaru.M3[5] * simM93) + (nilaibaru.M4[5] * simM94) + (nilaibaru.M5[5] * simM95) + (nilaibaru.M6[5] * simM96) + (nilaibaru.M7[5] * simM97) + (nilaibaru.M8[5] * simM98) + (nilaibaru.M9[5] * simM99) + (nilaibaru.M10[5] * simM910) + (nilaibaru.M11[5] * simM911) + (nilaibaru.M12[5] * simM912) + (nilaibaru.M13[5] * simM913) + (nilaibaru.M14[5] * simM914) + (nilaibaru.M15[5] * simM915) + (nilaibaru.M16[5] * simM916) + (nilaibaru.M17[5] * simM917) + (nilaibaru.M18[5] * simM918) + (nilaibaru.M19[5] * simM919) + (nilaibaru.M20[5] * simM920));
    pNM97 = ((nilaibaru.M1[6] * simM91) + (nilaibaru.M2[6] * simM92) + (nilaibaru.M3[6] * simM93) + (nilaibaru.M4[6] * simM94) + (nilaibaru.M5[6] * simM95) + (nilaibaru.M6[6] * simM96) + (nilaibaru.M7[6] * simM97) + (nilaibaru.M8[6] * simM98) + (nilaibaru.M9[6] * simM99) + (nilaibaru.M10[6] * simM910) + (nilaibaru.M11[6] * simM911) + (nilaibaru.M12[6] * simM912) + (nilaibaru.M13[6] * simM913) + (nilaibaru.M14[6] * simM914) + (nilaibaru.M15[6] * simM915) + (nilaibaru.M16[6] * simM916) + (nilaibaru.M17[6] * simM917) + (nilaibaru.M18[6] * simM918) + (nilaibaru.M19[6] * simM919) + (nilaibaru.M20[6] * simM920));
    pNM98 = ((nilaibaru.M1[7] * simM91) + (nilaibaru.M2[7] * simM92) + (nilaibaru.M3[7] * simM93) + (nilaibaru.M4[7] * simM94) + (nilaibaru.M5[7] * simM95) + (nilaibaru.M6[7] * simM96) + (nilaibaru.M7[7] * simM97) + (nilaibaru.M8[7] * simM98) + (nilaibaru.M9[7] * simM99) + (nilaibaru.M10[7] * simM910) + (nilaibaru.M11[7] * simM911) + (nilaibaru.M12[7] * simM912) + (nilaibaru.M13[7] * simM913) + (nilaibaru.M14[7] * simM914) + (nilaibaru.M15[7] * simM915) + (nilaibaru.M16[7] * simM916) + (nilaibaru.M17[7] * simM917) + (nilaibaru.M18[7] * simM918) + (nilaibaru.M19[7] * simM919) + (nilaibaru.M20[7] * simM920));
    pNM99 = ((nilaibaru.M1[8] * simM91) + (nilaibaru.M2[8] * simM92) + (nilaibaru.M3[8] * simM93) + (nilaibaru.M4[8] * simM94) + (nilaibaru.M5[8] * simM95) + (nilaibaru.M6[8] * simM96) + (nilaibaru.M7[8] * simM97) + (nilaibaru.M8[8] * simM98) + (nilaibaru.M9[8] * simM99) + (nilaibaru.M10[8] * simM910) + (nilaibaru.M11[8] * simM911) + (nilaibaru.M12[8] * simM912) + (nilaibaru.M13[8] * simM913) + (nilaibaru.M14[8] * simM914) + (nilaibaru.M15[8] * simM915) + (nilaibaru.M16[8] * simM916) + (nilaibaru.M17[8] * simM917) + (nilaibaru.M18[8] * simM918) + (nilaibaru.M19[8] * simM919) + (nilaibaru.M20[8] * simM920));


    var pNM101 = 0; var pNM102 = 0; var pNM103 = 0; var pNM104 = 0; var pNM105 = 0; var pNM106 = 0; var pNM107 = 0; var pNM108 = 0; var pNM109 = 0; 

    pNM101 = ((nilaibaru.M1[0] * simM101) + (nilaibaru.M2[0] * simM102) + (nilaibaru.M3[0] * simM103) + (nilaibaru.M4[0] * simM104) + (nilaibaru.M5[0] * simM105) + (nilaibaru.M6[0] * simM106) + (nilaibaru.M7[0] * simM107) + (nilaibaru.M8[0] * simM108) + (nilaibaru.M9[0] * simM109) + (nilaibaru.M10[0] * simM1010) + (nilaibaru.M11[0] * simM1011) + (nilaibaru.M12[0] * simM1012) + (nilaibaru.M13[0] * simM1013) + (nilaibaru.M14[0] * simM1014) + (nilaibaru.M15[0] * simM1015) + (nilaibaru.M16[0] * simM1016) + (nilaibaru.M17[0] * simM1017) + (nilaibaru.M18[0] * simM1018) + (nilaibaru.M19[0] * simM1019) + (nilaibaru.M20[0] * simM1020));
    pNM102 = ((nilaibaru.M1[1] * simM101) + (nilaibaru.M2[1] * simM102) + (nilaibaru.M3[1] * simM103) + (nilaibaru.M4[1] * simM104) + (nilaibaru.M5[1] * simM105) + (nilaibaru.M6[1] * simM106) + (nilaibaru.M7[1] * simM107) + (nilaibaru.M8[1] * simM108) + (nilaibaru.M9[1] * simM109) + (nilaibaru.M10[1] * simM1010) + (nilaibaru.M11[1] * simM1011) + (nilaibaru.M12[1] * simM1012) + (nilaibaru.M13[1] * simM1013) + (nilaibaru.M14[1] * simM1014) + (nilaibaru.M15[1] * simM1015) + (nilaibaru.M16[1] * simM1016) + (nilaibaru.M17[1] * simM1017) + (nilaibaru.M18[1] * simM1018) + (nilaibaru.M19[1] * simM1019) + (nilaibaru.M20[1] * simM1020));
    pNM103 = ((nilaibaru.M1[2] * simM101) + (nilaibaru.M2[2] * simM102) + (nilaibaru.M3[2] * simM103) + (nilaibaru.M4[2] * simM104) + (nilaibaru.M5[2] * simM105) + (nilaibaru.M6[2] * simM106) + (nilaibaru.M7[2] * simM107) + (nilaibaru.M8[2] * simM108) + (nilaibaru.M9[2] * simM109) + (nilaibaru.M10[2] * simM1010) + (nilaibaru.M11[2] * simM1011) + (nilaibaru.M12[2] * simM1012) + (nilaibaru.M13[2] * simM1013) + (nilaibaru.M14[2] * simM1014) + (nilaibaru.M15[2] * simM1015) + (nilaibaru.M16[2] * simM1016) + (nilaibaru.M17[2] * simM1017) + (nilaibaru.M18[2] * simM1018) + (nilaibaru.M19[2] * simM1019) + (nilaibaru.M20[2] * simM1020));
    pNM104 = ((nilaibaru.M1[3] * simM101) + (nilaibaru.M2[3] * simM102) + (nilaibaru.M3[3] * simM103) + (nilaibaru.M4[3] * simM104) + (nilaibaru.M5[3] * simM105) + (nilaibaru.M6[3] * simM106) + (nilaibaru.M7[3] * simM107) + (nilaibaru.M8[3] * simM108) + (nilaibaru.M9[3] * simM109) + (nilaibaru.M10[3] * simM1010) + (nilaibaru.M11[3] * simM1011) + (nilaibaru.M12[3] * simM1012) + (nilaibaru.M13[3] * simM1013) + (nilaibaru.M14[3] * simM1014) + (nilaibaru.M15[3] * simM1015) + (nilaibaru.M16[3] * simM1016) + (nilaibaru.M17[3] * simM1017) + (nilaibaru.M18[3] * simM1018) + (nilaibaru.M19[3] * simM1019) + (nilaibaru.M20[3] * simM1020));
    pNM105 = ((nilaibaru.M1[4] * simM101) + (nilaibaru.M2[4] * simM102) + (nilaibaru.M3[4] * simM103) + (nilaibaru.M4[4] * simM104) + (nilaibaru.M5[4] * simM105) + (nilaibaru.M6[4] * simM106) + (nilaibaru.M7[4] * simM107) + (nilaibaru.M8[4] * simM108) + (nilaibaru.M9[4] * simM109) + (nilaibaru.M10[4] * simM1010) + (nilaibaru.M11[4] * simM1011) + (nilaibaru.M12[4] * simM1012) + (nilaibaru.M13[4] * simM1013) + (nilaibaru.M14[4] * simM1014) + (nilaibaru.M15[4] * simM1015) + (nilaibaru.M16[4] * simM1016) + (nilaibaru.M17[4] * simM1017) + (nilaibaru.M18[4] * simM1018) + (nilaibaru.M19[4] * simM1019) + (nilaibaru.M20[4] * simM1020));
    pNM106 = ((nilaibaru.M1[5] * simM101) + (nilaibaru.M2[5] * simM102) + (nilaibaru.M3[5] * simM103) + (nilaibaru.M4[5] * simM104) + (nilaibaru.M5[5] * simM105) + (nilaibaru.M6[5] * simM106) + (nilaibaru.M7[5] * simM107) + (nilaibaru.M8[5] * simM108) + (nilaibaru.M9[5] * simM109) + (nilaibaru.M10[5] * simM1010) + (nilaibaru.M11[5] * simM1011) + (nilaibaru.M12[5] * simM1012) + (nilaibaru.M13[5] * simM1013) + (nilaibaru.M14[5] * simM1014) + (nilaibaru.M15[5] * simM1015) + (nilaibaru.M16[5] * simM1016) + (nilaibaru.M17[5] * simM1017) + (nilaibaru.M18[5] * simM1018) + (nilaibaru.M19[5] * simM1019) + (nilaibaru.M20[5] * simM1020));
    pNM107 = ((nilaibaru.M1[6] * simM101) + (nilaibaru.M2[6] * simM102) + (nilaibaru.M3[6] * simM103) + (nilaibaru.M4[6] * simM104) + (nilaibaru.M5[6] * simM105) + (nilaibaru.M6[6] * simM106) + (nilaibaru.M7[6] * simM107) + (nilaibaru.M8[6] * simM108) + (nilaibaru.M9[6] * simM109) + (nilaibaru.M10[6] * simM1010) + (nilaibaru.M11[6] * simM1011) + (nilaibaru.M12[6] * simM1012) + (nilaibaru.M13[6] * simM1013) + (nilaibaru.M14[6] * simM1014) + (nilaibaru.M15[6] * simM1015) + (nilaibaru.M16[6] * simM1016) + (nilaibaru.M17[6] * simM1017) + (nilaibaru.M18[6] * simM1018) + (nilaibaru.M19[6] * simM1019) + (nilaibaru.M20[6] * simM1020));
    pNM108 = ((nilaibaru.M1[7] * simM101) + (nilaibaru.M2[7] * simM102) + (nilaibaru.M3[7] * simM103) + (nilaibaru.M4[7] * simM104) + (nilaibaru.M5[7] * simM105) + (nilaibaru.M6[7] * simM106) + (nilaibaru.M7[7] * simM107) + (nilaibaru.M8[7] * simM108) + (nilaibaru.M9[7] * simM109) + (nilaibaru.M10[7] * simM1010) + (nilaibaru.M11[7] * simM1011) + (nilaibaru.M12[7] * simM1012) + (nilaibaru.M13[7] * simM1013) + (nilaibaru.M14[7] * simM1014) + (nilaibaru.M15[7] * simM1015) + (nilaibaru.M16[7] * simM1016) + (nilaibaru.M17[7] * simM1017) + (nilaibaru.M18[7] * simM1018) + (nilaibaru.M19[7] * simM1019) + (nilaibaru.M20[7] * simM1020));
    pNM109 = ((nilaibaru.M1[8] * simM101) + (nilaibaru.M2[8] * simM102) + (nilaibaru.M3[8] * simM103) + (nilaibaru.M4[8] * simM104) + (nilaibaru.M5[8] * simM105) + (nilaibaru.M6[8] * simM106) + (nilaibaru.M7[8] * simM107) + (nilaibaru.M8[8] * simM108) + (nilaibaru.M9[8] * simM109) + (nilaibaru.M10[8] * simM1010) + (nilaibaru.M11[8] * simM1011) + (nilaibaru.M12[8] * simM1012) + (nilaibaru.M13[8] * simM1013) + (nilaibaru.M14[8] * simM1014) + (nilaibaru.M15[8] * simM1015) + (nilaibaru.M16[8] * simM1016) + (nilaibaru.M17[8] * simM1017) + (nilaibaru.M18[8] * simM1018) + (nilaibaru.M19[8] * simM1019) + (nilaibaru.M20[8] * simM1020));

    var pNM111 = 0; var pNM112 = 0; var pNM113 = 0; var pNM114 = 0; var pNM115 = 0; var pNM116 = 0; var pNM117 = 0; var pNM118 = 0; var pNM119 = 0; 

    pNM111 = ((nilaibaru.M1[0] * simM111) + (nilaibaru.M2[0] * simM112) + (nilaibaru.M3[0] * simM113) + (nilaibaru.M4[0] * simM114) + (nilaibaru.M5[0] * simM115) + (nilaibaru.M6[0] * simM116) + (nilaibaru.M7[0] * simM117) + (nilaibaru.M8[0] * simM118) + (nilaibaru.M9[0] * simM119) + (nilaibaru.M10[0] * simM1110) + (nilaibaru.M11[0] * simM1111) + (nilaibaru.M12[0] * simM1112) + (nilaibaru.M13[0] * simM1113) + (nilaibaru.M14[0] * simM1114) + (nilaibaru.M15[0] * simM1115) + (nilaibaru.M16[0] * simM1116) + (nilaibaru.M17[0] * simM1117) + (nilaibaru.M18[0] * simM1118) + (nilaibaru.M19[0] * simM1119) + (nilaibaru.M20[0] * simM1120));
    pNM112 = ((nilaibaru.M1[1] * simM111) + (nilaibaru.M2[1] * simM112) + (nilaibaru.M3[1] * simM113) + (nilaibaru.M4[1] * simM114) + (nilaibaru.M5[1] * simM115) + (nilaibaru.M6[1] * simM116) + (nilaibaru.M7[1] * simM117) + (nilaibaru.M8[1] * simM118) + (nilaibaru.M9[1] * simM119) + (nilaibaru.M10[1] * simM1110) + (nilaibaru.M11[1] * simM1111) + (nilaibaru.M12[1] * simM1112) + (nilaibaru.M13[1] * simM1113) + (nilaibaru.M14[1] * simM1114) + (nilaibaru.M15[1] * simM1115) + (nilaibaru.M16[1] * simM1116) + (nilaibaru.M17[1] * simM1117) + (nilaibaru.M18[1] * simM1118) + (nilaibaru.M19[1] * simM1119) + (nilaibaru.M20[1] * simM1120));
    pNM113 = ((nilaibaru.M1[2] * simM111) + (nilaibaru.M2[2] * simM112) + (nilaibaru.M3[2] * simM113) + (nilaibaru.M4[2] * simM114) + (nilaibaru.M5[2] * simM115) + (nilaibaru.M6[2] * simM116) + (nilaibaru.M7[2] * simM117) + (nilaibaru.M8[2] * simM118) + (nilaibaru.M9[2] * simM119) + (nilaibaru.M10[2] * simM1110) + (nilaibaru.M11[2] * simM1111) + (nilaibaru.M12[2] * simM1112) + (nilaibaru.M13[2] * simM1113) + (nilaibaru.M14[2] * simM1114) + (nilaibaru.M15[2] * simM1115) + (nilaibaru.M16[2] * simM1116) + (nilaibaru.M17[2] * simM1117) + (nilaibaru.M18[2] * simM1118) + (nilaibaru.M19[2] * simM1119) + (nilaibaru.M20[2] * simM1120));
    pNM114 = ((nilaibaru.M1[3] * simM111) + (nilaibaru.M2[3] * simM112) + (nilaibaru.M3[3] * simM113) + (nilaibaru.M4[3] * simM114) + (nilaibaru.M5[3] * simM115) + (nilaibaru.M6[3] * simM116) + (nilaibaru.M7[3] * simM117) + (nilaibaru.M8[3] * simM118) + (nilaibaru.M9[3] * simM119) + (nilaibaru.M10[3] * simM1110) + (nilaibaru.M11[3] * simM1111) + (nilaibaru.M12[3] * simM1112) + (nilaibaru.M13[3] * simM1113) + (nilaibaru.M14[3] * simM1114) + (nilaibaru.M15[3] * simM1115) + (nilaibaru.M16[3] * simM1116) + (nilaibaru.M17[3] * simM1117) + (nilaibaru.M18[3] * simM1118) + (nilaibaru.M19[3] * simM1119) + (nilaibaru.M20[3] * simM1120));
    pNM115 = ((nilaibaru.M1[4] * simM111) + (nilaibaru.M2[4] * simM112) + (nilaibaru.M3[4] * simM113) + (nilaibaru.M4[4] * simM114) + (nilaibaru.M5[4] * simM115) + (nilaibaru.M6[4] * simM116) + (nilaibaru.M7[4] * simM117) + (nilaibaru.M8[4] * simM118) + (nilaibaru.M9[4] * simM119) + (nilaibaru.M10[4] * simM1110) + (nilaibaru.M11[4] * simM1111) + (nilaibaru.M12[4] * simM1112) + (nilaibaru.M13[4] * simM1113) + (nilaibaru.M14[4] * simM1114) + (nilaibaru.M15[4] * simM1115) + (nilaibaru.M16[4] * simM1116) + (nilaibaru.M17[4] * simM1117) + (nilaibaru.M18[4] * simM1118) + (nilaibaru.M19[4] * simM1119) + (nilaibaru.M20[4] * simM1120));
    pNM116 = ((nilaibaru.M1[5] * simM111) + (nilaibaru.M2[5] * simM112) + (nilaibaru.M3[5] * simM113) + (nilaibaru.M4[5] * simM114) + (nilaibaru.M5[5] * simM115) + (nilaibaru.M6[5] * simM116) + (nilaibaru.M7[5] * simM117) + (nilaibaru.M8[5] * simM118) + (nilaibaru.M9[5] * simM119) + (nilaibaru.M10[5] * simM1110) + (nilaibaru.M11[5] * simM1111) + (nilaibaru.M12[5] * simM1112) + (nilaibaru.M13[5] * simM1113) + (nilaibaru.M14[5] * simM1114) + (nilaibaru.M15[5] * simM1115) + (nilaibaru.M16[5] * simM1116) + (nilaibaru.M17[5] * simM1117) + (nilaibaru.M18[5] * simM1118) + (nilaibaru.M19[5] * simM1119) + (nilaibaru.M20[5] * simM1120));
    pNM117 = ((nilaibaru.M1[6] * simM111) + (nilaibaru.M2[6] * simM112) + (nilaibaru.M3[6] * simM113) + (nilaibaru.M4[6] * simM114) + (nilaibaru.M5[6] * simM115) + (nilaibaru.M6[6] * simM116) + (nilaibaru.M7[6] * simM117) + (nilaibaru.M8[6] * simM118) + (nilaibaru.M9[6] * simM119) + (nilaibaru.M10[6] * simM1110) + (nilaibaru.M11[6] * simM1111) + (nilaibaru.M12[6] * simM1112) + (nilaibaru.M13[6] * simM1113) + (nilaibaru.M14[6] * simM1114) + (nilaibaru.M15[6] * simM1115) + (nilaibaru.M16[6] * simM1116) + (nilaibaru.M17[6] * simM1117) + (nilaibaru.M18[6] * simM1118) + (nilaibaru.M19[6] * simM1119) + (nilaibaru.M20[6] * simM1120));
    pNM118 = ((nilaibaru.M1[7] * simM111) + (nilaibaru.M2[7] * simM112) + (nilaibaru.M3[7] * simM113) + (nilaibaru.M4[7] * simM114) + (nilaibaru.M5[7] * simM115) + (nilaibaru.M6[7] * simM116) + (nilaibaru.M7[7] * simM117) + (nilaibaru.M8[7] * simM118) + (nilaibaru.M9[7] * simM119) + (nilaibaru.M10[7] * simM1110) + (nilaibaru.M11[7] * simM1111) + (nilaibaru.M12[7] * simM1112) + (nilaibaru.M13[7] * simM1113) + (nilaibaru.M14[7] * simM1114) + (nilaibaru.M15[7] * simM1115) + (nilaibaru.M16[7] * simM1116) + (nilaibaru.M17[7] * simM1117) + (nilaibaru.M18[7] * simM1118) + (nilaibaru.M19[7] * simM1119) + (nilaibaru.M20[7] * simM1120));
    pNM119 = ((nilaibaru.M1[8] * simM111) + (nilaibaru.M2[8] * simM112) + (nilaibaru.M3[8] * simM113) + (nilaibaru.M4[8] * simM114) + (nilaibaru.M5[8] * simM115) + (nilaibaru.M6[8] * simM116) + (nilaibaru.M7[8] * simM117) + (nilaibaru.M8[8] * simM118) + (nilaibaru.M9[8] * simM119) + (nilaibaru.M10[8] * simM1110) + (nilaibaru.M11[8] * simM1111) + (nilaibaru.M12[8] * simM1112) + (nilaibaru.M13[8] * simM1113) + (nilaibaru.M14[8] * simM1114) + (nilaibaru.M15[8] * simM1115) + (nilaibaru.M16[8] * simM1116) + (nilaibaru.M17[8] * simM1117) + (nilaibaru.M18[8] * simM1118) + (nilaibaru.M19[8] * simM1119) + (nilaibaru.M20[8] * simM1120));



    // PANM = Prediksi Akhir Nilai Mahasiswa
    var pANM11 = 0; pANM12 = 0; pANM13 = 0; pANM14 = 0; pANM15 = 0; pANM16 = 0; pANM17 = 0; pANM18 = 0; pANM19 = 0; 
    
    pANM11 = Math.ceil(rataMhs[0] + (pNM11/TSM1))
    pANM12 = Math.ceil(rataMhs[1] + (pNM12/TSM1))
    pANM13 = Math.ceil(rataMhs[2] + (pNM13/TSM1))
    pANM14 = Math.ceil(rataMhs[3] + (pNM14/TSM1))
    pANM15 = Math.ceil(rataMhs[4] + (pNM15/TSM1))
    pANM16 = Math.ceil(rataMhs[5] + (pNM16/TSM1))
    pANM17 = Math.ceil(rataMhs[6] + (pNM17/TSM1))
    pANM18 = Math.ceil(rataMhs[7] + (pNM18/TSM1))
    pANM19 = Math.ceil(rataMhs[8] + (pNM19/TSM1))

    var pANM21 = 0; pANM22 = 0; pANM23 = 0; pANM24 = 0; pANM25 = 0; pANM26 = 0; pANM27 = 0; pANM28 = 0; pANM29 = 0;
    pANM21 = Math.ceil(rataMhs[0] + (pNM21/TSM2))
    pANM22 = Math.ceil(rataMhs[1] + (pNM22/TSM2))
    pANM23 = Math.ceil(rataMhs[2] + (pNM23/TSM2))
    pANM24 = Math.ceil(rataMhs[3] + (pNM24/TSM2))
    pANM25 = Math.ceil(rataMhs[4] + (pNM25/TSM2))
    pANM26 = Math.ceil(rataMhs[5] + (pNM26/TSM2))
    pANM27 = Math.ceil(rataMhs[6] + (pNM27/TSM2))
    pANM28 = Math.ceil(rataMhs[7] + (pNM28/TSM2))
    pANM29 = Math.ceil(rataMhs[8] + (pNM29/TSM2))
        
    var pANM31 = 0; pANM32 = 0; pANM33 = 0; pANM34 = 0; pANM35 = 0; pANM36 = 0; pANM37 = 0; pANM38 = 0; pANM39 = 0;
    pANM31 = Math.ceil(rataMhs[0] + (pNM31/TSM3))
    pANM32 = Math.ceil(rataMhs[1] + (pNM32/TSM3))
    pANM33 = Math.ceil(rataMhs[2] + (pNM33/TSM3))
    pANM34 = Math.ceil(rataMhs[3] + (pNM34/TSM3))
    pANM35 = Math.ceil(rataMhs[4] + (pNM35/TSM3))
    pANM36 = Math.ceil(rataMhs[5] + (pNM36/TSM3))
    pANM37 = Math.ceil(rataMhs[6] + (pNM37/TSM3))
    pANM38 = Math.ceil(rataMhs[7] + (pNM38/TSM3))
    pANM39 = Math.ceil(rataMhs[8] + (pNM39/TSM3))

    var pANM41 = 0; pANM42 = 0; pANM43 = 0; pANM44 = 0; pANM45 = 0; pANM46 = 0; pANM47 = 0; pANM48 = 0; pANM49 = 0;
    pANM41 = Math.ceil(rataMhs[0] + (pNM41/TSM4))
    pANM42 = Math.ceil(rataMhs[1] + (pNM42/TSM4))
    pANM43 = Math.ceil(rataMhs[2] + (pNM43/TSM4))
    pANM44 = Math.ceil(rataMhs[3] + (pNM44/TSM4))
    pANM45 = Math.ceil(rataMhs[4] + (pNM45/TSM4))
    pANM46 = Math.ceil(rataMhs[5] + (pNM46/TSM4))
    pANM47 = Math.ceil(rataMhs[6] + (pNM47/TSM4))
    pANM48 = Math.ceil(rataMhs[7] + (pNM48/TSM4))
    pANM49 = Math.ceil(rataMhs[8] + (pNM49/TSM4))

    var pANM51 = 0; pANM52 = 0; pANM53 = 0; pANM54 = 0; pANM55 = 0; pANM56 = 0; pANM57 = 0; pANM58 = 0; pANM59 = 0;
    pANM51 = Math.ceil(rataMhs[0] + (pNM51/TSM5))
    pANM52 = Math.ceil(rataMhs[1] + (pNM52/TSM5))
    pANM53 = Math.ceil(rataMhs[2] + (pNM53/TSM5))
    pANM54 = Math.ceil(rataMhs[3] + (pNM54/TSM5))
    pANM55 = Math.ceil(rataMhs[4] + (pNM55/TSM5))
    pANM56 = Math.ceil(rataMhs[5] + (pNM56/TSM5))
    pANM57 = Math.ceil(rataMhs[6] + (pNM57/TSM5))
    pANM58 = Math.ceil(rataMhs[7] + (pNM58/TSM5))
    pANM59 = Math.ceil(rataMhs[8] + (pNM59/TSM5))

    var pANM61 = 0; pANM62 = 0; pANM63 = 0; pANM64 = 0; pANM65 = 0; pANM66 = 0; pANM67 = 0; pANM68 = 0; pANM69 = 0;
    pANM61 = Math.ceil(rataMhs[0] + (pNM61/TSM6))
    pANM62 = Math.ceil(rataMhs[1] + (pNM62/TSM6))
    pANM63 = Math.ceil(rataMhs[2] + (pNM63/TSM6))
    pANM64 = Math.ceil(rataMhs[3] + (pNM64/TSM6))
    pANM65 = Math.ceil(rataMhs[4] + (pNM65/TSM6))
    pANM66 = Math.ceil(rataMhs[5] + (pNM66/TSM6))
    pANM67 = Math.ceil(rataMhs[6] + (pNM67/TSM6))
    pANM68 = Math.ceil(rataMhs[7] + (pNM68/TSM6))
    pANM69 = Math.ceil(rataMhs[8] + (pNM69/TSM6))

    var pANM71 = 0; pANM72 = 0; pANM73 = 0; pANM74 = 0; pANM75 = 0; pANM76 = 0; pANM77 = 0; pANM78 = 0; pANM79 = 0;
    pANM71 = Math.ceil(rataMhs[0] + (pNM71/TSM7))
    pANM72 = Math.ceil(rataMhs[1] + (pNM72/TSM7))
    pANM73 = Math.ceil(rataMhs[2] + (pNM73/TSM7))
    pANM74 = Math.ceil(rataMhs[3] + (pNM74/TSM7))
    pANM75 = Math.ceil(rataMhs[4] + (pNM75/TSM7))
    pANM76 = Math.ceil(rataMhs[5] + (pNM76/TSM7))
    pANM77 = Math.ceil(rataMhs[6] + (pNM77/TSM7))
    pANM78 = Math.ceil(rataMhs[7] + (pNM78/TSM7))
    pANM79 = Math.ceil(rataMhs[8] + (pNM79/TSM7))

    var pANM81 = 0; pANM82 = 0; pANM83 = 0; pANM84 = 0; pANM85 = 0; pANM86 = 0; pANM87 = 0; pANM88 = 0; pANM89 = 0;
    pANM81 = Math.ceil(rataMhs[0] + (pNM81/TSM8))
    pANM82 = Math.ceil(rataMhs[1] + (pNM82/TSM8))
    pANM83 = Math.ceil(rataMhs[2] + (pNM83/TSM8))
    pANM84 = Math.ceil(rataMhs[3] + (pNM84/TSM8))
    pANM85 = Math.ceil(rataMhs[4] + (pNM85/TSM8))
    pANM86 = Math.ceil(rataMhs[5] + (pNM86/TSM8))
    pANM87 = Math.ceil(rataMhs[6] + (pNM87/TSM8))
    pANM88 = Math.ceil(rataMhs[7] + (pNM88/TSM8))
    pANM89 = Math.ceil(rataMhs[8] + (pNM89/TSM8))

    var pANM91 = 0; pANM92 = 0; pANM93 = 0; pANM94 = 0; pANM95 = 0; pANM96 = 0; pANM97 = 0; pANM98 = 0; pANM99 = 0;
    pANM91 = Math.ceil(rataMhs[0] + (pNM91/TSM9))
    pANM92 = Math.ceil(rataMhs[1] + (pNM92/TSM9))
    pANM93 = Math.ceil(rataMhs[2] + (pNM93/TSM9))
    pANM94 = Math.ceil(rataMhs[3] + (pNM94/TSM9))
    pANM95 = Math.ceil(rataMhs[4] + (pNM95/TSM9))
    pANM96 = Math.ceil(rataMhs[5] + (pNM96/TSM9))
    pANM97 = Math.ceil(rataMhs[6] + (pNM97/TSM9))
    pANM98 = Math.ceil(rataMhs[7] + (pNM98/TSM9))
    pANM99 = Math.ceil(rataMhs[8] + (pNM99/TSM9))

    var pANM101 = 0; pANM102 = 0; pANM103 = 0; pANM104 = 0; pANM105 = 0; pANM106 = 0; pANM107 = 0; pANM108 = 0; pANM109 = 0;
    pANM101 = Math.ceil(rataMhs[0] + (pNM101/TSM10))
    pANM102 = Math.ceil(rataMhs[1] + (pNM102/TSM10))
    pANM103 = Math.ceil(rataMhs[2] + (pNM103/TSM10))
    pANM104 = Math.ceil(rataMhs[3] + (pNM104/TSM10))
    pANM105 = Math.ceil(rataMhs[4] + (pNM105/TSM10))
    pANM106 = Math.ceil(rataMhs[5] + (pNM106/TSM10))
    pANM107 = Math.ceil(rataMhs[6] + (pNM107/TSM10))
    pANM108 = Math.ceil(rataMhs[7] + (pNM108/TSM10))
    pANM109 = Math.ceil(rataMhs[8] + (pNM109/TSM10))

    // var pANM111 = 0; pANM112 = 0; pANM113 = 0; pANM114 = 0; pANM115 = 0; pANM116 = 0; pANM117 = 0; pANM118 = 0; pANM119 = 0;
    // pANM111 = Math.ceil(rataMhs[0] + (pNM111/TSM11))
    // pANM112 = Math.ceil(rataMhs[1] + (pNM112/TSM11))
    // pANM113 = Math.ceil(rataMhs[2] + (pNM113/TSM11))
    // pANM114 = Math.ceil(rataMhs[3] + (pNM114/TSM11))
    // pANM115 = Math.ceil(rataMhs[4] + (pNM115/TSM11))
    // pANM116 = Math.ceil(rataMhs[5] + (pNM116/TSM11))
    // pANM117 = Math.ceil(rataMhs[6] + (pNM117/TSM11))
    // pANM118 = Math.ceil(rataMhs[7] + (pNM118/TSM11))
    // pANM119 = Math.ceil(rataMhs[8] + (pNM119/TSM11))

    // var pANM121 = 0; pANM122 = 0; pANM123 = 0; pANM124 = 0; pANM125 = 0; pANM126 = 0; pANM127 = 0; pANM128 = 0; pANM129 = 0;
    // pANM121 = Math.ceil(rataMhs[0] + (pNM121/TSM12))
    // pANM122 = Math.ceil(rataMhs[1] + (pNM122/TSM12))
    // pANM123 = Math.ceil(rataMhs[2] + (pNM123/TSM12))
    // pANM124 = Math.ceil(rataMhs[3] + (pNM124/TSM12))
    // pANM125 = Math.ceil(rataMhs[4] + (pNM125/TSM12))
    // pANM126 = Math.ceil(rataMhs[5] + (pNM126/TSM12))
    // pANM127 = Math.ceil(rataMhs[6] + (pNM127/TSM12))
    // pANM128 = Math.ceil(rataMhs[7] + (pNM128/TSM12))
    // pANM129 = Math.ceil(rataMhs[8] + (pNM129/TSM12))

    // var pANM131 = 0; pANM132 = 0; pANM133 = 0; pANM134 = 0; pANM135 = 0; pANM136 = 0; pANM137 = 0; pANM138 = 0; pANM139 = 0;
    // pANM131 = Math.ceil(rataMhs[0] + (pNM131/TSM13))
    // pANM132 = Math.ceil(rataMhs[1] + (pNM132/TSM13))
    // pANM133 = Math.ceil(rataMhs[2] + (pNM133/TSM13))
    // pANM134 = Math.ceil(rataMhs[3] + (pNM134/TSM13))
    // pANM135 = Math.ceil(rataMhs[4] + (pNM135/TSM13))
    // pANM136 = Math.ceil(rataMhs[5] + (pNM136/TSM13))
    // pANM137 = Math.ceil(rataMhs[6] + (pNM137/TSM13))
    // pANM138 = Math.ceil(rataMhs[7] + (pNM138/TSM13))
    // pANM139 = Math.ceil(rataMhs[8] + (pNM139/TSM13))

    // var pANM141 = 0; pANM142 = 0; pANM143 = 0; pANM144 = 0; pANM145 = 0; pANM146 = 0; pANM147 = 0; pANM148 = 0; pANM149 = 0;
    // pANM141 = Math.ceil(rataMhs[0] + (pNM141/TSM14))
    // pANM142 = Math.ceil(rataMhs[1] + (pNM142/TSM14))
    // pANM143 = Math.ceil(rataMhs[2] + (pNM143/TSM14))
    // pANM144 = Math.ceil(rataMhs[3] + (pNM144/TSM14))
    // pANM145 = Math.ceil(rataMhs[4] + (pNM145/TSM14))
    // pANM146 = Math.ceil(rataMhs[5] + (pNM146/TSM14))
    // pANM147 = Math.ceil(rataMhs[6] + (pNM147/TSM14))
    // pANM148 = Math.ceil(rataMhs[7] + (pNM148/TSM14))
    // pANM149 = Math.ceil(rataMhs[8] + (pNM149/TSM14))

    // var pANM151 = 0; pANM152 = 0; pANM153 = 0; pANM154 = 0; pANM155 = 0; pANM156 = 0; pANM157 = 0; pANM158 = 0; pANM159 = 0;
    // pANM151 = Math.ceil(rataMhs[0] + (pNM151/TSM15))
    // pANM152 = Math.ceil(rataMhs[1] + (pNM152/TSM15))
    // pANM153 = Math.ceil(rataMhs[2] + (pNM153/TSM15))
    // pANM154 = Math.ceil(rataMhs[3] + (pNM154/TSM15))
    // pANM155 = Math.ceil(rataMhs[4] + (pNM155/TSM15))
    // pANM156 = Math.ceil(rataMhs[5] + (pNM156/TSM15))
    // pANM157 = Math.ceil(rataMhs[6] + (pNM157/TSM15))
    // pANM158 = Math.ceil(rataMhs[7] + (pNM158/TSM15))
    // pANM159 = Math.ceil(rataMhs[8] + (pNM159/TSM15))

    // var pANM161 = 0; pANM162 = 0; pANM163 = 0; pANM164 = 0; pANM165 = 0; pANM166 = 0; pANM167 = 0; pANM168 = 0; pANM169 = 0;
    // pANM161 = Math.ceil(rataMhs[0] + (pNM161/TSM16))
    // pANM162 = Math.ceil(rataMhs[1] + (pNM162/TSM16))
    // pANM163 = Math.ceil(rataMhs[2] + (pNM163/TSM16))
    // pANM164 = Math.ceil(rataMhs[3] + (pNM164/TSM16))
    // pANM165 = Math.ceil(rataMhs[4] + (pNM165/TSM16))
    // pANM166 = Math.ceil(rataMhs[5] + (pNM166/TSM16))
    // pANM167 = Math.ceil(rataMhs[6] + (pNM167/TSM16))
    // pANM168 = Math.ceil(rataMhs[7] + (pNM168/TSM16))
    // pANM169 = Math.ceil(rataMhs[8] + (pNM169/TSM16))

    // var pANM171 = 0; pANM172 = 0; pANM173 = 0; pANM174 = 0; pANM175 = 0; pANM176 = 0; pANM177 = 0; pANM178 = 0; pANM179 = 0;
    // pANM171 = Math.ceil(rataMhs[0] + (pNM171/TSM17))
    // pANM172 = Math.ceil(rataMhs[1] + (pNM172/TSM17))
    // pANM173 = Math.ceil(rataMhs[2] + (pNM173/TSM17))
    // pANM174 = Math.ceil(rataMhs[3] + (pNM174/TSM17))
    // pANM175 = Math.ceil(rataMhs[4] + (pNM175/TSM17))
    // pANM176 = Math.ceil(rataMhs[5] + (pNM176/TSM17))
    // pANM177 = Math.ceil(rataMhs[6] + (pNM177/TSM17))
    // pANM178 = Math.ceil(rataMhs[7] + (pNM178/TSM17))
    // pANM179 = Math.ceil(rataMhs[8] + (pNM179/TSM17))

    // var pANM181 = 0; pANM182 = 0; pANM183 = 0; pANM184 = 0; pANM185 = 0; pANM186 = 0; pANM187 = 0; pANM188 = 0; pANM189 = 0;
    // pANM181 = Math.ceil(rataMhs[0] + (pNM181/TSM18))
    // pANM182 = Math.ceil(rataMhs[1] + (pNM182/TSM18))
    // pANM183 = Math.ceil(rataMhs[2] + (pNM183/TSM18))
    // pANM184 = Math.ceil(rataMhs[3] + (pNM184/TSM18))
    // pANM185 = Math.ceil(rataMhs[4] + (pNM185/TSM18))
    // pANM186 = Math.ceil(rataMhs[5] + (pNM186/TSM18))
    // pANM187 = Math.ceil(rataMhs[6] + (pNM187/TSM18))
    // pANM188 = Math.ceil(rataMhs[7] + (pNM188/TSM18))
    // pANM189 = Math.ceil(rataMhs[8] + (pNM189/TSM18))

    // var pANM191 = 0; pANM192 = 0; pANM193 = 0; pANM194 = 0; pANM195 = 0; pANM196 = 0; pANM197 = 0; pANM198 = 0; pANM199 = 0;
    // pANM191 = Math.ceil(rataMhs[0] + (pNM191/TSM19))
    // pANM192 = Math.ceil(rataMhs[1] + (pNM192/TSM19))
    // pANM193 = Math.ceil(rataMhs[2] + (pNM193/TSM19))
    // pANM194 = Math.ceil(rataMhs[3] + (pNM194/TSM19))
    // pANM195 = Math.ceil(rataMhs[4] + (pNM195/TSM19))
    // pANM196 = Math.ceil(rataMhs[5] + (pNM196/TSM19))
    // pANM197 = Math.ceil(rataMhs[6] + (pNM197/TSM19))
    // pANM198 = Math.ceil(rataMhs[7] + (pNM198/TSM19))
    // pANM199 = Math.ceil(rataMhs[8] + (pNM199/TSM19))

    // var pANM201 = 0; pANM202 = 0; pANM203 = 0; pANM204 = 0; pANM205 = 0; pANM206 = 0; pANM207 = 0; pANM208 = 0; pANM209 = 0;    
    // pANM201 = Math.ceil(rataMhs[0] + (pNM201/TSM20))
    // pANM202 = Math.ceil(rataMhs[1] + (pNM202/TSM20))
    // pANM203 = Math.ceil(rataMhs[2] + (pNM203/TSM20))
    // pANM204 = Math.ceil(rataMhs[3] + (pNM204/TSM20))
    // pANM205 = Math.ceil(rataMhs[4] + (pNM205/TSM20))
    // pANM206 = Math.ceil(rataMhs[5] + (pNM206/TSM20))
    // pANM207 = Math.ceil(rataMhs[6] + (pNM207/TSM20))
    // pANM208 = Math.ceil(rataMhs[7] + (pNM208/TSM20))
    // pANM209 = Math.ceil(rataMhs[8] + (pNM209/TSM20))

    // MAE Mhs
    pMAE11 = 0; pMAE12 = 0; pMAE13 = 0; pMAE14 = 0; pMAE15 = 0; pMAE16 = 0; pMAE17 = 0; pMAE18 = 0; pMAE19 = 0;
    for (var d = 0; d < nilaibaru.M11.length;d++) {
        pMAE111 = pANM11 - nilaibaru.M11[d];
    }
        
        
    // }
    // for (var d = 0; d < nilaibaru.K1.length;d++) {
    //     MAEK11 = PK11 - nilaibaru.K1[d]
    //     MAEK21 = PK21 - nilaibaru.K2[d]
    //     MAEK31 = PK31 - nilaibaru.K3[d]
    //     MAEK41 = PK41 - nilaibaru.K4[d]
    //     MAEK51 = PK51 - nilaibaru.K5[d]
        
    //     MAEK12 = PK12 - nilaibaru.K1[d]
    //     MAEK22 = PK22 - nilaibaru.K2[d]
    //     MAEK32 = PK32 - nilaibaru.K3[d]
    //     MAEK42 = PK42 - nilaibaru.K4[d]
    //     MAEK52 = PK52 - nilaibaru.K5[d]

    //     MAEK13 = PK13 - nilaibaru.K1[d]
    //     MAEK23 = PK23 - nilaibaru.K2[d]
    //     MAEK33 = PK33 - nilaibaru.K3[d]
    //     MAEK43 = PK43 - nilaibaru.K4[d]
    //     MAEK53 = PK53 - nilaibaru.K5[d]

    //     MAEK14 = PK14 - nilaibaru.K1[d]
    //     MAEK24 = PK24 - nilaibaru.K2[d]
    //     MAEK34 = PK34 - nilaibaru.K3[d]
    //     MAEK44 = PK44 - nilaibaru.K4[d]
    //     MAEK54 = PK54 - nilaibaru.K5[d]

    //     MAEK15 = PK15 - nilaibaru.K1[d]
    //     MAEK25 = PK25 - nilaibaru.K2[d]
    //     MAEK35 = PK35 - nilaibaru.K3[d]
    //     MAEK45 = PK45 - nilaibaru.K4[d]
    //     MAEK55 = PK55 - nilaibaru.K5[d]
    // }

    // for (var d = 0; d < nilaibaru.K1.length;d++) {
    //     MAET1 = (MAEK11 + MAEK12 + MAEK13 + MAEK14 + MAEK15)/5
    //     MAET2 = (MAEK21 + MAEK22 + MAEK23 + MAEK24 + MAEK25)/5
    //     MAET3 = (MAEK31 + MAEK32 + MAEK33 + MAEK34 + MAEK35)/5
    //     MAET4 = (MAEK41 + MAEK42 + MAEK43 + MAEK44 + MAEK45)/5
    //     MAET5 = (MAEK51 + MAEK52 + MAEK53 + MAEK54 + MAEK55)/5
    // }

    // console.log(MAET1)
    // console.log(MAET2)
    // console.log(MAET3)
    // console.log(MAET4)
    // console.log(MAET5)

    // Mhs1
    if(usernilai=="Mhs1"){
        window.localStorage.setItem("pred1", pANM11); 
        window.localStorage.setItem("pred2", pANM12);
        window.localStorage.setItem("pred3", pANM13);
        window.localStorage.setItem("pred4", pANM14);
        window.localStorage.setItem("pred5", pANM15);
        window.localStorage.setItem("pred6", pANM16);
        window.localStorage.setItem("pred7", pANM17);
        window.localStorage.setItem("pred8", pANM18);
        window.localStorage.setItem("pred9", pANM19);
    }
    
    // Mhs2
    if(usernilai=="Mhs2"){
        window.localStorage.setItem("pred1",pANM21);
        window.localStorage.setItem("pred2",pANM22);
        window.localStorage.setItem("pred3",pANM23);
        window.localStorage.setItem("pred4",pANM24);
        window.localStorage.setItem("pred5",pANM25);
        window.localStorage.setItem("pred6",pANM26);
        window.localStorage.setItem("pred7",pANM27);
        window.localStorage.setItem("pred8",pANM28);
        window.localStorage.setItem("pred9",pANM29);
    }

    // Mhs3
    if(usernilai=="Mhs3"){
        window.localStorage.setItem("pred1",pANM31);
        window.localStorage.setItem("pred2",pANM32);
        window.localStorage.setItem("pred3",pANM33);
        window.localStorage.setItem("pred4",pANM34);
        window.localStorage.setItem("pred5",pANM35);
        window.localStorage.setItem("pred6",pANM36);
        window.localStorage.setItem("pred7",pANM37);
        window.localStorage.setItem("pred8",pANM38);
        window.localStorage.setItem("pred9",pANM39);
    }

    // Mhs4
    if(usernilai=="Mhs4"){
        window.localStorage.setItem("pred1",pANM41);
        window.localStorage.setItem("pred2",pANM42);
        window.localStorage.setItem("pred3",pANM43);
        window.localStorage.setItem("pred4",pANM44);
        window.localStorage.setItem("pred5",pANM45);
        window.localStorage.setItem("pred6",pANM46);
        window.localStorage.setItem("pred7",pANM47);
        window.localStorage.setItem("pred8",pANM48);
        window.localStorage.setItem("pred9",pANM49);
    }

    // Mhs5
    if(usernilai=="Mhs5"){
        window.localStorage.setItem("pred1",pANM51);
        window.localStorage.setItem("pred2",pANM52);
        window.localStorage.setItem("pred3",pANM53);
        window.localStorage.setItem("pred4",pANM54);
        window.localStorage.setItem("pred5",pANM55);
        window.localStorage.setItem("pred6",pANM56);
        window.localStorage.setItem("pred7",pANM57);
        window.localStorage.setItem("pred8",pANM58);
        window.localStorage.setItem("pred9",pANM59);
    }

    // Mhs6
    if(usernilai=="Mhs6"){
        window.localStorage.setItem("pred1",pANM61);
        window.localStorage.setItem("pred2",pANM62);
        window.localStorage.setItem("pred3",pANM63);
        window.localStorage.setItem("pred4",pANM64);
        window.localStorage.setItem("pred5",pANM65);
        window.localStorage.setItem("pred6",pANM66);
        window.localStorage.setItem("pred7",pANM67);
        window.localStorage.setItem("pred8",pANM68);
        window.localStorage.setItem("pred9",pANM69);
    }

    // Mhs7
    if(usernilai=="Mhs7"){
        window.localStorage.setItem("pred1",pANM71);
        window.localStorage.setItem("pred2",pANM72);
        window.localStorage.setItem("pred3",pANM73);
        window.localStorage.setItem("pred4",pANM74);
        window.localStorage.setItem("pred5",pANM75);
        window.localStorage.setItem("pred6",pANM76);
        window.localStorage.setItem("pred7",pANM77);
        window.localStorage.setItem("pred8",pANM78);
        window.localStorage.setItem("pred9",pANM79);
    }

    // Mhs8
    if(usernilai=="Mhs8"){
        window.localStorage.setItem("pred1",pANM81);
        window.localStorage.setItem("pred2",pANM82);
        window.localStorage.setItem("pred3",pANM83);
        window.localStorage.setItem("pred4",pANM84);
        window.localStorage.setItem("pred5",pANM85);
        window.localStorage.setItem("pred6",pANM86);
        window.localStorage.setItem("pred7",pANM87);
        window.localStorage.setItem("pred8",pANM88);
        window.localStorage.setItem("pred9",pANM89);
    }

    // Mhs9
    if(usernilai=="Mhs9"){
        window.localStorage.setItem("pred1",pANM91);
        window.localStorage.setItem("pred2",pANM92);
        window.localStorage.setItem("pred3",pANM93);
        window.localStorage.setItem("pred4",pANM94);
        window.localStorage.setItem("pred5",pANM95);
        window.localStorage.setItem("pred6",pANM96);
        window.localStorage.setItem("pred7",pANM97);
        window.localStorage.setItem("pred8",pANM98);
        window.localStorage.setItem("pred9",pANM99);
    }

    // Mhs10
    if(usernilai=="Mhs10"){
        window.localStorage.setItem("pred1",pANM101);
        window.localStorage.setItem("pred2",pANM102);
        window.localStorage.setItem("pred3",pANM103);
        window.localStorage.setItem("pred4",pANM104);
        window.localStorage.setItem("pred5",pANM105);
        window.localStorage.setItem("pred6",pANM106);
        window.localStorage.setItem("pred7",pANM107);
        window.localStorage.setItem("pred8",pANM108);
        window.localStorage.setItem("pred9",pANM109);
    }
</script>


<span id="unamemhs" ><%= JSON.stringify(datalist) %></span>
<script>
    // <!-- UserName -->
    var unamemhs = JSON.parse($('#unamemhs').text());
    $('#unamemhs').remove();
    // console.log(unamemhs);

    // MK 1 + Nilai
    var MK1 = JSON.parse($('#ANN').text());
    $('#ANN').remove();
    var HMk1 = JSON.parse($('#HMk1').text());
    $('#HMk1').remove();

    // MK 2 + Nilai
    var MK2 = JSON.parse($('#ML').text());
    $('#ML').remove();
    var HMk2 = JSON.parse($('#HMk2').text());
    $('#HMk2').remove();

    // MK 3 + Nilai
    var MK3 = JSON.parse($('#COMVIS').text());
    $('#COMVIS').remove();
    var HMk3 = JSON.parse($('#HMk3').text());
    $('#HMk3').remove();

    // MK 4 + Nilai
    var MK4 = JSON.parse($('#DM').text());
    $('#DM').remove();
    var HMk4 = JSON.parse($('#HMk4').text());
    $('#HMk4').remove();

    // MK 5 + Nilai
    var MK5 = JSON.parse($('#NLP').text());
    $('#NLP').remove();
    var HMk5 = JSON.parse($('#HMk5').text());
    $('#HMk5').remove();

    // Set Item 1 + Nilai
    window.localStorage.setItem("ANN", MK1);
    window.localStorage.setItem("HMk1", HMk1);

    // Set Item 2 + Nilai
    window.localStorage.setItem("ML", MK2);
    window.localStorage.setItem("HMk2", HMk2);

    // Set Item 3 + Nilai
    window.localStorage.setItem("COMVIS", MK3);
    window.localStorage.setItem("HMk3", HMk3);

    // Set Item 4 + Nilai
    window.localStorage.setItem("DM", MK4);
    window.localStorage.setItem("HMk4", HMk4);

    // Set Item 5 + Nilai
    window.localStorage.setItem("NLP", MK5);
    window.localStorage.setItem("HMk5", HMk5);

    // // Set Item 6 + Nilai
    // window.localStorage.setItem("MK6", MK6);
    // window.localStorage.setItem("HMk6", HMk6);

    // // Set Item 7 + Nilai
    // window.localStorage.setItem("MK7", MK7);
    // window.localStorage.setItem("HMk7", HMk7);

    // // Set Item 8 + Nilai
    // window.localStorage.setItem("MK8", MK8);
    // window.localStorage.setItem("HMk8", HMk8);

    // //RataMK Satuan
    // window.localStorage.setItem("rataDA", JSON.stringify(rataMK[0]));
    // window.localStorage.setItem("rataML", JSON.stringify(rataMK[1]));
    // window.localStorage.setItem("rataNLP", JSON.stringify(rataMK[2]));
    // window.localStorage.setItem("rataBPR", JSON.stringify(rataMK[3]));
    // window.localStorage.setItem("rataANN", JSON.stringify(rataMK[4]));
    // window.localStorage.setItem("rataCV", JSON.stringify(rataMK[5]));
    // window.localStorage.setItem("rataGD", JSON.stringify(rataMK[6]));
    // window.localStorage.setItem("rataGS", JSON.stringify(rataMK[7]));
    // window.localStorage.setItem("rataJP", JSON.stringify(rataMK[8]));

    // // RataMhs Satuan
    // window.localStorage.setItem("rataM1", JSON.stringify(rataMhs[0])); 
    // window.localStorage.setItem("rataM2", JSON.stringify(rataMhs[1]));
    // window.localStorage.setItem("rataM3", JSON.stringify(rataMhs[2]));
    // window.localStorage.setItem("rataM4", JSON.stringify(rataMhs[3]));
    // window.localStorage.setItem("rataM5", JSON.stringify(rataMhs[4]));
    // window.localStorage.setItem("rataM6", JSON.stringify(rataMhs[5]));
    // window.localStorage.setItem("rataM7", JSON.stringify(rataMhs[6]));
    // window.localStorage.setItem("rataM8", JSON.stringify(rataMhs[7]));
    // window.localStorage.setItem("rataM9", JSON.stringify(rataMhs[8]));

    
</script>


</body>
</html>